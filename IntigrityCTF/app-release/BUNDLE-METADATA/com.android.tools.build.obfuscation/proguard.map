# compiler: R8
# compiler_version: 8.1.56
# min_api: 21
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: 6931a3e
# pg_map_hash: SHA-256 6931a3e2d1bd749b2f331b6e9f5600f35d460b415cb3437069f0dc74e336b1ba
_COROUTINE.ArtificialStackFrames -> a.a:
    void <init>() -> <init>
    1:1:java.lang.StackTraceElement coroutineBoundary():0:0 -> a
_COROUTINE.CoroutineDebuggingKt -> a.b:
    java.lang.String ARTIFICIAL_FRAME_PACKAGE_NAME -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.StackTraceElement access$artificialFrame(java.lang.Throwable,java.lang.String):0:0 -> a
    1:1:java.lang.StackTraceElement artificialFrame(java.lang.Throwable,java.lang.String):0:0 -> b
_COROUTINE._BOUNDARY -> a.c:
android.app.ForegroundServiceStartNotAllowedException -> android.app.ForegroundServiceStartNotAllowedException:
# {"id":"com.android.tools.r8.synthesized"}
android.app.ServiceStartNotAllowedException -> android.app.ServiceStartNotAllowedException:
# {"id":"com.android.tools.r8.synthesized"}
android.support.customtabs.ICustomTabsCallback -> android.support.customtabs.ICustomTabsCallback:
    java.lang.String DESCRIPTOR -> a
    void onPostMessage(java.lang.String,android.os.Bundle) -> D
    void extraCallback(java.lang.String,android.os.Bundle) -> G
    void onActivityLayout(int,int,int,int,int,android.os.Bundle) -> K
    void onMessageChannelReady(android.os.Bundle) -> L
    void onRelationshipValidationResult(int,android.net.Uri,boolean,android.os.Bundle) -> T
    void onWarmupCompleted(android.os.Bundle) -> Y
    void onMinimized(android.os.Bundle) -> Z
    void onUnminimized(android.os.Bundle) -> f0
    void onNavigationEvent(int,android.os.Bundle) -> g0
    void onActivityResized(int,int,android.os.Bundle) -> h
    android.os.Bundle extraCallbackWithResult(java.lang.String,android.os.Bundle) -> j
android.support.customtabs.ICustomTabsCallback$Stub$Proxy -> android.support.customtabs.ICustomTabsCallback$Stub$a:
    android.os.IBinder mRemote -> o
android.support.customtabs.ICustomTabsCallback$_Parcel -> android.support.customtabs.ICustomTabsCallback$a:
    1:1:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:1:void access$100(android.os.Parcel,android.os.Parcelable,int):0:0 -> b
    1:1:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> c
    1:1:void writeTypedObject(android.os.Parcel,android.os.Parcelable,int):0:0 -> d
android.support.customtabs.ICustomTabsService -> android.support.customtabs.ICustomTabsService:
    java.lang.String DESCRIPTOR -> b
    boolean newSessionWithExtras(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> B
    boolean warmup(long) -> N
    boolean setEngagementSignalsCallback(android.support.customtabs.ICustomTabsCallback,android.os.IBinder,android.os.Bundle) -> R
    boolean receiveFile(android.support.customtabs.ICustomTabsCallback,android.net.Uri,int,android.os.Bundle) -> V
    boolean isEngagementSignalsApiAvailable(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> a0
    boolean updateVisuals(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> c0
    boolean requestPostMessageChannel(android.support.customtabs.ICustomTabsCallback,android.net.Uri) -> f
    android.os.Bundle extraCommand(java.lang.String,android.os.Bundle) -> k
    int postMessage(android.support.customtabs.ICustomTabsCallback,java.lang.String,android.os.Bundle) -> q
    boolean mayLaunchUrl(android.support.customtabs.ICustomTabsCallback,android.net.Uri,android.os.Bundle,java.util.List) -> s
    boolean newSession(android.support.customtabs.ICustomTabsCallback) -> x
    boolean validateRelationship(android.support.customtabs.ICustomTabsCallback,int,android.net.Uri,android.os.Bundle) -> y
    boolean requestPostMessageChannelWithExtras(android.support.customtabs.ICustomTabsCallback,android.net.Uri,android.os.Bundle) -> z
android.support.customtabs.ICustomTabsService$Stub$Proxy -> android.support.customtabs.ICustomTabsService$Stub$a:
    android.os.IBinder mRemote -> o
android.support.customtabs.ICustomTabsService$_Parcel -> android.support.customtabs.ICustomTabsService$a:
    1:1:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:1:void access$100(android.os.Parcel,android.os.Parcelable,int):0:0 -> b
    1:1:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> c
    1:1:void writeTypedObject(android.os.Parcel,android.os.Parcelable,int):0:0 -> d
android.support.customtabs.IEngagementSignalsCallback -> android.support.customtabs.IEngagementSignalsCallback:
    java.lang.String DESCRIPTOR -> c
    void onVerticalScrollEvent(boolean,android.os.Bundle) -> W
    void onGreatestScrollPercentageIncreased(int,android.os.Bundle) -> d0
    void onSessionEnded(boolean,android.os.Bundle) -> u
android.support.customtabs.IEngagementSignalsCallback$Stub$Proxy -> android.support.customtabs.IEngagementSignalsCallback$Stub$a:
    android.os.IBinder mRemote -> o
android.support.customtabs.IEngagementSignalsCallback$_Parcel -> android.support.customtabs.IEngagementSignalsCallback$a:
    1:1:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:1:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> b
android.support.customtabs.IPostMessageService -> android.support.customtabs.IPostMessageService:
    java.lang.String DESCRIPTOR -> d
    void onMessageChannelReady(android.support.customtabs.ICustomTabsCallback,android.os.Bundle) -> A
    void onPostMessage(android.support.customtabs.ICustomTabsCallback,java.lang.String,android.os.Bundle) -> h0
android.support.customtabs.IPostMessageService$Stub$Proxy -> android.support.customtabs.IPostMessageService$Stub$a:
    android.os.IBinder mRemote -> o
android.support.customtabs.IPostMessageService$_Parcel -> android.support.customtabs.IPostMessageService$a:
    1:1:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:1:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> b
android.support.customtabs.trusted.ITrustedWebActivityCallback -> android.support.customtabs.trusted.ITrustedWebActivityCallback:
    java.lang.String DESCRIPTOR -> e
    void onExtraCallback(java.lang.String,android.os.Bundle) -> J
android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub$Proxy -> android.support.customtabs.trusted.ITrustedWebActivityCallback$Stub$a:
    android.os.IBinder mRemote -> o
android.support.customtabs.trusted.ITrustedWebActivityCallback$_Parcel -> android.support.customtabs.trusted.ITrustedWebActivityCallback$a:
    1:1:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:1:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> b
android.support.customtabs.trusted.ITrustedWebActivityService -> android.support.customtabs.trusted.ITrustedWebActivityService:
    java.lang.String DESCRIPTOR -> f
    android.os.Bundle getActiveNotifications() -> F
    void cancelNotification(android.os.Bundle) -> M
    android.os.Bundle notifyNotificationWithChannel(android.os.Bundle) -> S
    int getSmallIconId() -> i
    android.os.Bundle getSmallIconBitmap() -> l
    android.os.Bundle areNotificationsEnabled(android.os.Bundle) -> p
    android.os.Bundle extraCommand(java.lang.String,android.os.Bundle,android.os.IBinder) -> t
android.support.customtabs.trusted.ITrustedWebActivityService$Stub$Proxy -> android.support.customtabs.trusted.ITrustedWebActivityService$Stub$a:
    android.os.IBinder mRemote -> o
android.support.customtabs.trusted.ITrustedWebActivityService$_Parcel -> android.support.customtabs.trusted.ITrustedWebActivityService$a:
    1:1:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:1:void access$100(android.os.Parcel,android.os.Parcelable,int):0:0 -> b
    1:1:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> c
    1:1:void writeTypedObject(android.os.Parcel,android.os.Parcelable,int):0:0 -> d
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    java.lang.String DESCRIPTOR -> g
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> P
    void cancelAll(java.lang.String) -> b
    void cancel(java.lang.String,int,java.lang.String) -> o
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$a:
    android.os.IBinder mRemote -> o
    1:1:void notify(java.lang.String,int,java.lang.String,android.app.Notification):0:0 -> P
    1:1:void cancelAll(java.lang.String):0:0 -> b
    1:1:void cancel(java.lang.String,int,java.lang.String):0:0 -> o
android.support.v4.app.INotificationSideChannel$_Parcel -> android.support.v4.app.INotificationSideChannel$a:
    1:1:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:1:void access$100(android.os.Parcel,android.os.Parcelable,int):0:0 -> b
    1:1:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> c
    1:1:void writeTypedObject(android.os.Parcel,android.os.Parcelable,int):0:0 -> d
android.support.v4.os.IResultReceiver -> android.support.v4.os.IResultReceiver:
    java.lang.String DESCRIPTOR -> i
    void send(int,android.os.Bundle) -> a
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$a:
    android.os.IBinder mRemote -> o
android.support.v4.os.IResultReceiver$_Parcel -> android.support.v4.os.IResultReceiver$a:
    1:1:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:1:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> b
android.support.v4.os.IResultReceiver2 -> android.support.v4.os.IResultReceiver2:
    java.lang.String DESCRIPTOR -> h
    void send(int,android.os.Bundle) -> a
android.support.v4.os.IResultReceiver2$Stub$Proxy -> android.support.v4.os.IResultReceiver2$Stub$a:
    android.os.IBinder mRemote -> o
android.support.v4.os.IResultReceiver2$_Parcel -> android.support.v4.os.IResultReceiver2$a:
    1:1:java.lang.Object access$000(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> a
    1:1:java.lang.Object readTypedObject(android.os.Parcel,android.os.Parcelable$Creator):0:0 -> b
androidx.arch.core.executor.ArchTaskExecutor -> b.c:
    androidx.arch.core.executor.TaskExecutor mDelegate -> a
    androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor -> b
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> c
    java.util.concurrent.Executor sMainThreadExecutor -> d
    java.util.concurrent.Executor sIOThreadExecutor -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void executeOnDiskIO(java.lang.Runnable):0:0 -> a
    1:1:boolean isMainThread():0:0 -> b
    1:1:void postToMainThread(java.lang.Runnable):0:0 -> c
    1:1:void $r8$lambda$660dvPX9TmFUAes_5pIFbpOEa8M(java.lang.Runnable):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$B-NyukiANkmKkd3XkhAfbEit2Bs(java.lang.Runnable):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.concurrent.Executor getIOThreadExecutor():0:0 -> f
    1:1:androidx.arch.core.executor.ArchTaskExecutor getInstance():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb/c;"}
    1:1:void lambda$static$0(java.lang.Runnable):0:0 -> h
    1:1:void lambda$static$1(java.lang.Runnable):0:0 -> i
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0 -> b.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda1 -> b.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$1.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.DefaultTaskExecutor -> b.d:
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    android.os.Handler mMainHandler -> c
    1:1:void <init>():0:0 -> <init>
    1:1:void executeOnDiskIO(java.lang.Runnable):0:0 -> a
    1:1:boolean isMainThread():0:0 -> b
    1:1:void postToMainThread(java.lang.Runnable):0:0 -> c
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> d
androidx.arch.core.executor.DefaultTaskExecutor$1 -> b.d$a:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    androidx.arch.core.executor.DefaultTaskExecutor this$0 -> b
    1:1:void <init>(androidx.arch.core.executor.DefaultTaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb/d;)V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl -> b.d$b:
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.arch.core.executor.TaskExecutor -> b.e:
    void <init>() -> <init>
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> b
    void postToMainThread(java.lang.Runnable) -> c
androidx.arch.core.internal.FastSafeIterableMap -> c.a:
    java.util.HashMap mHashMap -> i
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lc/b$c;"}
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> h
    1:1:java.util.Map$Entry ceil(java.lang.Object):0:0 -> i
androidx.arch.core.internal.SafeIterableMap -> c.b:
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> e
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> f
    java.util.WeakHashMap mIterators -> g
    int mSize -> h
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.Iterator descendingIterator():0:0 -> a
    1:1:java.util.Map$Entry eldest():0:0 -> b
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lc/b$c;"}
    1:1:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc/b$d;"}
    1:1:java.util.Map$Entry newest():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Lc/b$c;"}
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> c.b$a:
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;Lc/b$c;)V"}
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)Lc/b$c;"}
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)Lc/b$c;"}
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> c.b$b:
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;Lc/b$c;)V"}
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)Lc/b$c;"}
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)Lc/b$c;"}
androidx.arch.core.internal.SafeIterableMap$Entry -> c.b$c:
    java.lang.Object mKey -> a
    java.lang.Object mValue -> b
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> c
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> d
    1:1:void <init>(java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:1:java.lang.String toString():0:0 -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> c.b$d:
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> a
    boolean mBeforeStart -> b
    androidx.arch.core.internal.SafeIterableMap this$0 -> c
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b;)V"}
    1:1:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)V"}
    1:1:java.util.Map$Entry next():0:0 -> b
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> c.b$e:
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> a
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> b
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;Lc/b$c;)V"}
    1:1:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)V"}
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)Lc/b$c;"}
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)Lc/b$c;"}
    1:1:java.util.Map$Entry next():0:0 -> d
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry nextNode():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc/b$c;"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> c.b$f:
    void <init>() -> <init>
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)V"}
androidx.arch.core.util.Function -> d.a:
androidx.browser.R$dimen -> e.a:
    int browser_actions_context_menu_max_width -> a
    int browser_actions_context_menu_min_padding -> b
androidx.browser.browseractions.BrowserActionsFallbackMenuView -> androidx.browser.browseractions.BrowserActionsFallbackMenuView:
    int mBrowserActionsMenuMinPaddingPx -> a
    int mBrowserActionsMenuMaxWidthPx -> b
androidx.browser.customtabs.CustomTabColorSchemeParams -> androidx.browser.customtabs.a:
    java.lang.Integer toolbarColor -> a
    java.lang.Integer secondaryToolbarColor -> b
    java.lang.Integer navigationBarColor -> c
    java.lang.Integer navigationBarDividerColor -> d
    1:1:android.os.Bundle toBundle():0:0 -> a
androidx.browser.customtabs.CustomTabColorSchemeParams$Builder -> androidx.browser.customtabs.a$a:
    java.lang.Integer mToolbarColor -> a
    java.lang.Integer mSecondaryToolbarColor -> b
    java.lang.Integer mNavigationBarColor -> c
    java.lang.Integer mNavigationBarDividerColor -> d
    1:1:androidx.browser.customtabs.CustomTabColorSchemeParams build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/browser/customtabs/a;"}
androidx.browser.customtabs.CustomTabsClient -> androidx.browser.customtabs.b:
    1:1:java.lang.String getPackageName(android.content.Context,java.util.List):0:0 -> a
    1:1:java.lang.String getPackageName(android.content.Context,java.util.List,boolean):0:0 -> b
androidx.browser.customtabs.CustomTabsIntent -> androidx.browser.customtabs.c:
    android.content.Intent intent -> a
    android.os.Bundle startAnimationBundle -> b
    1:1:void launchUrl(android.content.Context,android.net.Uri):0:0 -> a
androidx.browser.customtabs.CustomTabsIntent$Api23Impl -> androidx.browser.customtabs.c$a:
    1:1:android.app.ActivityOptions makeBasicActivityOptions():0:0 -> a
androidx.browser.customtabs.CustomTabsIntent$Api24Impl -> androidx.browser.customtabs.c$b:
    1:1:java.lang.String getDefaultLocale():0:0 -> a
androidx.browser.customtabs.CustomTabsIntent$Api34Impl -> androidx.browser.customtabs.c$c:
    1:1:void setShareIdentityEnabled(android.app.ActivityOptions,boolean):0:0 -> a
androidx.browser.customtabs.CustomTabsIntent$Builder -> androidx.browser.customtabs.c$d:
    android.content.Intent mIntent -> a
    androidx.browser.customtabs.CustomTabColorSchemeParams$Builder mDefaultColorSchemeBuilder -> b
    java.util.ArrayList mMenuItems -> c
    android.app.ActivityOptions mActivityOptions -> d
    java.util.ArrayList mActionButtons -> e
    android.util.SparseArray mColorSchemeParamBundles -> f
    android.os.Bundle mDefaultColorSchemeBundle -> g
    int mShareState -> h
    boolean mInstantAppsEnabled -> i
    boolean mShareIdentity -> j
    1:1:androidx.browser.customtabs.CustomTabsIntent build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/browser/customtabs/c;"}
    1:1:void setCurrentLocaleAsDefaultAcceptLanguage():0:0 -> b
    1:1:void setSessionParameters(android.os.IBinder,android.app.PendingIntent):0:0 -> c
    1:1:void setShareIdentityEnabled():0:0 -> d
    1:1:androidx.browser.customtabs.CustomTabsIntent$Builder setShowTitle(boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/browser/customtabs/c$d;"}
androidx.collection.ArrayMap -> f.a:
    androidx.collection.MapCollections mCollections -> l
    void <init>() -> <init>
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:androidx.collection.MapCollections getCollection():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf/d;"}
    1:1:void putAll(java.util.Map):0:0 -> putAll
    1:1:java.util.Collection values():0:0 -> values
androidx.collection.ArrayMap$1 -> f.a$a:
    androidx.collection.ArrayMap this$0 -> d
    1:1:void <init>(androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/a;)V"}
    1:1:void colClear():0:0 -> a
    1:1:java.lang.Object colGetEntry(int,int):0:0 -> b
    1:1:java.util.Map colGetMap():0:0 -> c
    1:1:int colGetSize():0:0 -> d
    1:1:int colIndexOfKey(java.lang.Object):0:0 -> e
    1:1:int colIndexOfValue(java.lang.Object):0:0 -> f
    1:1:void colPut(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:void colRemoveAt(int):0:0 -> h
    1:1:java.lang.Object colSetValue(int,java.lang.Object):0:0 -> i
androidx.collection.ArraySet -> f.b:
    int[] mHashes -> e
    java.lang.Object[] mArray -> f
    int mSize -> g
    androidx.collection.MapCollections mCollections -> h
    int[] INT -> i
    java.lang.Object[] OBJECT -> j
    java.lang.Object[] sBaseCache -> k
    int sBaseCacheSize -> l
    java.lang.Object[] sTwiceBaseCache -> m
    int sTwiceBaseCacheSize -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int):0:0 -> <init>
    1:1:void allocArrays(int):0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void ensureCapacity(int):0:0 -> b
    1:1:void freeArrays(int[],java.lang.Object[],int):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:androidx.collection.MapCollections getCollection():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf/d;"}
    1:1:int indexOf(java.lang.Object,int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int indexOfNull():0:0 -> f
    1:1:java.lang.Object removeAt(int):0:0 -> g
    1:1:java.lang.Object valueAt(int):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
androidx.collection.ArraySet$1 -> f.b$a:
    androidx.collection.ArraySet this$0 -> d
    1:1:void <init>(androidx.collection.ArraySet):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/b;)V"}
    1:1:void colClear():0:0 -> a
    1:1:java.lang.Object colGetEntry(int,int):0:0 -> b
    1:1:java.util.Map colGetMap():0:0 -> c
    1:1:int colGetSize():0:0 -> d
    1:1:int colIndexOfKey(java.lang.Object):0:0 -> e
    1:1:int colIndexOfValue(java.lang.Object):0:0 -> f
    1:1:void colPut(java.lang.Object,java.lang.Object):0:0 -> g
    1:1:void colRemoveAt(int):0:0 -> h
    1:1:java.lang.Object colSetValue(int,java.lang.Object):0:0 -> i
androidx.collection.ContainerHelpers -> f.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int binarySearch(int[],int,int):0:0 -> a
    1:1:boolean equal(java.lang.Object,java.lang.Object):0:0 -> b
androidx.collection.MapCollections -> f.d:
    androidx.collection.MapCollections$EntrySet mEntrySet -> a
    androidx.collection.MapCollections$KeySet mKeySet -> b
    androidx.collection.MapCollections$ValuesCollection mValues -> c
    void <init>() -> <init>
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> b
    java.util.Map colGetMap() -> c
    int colGetSize() -> d
    int colIndexOfKey(java.lang.Object) -> e
    int colIndexOfValue(java.lang.Object) -> f
    void colPut(java.lang.Object,java.lang.Object) -> g
    void colRemoveAt(int) -> h
    java.lang.Object colSetValue(int,java.lang.Object) -> i
    1:1:boolean containsAllHelper(java.util.Map,java.util.Collection):0:0 -> j
    1:1:boolean equalsSetHelper(java.util.Set,java.lang.Object):0:0 -> k
    1:1:java.util.Set getEntrySet():0:0 -> l
    1:1:java.util.Set getKeySet():0:0 -> m
    1:1:java.util.Collection getValues():0:0 -> n
    1:1:boolean removeAllHelper(java.util.Map,java.util.Collection):0:0 -> o
    1:1:boolean retainAllHelper(java.util.Map,java.util.Collection):0:0 -> p
    1:1:java.lang.Object[] toArrayHelper(int):0:0 -> q
    1:1:java.lang.Object[] toArrayHelper(java.lang.Object[],int):0:0 -> r
androidx.collection.MapCollections$ArrayIterator -> f.d$a:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    androidx.collection.MapCollections this$0 -> e
    1:1:void <init>(androidx.collection.MapCollections,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/d;I)V"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
androidx.collection.MapCollections$EntrySet -> f.d$b:
    androidx.collection.MapCollections this$0 -> e
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/d;)V"}
    1:1:boolean add(java.util.Map$Entry):0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.MapCollections$KeySet -> f.d$c:
    androidx.collection.MapCollections this$0 -> e
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/d;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.MapCollections$MapIterator -> f.d$d:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    androidx.collection.MapCollections this$0 -> d
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/d;)V"}
    1:1:java.util.Map$Entry next():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
    1:1:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:1:java.lang.String toString():0:0 -> toString
androidx.collection.MapCollections$ValuesCollection -> f.d$e:
    androidx.collection.MapCollections this$0 -> e
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/d;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.SimpleArrayMap -> f.e:
    int[] mHashes -> e
    java.lang.Object[] mArray -> f
    int mSize -> g
    java.lang.Object[] mBaseCache -> h
    int mBaseCacheSize -> i
    java.lang.Object[] mTwiceBaseCache -> j
    int mTwiceBaseCacheSize -> k
    1:1:void <init>():0:0 -> <init>
    1:1:void allocArrays(int):0:0 -> a
    1:1:int binarySearchHashes(int[],int,int):0:0 -> b
    1:1:void ensureCapacity(int):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:1:void freeArrays(int[],java.lang.Object[],int):0:0 -> d
    1:1:int indexOf(java.lang.Object,int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int indexOfKey(java.lang.Object):0:0 -> f
    1:1:int indexOfNull():0:0 -> g
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object):0:0 -> getOrDefault
    1:1:int indexOfValue(java.lang.Object):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.Object keyAt(int):0:0 -> i
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.lang.Object removeAt(int):0:0 -> j
    1:1:java.lang.Object setValueAt(int,java.lang.Object):0:0 -> k
    1:1:java.lang.Object valueAt(int):0:0 -> l
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> putIfAbsent
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    2:2:boolean remove(java.lang.Object,java.lang.Object):0:0 -> remove
    1:1:java.lang.Object replace(java.lang.Object,java.lang.Object):0:0 -> replace
    2:2:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> replace
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
androidx.concurrent.futures.AbstractResolvableFuture -> androidx.concurrent.futures.a:
    java.lang.Object value -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters -> c
    boolean GENERATE_CANCELLATION_CAUSES -> d
    java.util.logging.Logger log -> e
    androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper ATOMIC_HELPER -> f
    java.lang.Object NULL -> g
    1:1:void addListener(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> a
    1:1:void addDoneString(java.lang.StringBuilder):0:0 -> b
    1:1:void afterDone():0:0 -> c
    1:1:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable):0:0 -> d
    1:1:java.lang.Object checkNotNull(java.lang.Object):0:0 -> e
    1:1:androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$e;)Landroidx/concurrent/futures/a$e;"}
    1:1:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;)V"}
    1:1:java.lang.Object get():0:0 -> get
    2:2:java.lang.Object get(long,java.util.concurrent.TimeUnit):0:0 -> get
    1:1:void executeListener(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> h
    1:1:java.lang.Object getDoneValue(java.lang.Object):0:0 -> i
    1:1:java.lang.Object getUninterruptibly(java.util.concurrent.Future):0:0 -> j
    1:1:void interruptTask():0:0 -> k
    1:1:java.lang.String pendingToString():0:0 -> l
    1:1:void releaseWaiters():0:0 -> m
    1:1:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;)V"}
    1:1:boolean set(java.lang.Object):0:0 -> o
    1:1:java.lang.String userObjectToString(java.lang.Object):0:0 -> p
androidx.concurrent.futures.AbstractResolvableFuture$1 -> androidx.concurrent.futures.a$a:
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper -> androidx.concurrent.futures.a$b:
    void <init>() -> <init>
    1:1:void <init>(androidx.concurrent.futures.AbstractResolvableFuture$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$a;)V"}
    boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$e;Landroidx/concurrent/futures/a$e;)Z"}
    boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)Z"}
    void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)V"}
    void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> androidx.concurrent.futures.a$c:
    boolean wasInterrupted -> a
    java.lang.Throwable cause -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_INTERRUPTED -> c
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_CANCELLED -> d
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> androidx.concurrent.futures.a$d:
    java.lang.Throwable exception -> a
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> androidx.concurrent.futures.a$e:
    java.lang.Runnable task -> a
    java.util.concurrent.Executor executor -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Listener next -> c
    androidx.concurrent.futures.AbstractResolvableFuture$Listener TOMBSTONE -> d
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> androidx.concurrent.futures.a$f:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater -> a
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater -> c
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater -> e
    1:1:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$e;Landroidx/concurrent/futures/a$e;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)Z"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0 -> androidx.concurrent.futures.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$InternalSyntheticBackportWithForwarding$2$58dd097c22a157c6fc915c3ca83711e3efdab037cd14fe4274f47b3cf6d48957$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> androidx.concurrent.futures.a$g:
    1:1:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$e;Landroidx/concurrent/futures/a$e;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)Z"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> androidx.concurrent.futures.a$h:
    java.lang.Thread thread -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter next -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter TOMBSTONE -> c
    1:1:void <init>():0:0 -> <init>
    void <init>(boolean) -> <init>
    1:1:void setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;)V"}
    1:1:void unpark():0:0 -> b
androidx.concurrent.futures.ResolvableFuture -> androidx.concurrent.futures.c:
    1:1:boolean set(java.lang.Object):0:0 -> o
    1:1:androidx.concurrent.futures.ResolvableFuture create():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/concurrent/futures/c;"}
androidx.core.R$id -> g.a:
    int accessibility_custom_action_4 -> A
    int accessibility_custom_action_5 -> B
    int accessibility_custom_action_6 -> C
    int accessibility_custom_action_7 -> D
    int accessibility_custom_action_8 -> E
    int accessibility_custom_action_9 -> F
    int tag_accessibility_pane_title -> G
    int tag_on_apply_window_listener -> H
    int tag_unhandled_key_listeners -> I
    int tag_window_insets_animation_callback -> J
    int accessibility_custom_action_0 -> a
    int accessibility_custom_action_1 -> b
    int accessibility_custom_action_10 -> c
    int accessibility_custom_action_11 -> d
    int accessibility_custom_action_12 -> e
    int accessibility_custom_action_13 -> f
    int accessibility_custom_action_14 -> g
    int accessibility_custom_action_15 -> h
    int accessibility_custom_action_16 -> i
    int accessibility_custom_action_17 -> j
    int accessibility_custom_action_18 -> k
    int accessibility_custom_action_19 -> l
    int accessibility_custom_action_2 -> m
    int accessibility_custom_action_20 -> n
    int accessibility_custom_action_21 -> o
    int accessibility_custom_action_22 -> p
    int accessibility_custom_action_23 -> q
    int accessibility_custom_action_24 -> r
    int accessibility_custom_action_25 -> s
    int accessibility_custom_action_26 -> t
    int accessibility_custom_action_27 -> u
    int accessibility_custom_action_28 -> v
    int accessibility_custom_action_29 -> w
    int accessibility_custom_action_3 -> x
    int accessibility_custom_action_30 -> y
    int accessibility_custom_action_31 -> z
androidx.core.app.ActivityCompat -> androidx.core.app.a:
    1:1:void requestPermissions(android.app.Activity,java.lang.String[],int):0:0 -> j
    1:1:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String):0:0 -> k
androidx.core.app.ActivityCompat$Api23Impl -> androidx.core.app.a$a:
    1:1:void onSharedElementsReady(java.lang.Object):0:0 -> a
    1:1:void requestPermissions(android.app.Activity,java.lang.String[],int):0:0 -> b
    1:1:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String):0:0 -> c
androidx.core.app.ActivityCompat$Api31Impl -> androidx.core.app.a$b:
    1:1:boolean isLaunchedFromBubble(android.app.Activity):0:0 -> a
    1:1:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String):0:0 -> b
androidx.core.app.ActivityCompat$Api32Impl -> androidx.core.app.a$c:
    1:1:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String):0:0 -> a
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.b:
    1:1:int checkOrNoteProxyOp(android.content.Context,int,java.lang.String,java.lang.String):0:0 -> a
    1:1:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String):0:0 -> b
    1:1:java.lang.String permissionToOp(java.lang.String):0:0 -> c
androidx.core.app.AppOpsManagerCompat$Api23Impl -> androidx.core.app.b$a:
    1:1:java.lang.Object getSystemService(android.content.Context,java.lang.Class):0:0 -> a
    1:1:int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String):0:0 -> b
    1:1:int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String):0:0 -> c
    1:1:java.lang.String permissionToOp(java.lang.String):0:0 -> d
androidx.core.app.AppOpsManagerCompat$Api29Impl -> androidx.core.app.b$b:
    1:1:int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String):0:0 -> a
    1:1:java.lang.String getOpPackageName(android.content.Context):0:0 -> b
    1:1:android.app.AppOpsManager getSystemService(android.content.Context):0:0 -> c
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    1:1:java.lang.Object checkCompatWrapper(java.lang.Object):0:0 -> a
androidx.core.app.NotificationCompat -> androidx.core.app.c:
    1:1:android.os.Bundle getExtras(android.app.Notification):0:0 -> a
androidx.core.app.NotificationCompat$Action -> androidx.core.app.c$a:
androidx.core.app.NotificationCompat$BubbleMetadata -> androidx.core.app.c$b:
    1:1:android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/c$b;)Landroid/app/Notification$BubbleMetadata;"}
androidx.core.app.NotificationCompat$Builder -> androidx.core.app.c$c:
    boolean mColorizedSet -> A
    java.lang.String mCategory -> B
    android.os.Bundle mExtras -> C
    int mColor -> D
    int mVisibility -> E
    android.app.Notification mPublicVersion -> F
    android.widget.RemoteViews mContentView -> G
    android.widget.RemoteViews mBigContentView -> H
    android.widget.RemoteViews mHeadsUpContentView -> I
    java.lang.String mChannelId -> J
    int mBadgeIcon -> K
    java.lang.String mShortcutId -> L
    long mTimeout -> M
    int mGroupAlertBehavior -> N
    int mFgsDeferBehavior -> O
    boolean mAllowSystemGeneratedContextualActions -> P
    android.app.Notification mNotification -> Q
    boolean mSilent -> R
    java.lang.Object mSmallIcon -> S
    java.util.ArrayList mPeople -> T
    android.content.Context mContext -> a
    java.util.ArrayList mActions -> b
    java.util.ArrayList mPersonList -> c
    java.util.ArrayList mInvisibleActions -> d
    java.lang.CharSequence mContentTitle -> e
    java.lang.CharSequence mContentText -> f
    android.app.PendingIntent mContentIntent -> g
    android.app.PendingIntent mFullScreenIntent -> h
    android.widget.RemoteViews mTickerView -> i
    androidx.core.graphics.drawable.IconCompat mLargeIcon -> j
    java.lang.CharSequence mContentInfo -> k
    int mNumber -> l
    int mPriority -> m
    boolean mShowWhen -> n
    boolean mUseChronometer -> o
    java.lang.CharSequence mSubText -> p
    java.lang.CharSequence mSettingsText -> q
    java.lang.CharSequence[] mRemoteInputHistory -> r
    int mProgressMax -> s
    int mProgress -> t
    boolean mProgressIndeterminate -> u
    java.lang.String mGroupKey -> v
    boolean mGroupSummary -> w
    java.lang.String mSortKey -> x
    boolean mLocalOnly -> y
    boolean mColorized -> z
    1:1:android.app.Notification build():0:0 -> a
    1:1:android.os.Bundle getExtras():0:0 -> b
    1:1:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence):0:0 -> c
    1:1:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/core/app/c$c;"}
    1:1:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/PendingIntent;)Landroidx/core/app/c$c;"}
    1:1:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Landroidx/core/app/c$c;"}
    1:1:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Landroidx/core/app/c$c;"}
    1:1:void setFlag(int,boolean):0:0 -> h
    1:1:androidx.core.app.NotificationCompat$Builder setOngoing(boolean):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/core/app/c$c;"}
    1:1:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/core/app/c$c;"}
    1:1:androidx.core.app.NotificationCompat$Builder setPriority(int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/app/c$c;"}
    1:1:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIZ)Landroidx/core/app/c$c;"}
    1:1:androidx.core.app.NotificationCompat$Builder setSmallIcon(int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/app/c$c;"}
androidx.core.app.NotificationCompatBuilder -> androidx.core.app.e:
    android.content.Context mContext -> a
    android.app.Notification$Builder mBuilder -> b
    androidx.core.app.NotificationCompat$Builder mBuilderCompat -> c
    android.widget.RemoteViews mContentView -> d
    android.widget.RemoteViews mBigContentView -> e
    java.util.List mActionExtrasList -> f
    android.os.Bundle mExtras -> g
    int mGroupAlertBehavior -> h
    android.widget.RemoteViews mHeadsUpContentView -> i
    1:1:void addAction(androidx.core.app.NotificationCompat$Action):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/c$a;)V"}
    1:1:android.app.Notification build():0:0 -> b
    1:1:android.app.Notification buildInternal():0:0 -> c
    1:1:java.util.List combineLists(java.util.List,java.util.List):0:0 -> d
    1:1:java.util.List getPeople(java.util.List):0:0 -> e
    1:1:void removeSoundAndVibration(android.app.Notification):0:0 -> f
androidx.core.app.NotificationCompatBuilder$$ExternalSyntheticThrowCCEIfNotNull0 -> androidx.core.app.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.app.NotificationCompatBuilder$$InternalSyntheticThrowCCEIfNotNull$7$73cb8751ab51b21ad35dca8bb429f18dd92b113dd98fb852fe30e6efdb45c21f$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.app.NotificationCompatBuilder$Api20Impl -> androidx.core.app.e$a:
    1:1:android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action):0:0 -> a
    1:1:android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle):0:0 -> b
    1:1:android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput):0:0 -> c
    1:1:android.app.Notification$Action build(android.app.Notification$Action$Builder):0:0 -> d
    1:1:android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent):0:0 -> e
    1:1:java.lang.String getGroup(android.app.Notification):0:0 -> f
    1:1:android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String):0:0 -> g
    1:1:android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean):0:0 -> h
    1:1:android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean):0:0 -> i
    1:1:android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String):0:0 -> j
androidx.core.app.NotificationCompatBuilder$Api21Impl -> androidx.core.app.e$b:
    1:1:android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String):0:0 -> a
    1:1:android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String):0:0 -> b
    1:1:android.app.Notification$Builder setColor(android.app.Notification$Builder,int):0:0 -> c
    1:1:android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification):0:0 -> d
    1:1:android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object):0:0 -> e
    1:1:android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int):0:0 -> f
androidx.core.app.NotificationCompatBuilder$Api23Impl -> androidx.core.app.e$c:
    1:1:android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent):0:0 -> a
    1:1:android.app.Notification$Builder setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon):0:0 -> b
    1:1:android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object):0:0 -> c
androidx.core.app.NotificationCompatBuilder$Api24Impl -> androidx.core.app.e$d:
    1:1:android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean):0:0 -> a
    1:1:android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews):0:0 -> b
    1:1:android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews):0:0 -> c
    1:1:android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews):0:0 -> d
    1:1:android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[]):0:0 -> e
androidx.core.app.NotificationCompatBuilder$Api26Impl -> androidx.core.app.e$e:
    1:1:android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String):0:0 -> a
    1:1:android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int):0:0 -> b
    1:1:android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean):0:0 -> c
    1:1:android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int):0:0 -> d
    1:1:android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence):0:0 -> e
    1:1:android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String):0:0 -> f
    1:1:android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long):0:0 -> g
androidx.core.app.NotificationCompatBuilder$Api29Impl -> androidx.core.app.e$f:
    1:1:android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean):0:0 -> a
    1:1:android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata):0:0 -> b
    1:1:android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean):0:0 -> c
    1:1:android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object):0:0 -> d
androidx.core.app.NotificationCompatBuilder$Api31Impl -> androidx.core.app.e$g:
    1:1:android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean):0:0 -> a
    1:1:android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int):0:0 -> b
androidx.core.app.NotificationCompatJellybean -> androidx.core.app.f:
    java.lang.Object sExtrasLock -> a
    java.lang.Object sActionsLock -> b
    1:1:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/c$a;)Landroid/os/Bundle;"}
androidx.core.app.NotificationManagerCompat -> androidx.core.app.g:
    android.content.Context mContext -> a
    android.app.NotificationManager mNotificationManager -> b
    java.lang.Object sEnabledNotificationListenersLock -> c
    java.lang.String sEnabledNotificationListeners -> d
    java.util.Set sEnabledNotificationListenerPackages -> e
    java.lang.Object sLock -> f
    androidx.core.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> g
    1:1:boolean areNotificationsEnabled():0:0 -> a
    1:1:void cancel(int):0:0 -> b
    1:1:void cancel(java.lang.String,int):0:0 -> c
    1:1:void createNotificationChannel(android.app.NotificationChannel):0:0 -> d
    1:1:androidx.core.app.NotificationManagerCompat from(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/core/app/g;"}
    1:1:java.util.Set getEnabledListenerPackages(android.content.Context):0:0 -> f
    1:1:void notify(int,android.app.Notification):0:0 -> g
    1:1:void notify(java.lang.String,int,android.app.Notification):0:0 -> h
    1:1:void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/g$f;)V"}
    1:1:boolean useSideChannelForNotification(android.app.Notification):0:0 -> j
androidx.core.app.NotificationManagerCompat$Api24Impl -> androidx.core.app.g$a:
    1:1:boolean areNotificationsEnabled(android.app.NotificationManager):0:0 -> a
    1:1:int getImportance(android.app.NotificationManager):0:0 -> b
androidx.core.app.NotificationManagerCompat$Api26Impl -> androidx.core.app.g$b:
    1:1:void createNotificationChannel(android.app.NotificationManager,android.app.NotificationChannel):0:0 -> a
    1:1:void createNotificationChannelGroup(android.app.NotificationManager,android.app.NotificationChannelGroup):0:0 -> b
    1:1:void createNotificationChannelGroups(android.app.NotificationManager,java.util.List):0:0 -> c
    1:1:void createNotificationChannels(android.app.NotificationManager,java.util.List):0:0 -> d
    1:1:void deleteNotificationChannel(android.app.NotificationManager,java.lang.String):0:0 -> e
    1:1:void deleteNotificationChannelGroup(android.app.NotificationManager,java.lang.String):0:0 -> f
    1:1:java.lang.String getId(android.app.NotificationChannel):0:0 -> g
    1:1:java.lang.String getId(android.app.NotificationChannelGroup):0:0 -> h
    1:1:android.app.NotificationChannel getNotificationChannel(android.app.NotificationManager,java.lang.String):0:0 -> i
    1:1:java.util.List getNotificationChannelGroups(android.app.NotificationManager):0:0 -> j
    1:1:java.util.List getNotificationChannels(android.app.NotificationManager):0:0 -> k
androidx.core.app.NotificationManagerCompat$NotifyTask -> androidx.core.app.g$c:
    java.lang.String packageName -> a
    int id -> b
    java.lang.String tag -> c
    android.app.Notification notif -> d
    1:1:void send(android.support.v4.app.INotificationSideChannel):0:0 -> a
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent -> androidx.core.app.g$d:
    android.content.ComponentName componentName -> a
    android.os.IBinder iBinder -> b
androidx.core.app.NotificationManagerCompat$SideChannelManager -> androidx.core.app.g$e:
    android.content.Context mContext -> a
    android.os.HandlerThread mHandlerThread -> b
    android.os.Handler mHandler -> c
    java.util.Map mRecordMap -> d
    java.util.Set mCachedEnabledPackages -> e
    1:1:boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/g$e$a;)Z"}
    1:1:void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/g$e$a;)V"}
    1:1:void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/g$f;)V"}
    1:1:void handleRetryListenerQueue(android.content.ComponentName):0:0 -> d
    1:1:void handleServiceConnected(android.content.ComponentName,android.os.IBinder):0:0 -> e
    1:1:void handleServiceDisconnected(android.content.ComponentName):0:0 -> f
    1:1:void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/g$e$a;)V"}
    1:1:void queueTask(androidx.core.app.NotificationManagerCompat$Task):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/g$f;)V"}
    1:1:void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/g$e$a;)V"}
    1:1:void updateListenerMap():0:0 -> j
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> androidx.core.app.g$e$a:
    android.content.ComponentName componentName -> a
    boolean bound -> b
    android.support.v4.app.INotificationSideChannel service -> c
    java.util.ArrayDeque taskQueue -> d
    int retryCount -> e
androidx.core.app.NotificationManagerCompat$Task -> androidx.core.app.g$f:
    void send(android.support.v4.app.INotificationSideChannel) -> a
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    android.app.PendingIntent mActionIntent -> d
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback:
    java.lang.String DESCRIPTOR -> j
    void onIsPermissionRevocationEnabledForAppResult(boolean,boolean) -> m
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$Proxy -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback$Stub$a:
    android.os.IBinder mRemote -> o
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService:
    java.lang.String DESCRIPTOR -> k
    void isPermissionRevocationEnabledForApp(androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportCallback) -> d
androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$Proxy -> androidx.core.app.unusedapprestrictions.IUnusedAppRestrictionsBackportService$Stub$a:
    android.os.IBinder mRemote -> o
androidx.core.content.ContextCompat -> androidx.core.content.a:
    java.lang.Object sSync -> a
    1:1:int checkSelfPermission(android.content.Context,java.lang.String):0:0 -> a
    1:1:java.io.File[] getExternalCacheDirs(android.content.Context):0:0 -> b
    1:1:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String):0:0 -> c
    1:1:java.util.concurrent.Executor getMainExecutor(android.content.Context):0:0 -> d
    1:1:java.lang.String obtainAndCheckReceiverPermission(android.content.Context):0:0 -> e
    1:1:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int):0:0 -> f
    1:1:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0:0 -> g
    1:1:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle):0:0 -> h
    1:1:void startForegroundService(android.content.Context,android.content.Intent):0:0 -> i
androidx.core.content.ContextCompat$Api26Impl -> androidx.core.content.a$a:
    1:1:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0:0 -> a
    1:1:android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent):0:0 -> b
androidx.core.content.ContextCompat$Api28Impl -> androidx.core.content.a$b:
    1:1:java.util.concurrent.Executor getMainExecutor(android.content.Context):0:0 -> a
androidx.core.content.ContextCompat$Api33Impl -> androidx.core.content.a$c:
    1:1:android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int):0:0 -> a
androidx.core.content.FileProvider -> androidx.core.content.b:
    java.lang.Object mLock -> a
    java.lang.String mAuthority -> b
    androidx.core.content.FileProvider$PathStrategy mLocalPathStrategy -> c
    int mResourceId -> d
    java.lang.String[] COLUMNS -> e
    java.io.File DEVICE_ROOT -> f
    java.util.HashMap sCache -> g
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:java.lang.String access$000(java.lang.String):0:0 -> a
    1:1:java.io.File buildPath(java.io.File,java.lang.String[]):0:0 -> b
    1:1:java.lang.Object[] copyOf(java.lang.Object[],int):0:0 -> c
    1:1:java.lang.String[] copyOf(java.lang.String[],int):0:0 -> d
    1:1:android.content.res.XmlResourceParser getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int):0:0 -> e
    1:1:androidx.core.content.FileProvider$PathStrategy getLocalPathStrategy():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/content/b$b;"}
    1:1:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;I)Landroidx/core/content/b$b;"}
    1:1:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File):0:0 -> h
    1:1:int modeToMode(java.lang.String):0:0 -> i
    1:1:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;I)Landroidx/core/content/b$b;"}
    1:1:java.lang.String removeTrailingSlash(java.lang.String):0:0 -> k
androidx.core.content.FileProvider$Api21Impl -> androidx.core.content.b$a:
    1:1:java.io.File[] getExternalMediaDirs(android.content.Context):0:0 -> a
androidx.core.content.FileProvider$PathStrategy -> androidx.core.content.b$b:
    java.io.File getFileForUri(android.net.Uri) -> a
    android.net.Uri getUriForFile(java.io.File) -> b
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.b$c:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    1:1:java.io.File getFileForUri(android.net.Uri):0:0 -> a
    1:1:android.net.Uri getUriForFile(java.io.File):0:0 -> b
    1:1:void addRoot(java.lang.String,java.io.File):0:0 -> c
    1:1:boolean belongsToRoot(java.lang.String,java.lang.String):0:0 -> d
androidx.core.content.PermissionChecker -> androidx.core.content.c:
    1:1:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0:0 -> a
    1:1:int checkSelfPermission(android.content.Context,java.lang.String):0:0 -> b
androidx.core.graphics.Insets -> androidx.core.graphics.e:
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    androidx.core.graphics.Insets NONE -> e
    1:1:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;Landroidx/core/graphics/e;)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets of(int,int,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets of(android.graphics.Rect):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Insets;)Landroidx/core/graphics/e;"}
    1:1:android.graphics.Insets toPlatformInsets():0:0 -> e
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline0 -> androidx.core.graphics.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$0.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline1 -> androidx.core.graphics.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$1.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline2 -> androidx.core.graphics.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$2.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline3 -> androidx.core.graphics.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$3.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$Api29Impl -> androidx.core.graphics.e$a:
    1:1:android.graphics.Insets of(int,int,int,int):0:0 -> a
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    int mType -> a
    java.lang.Object mObj1 -> b
    byte[] mData -> c
    android.os.Parcelable mParcelable -> d
    int mInt1 -> e
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    android.graphics.PorterDuff$Mode mTintMode -> h
    java.lang.String mTintModeStr -> i
    java.lang.String mString1 -> j
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> k
    1:1:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean):0:0 -> a
    1:1:android.graphics.Bitmap getBitmap():0:0 -> b
    1:1:int getResId():0:0 -> c
    1:1:java.lang.String getResPackage():0:0 -> d
    1:1:android.net.Uri getUri():0:0 -> e
    1:1:java.io.InputStream getUriInputStream(android.content.Context):0:0 -> f
    1:1:void onPostParceling():0:0 -> g
    1:1:void onPreParceling(boolean):0:0 -> h
    1:1:android.graphics.drawable.Icon toIcon(android.content.Context):0:0 -> i
    1:1:java.lang.String typeToString(int):0:0 -> j
androidx.core.graphics.drawable.IconCompat$Api23Impl -> androidx.core.graphics.drawable.IconCompat$a:
    1:1:int getResId(java.lang.Object):0:0 -> a
    1:1:java.lang.String getResPackage(java.lang.Object):0:0 -> b
    1:1:android.net.Uri getUri(java.lang.Object):0:0 -> c
    1:1:android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context):0:0 -> d
    1:1:android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context):0:0 -> e
androidx.core.graphics.drawable.IconCompat$Api26Impl -> androidx.core.graphics.drawable.IconCompat$b:
    1:1:android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> a
    1:1:android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap):0:0 -> b
androidx.core.graphics.drawable.IconCompat$Api28Impl -> androidx.core.graphics.drawable.IconCompat$c:
    1:1:int getResId(java.lang.Object):0:0 -> a
    1:1:java.lang.String getResPackage(java.lang.Object):0:0 -> b
    1:1:int getType(java.lang.Object):0:0 -> c
    1:1:android.net.Uri getUri(java.lang.Object):0:0 -> d
androidx.core.graphics.drawable.IconCompat$Api30Impl -> androidx.core.graphics.drawable.IconCompat$d:
    1:1:android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri):0:0 -> a
androidx.core.net.ConnectivityManagerCompat -> h.a:
    1:1:boolean isActiveNetworkMetered(android.net.ConnectivityManager):0:0 -> a
androidx.core.os.ExecutorCompat -> androidx.core.os.a:
    1:1:java.util.concurrent.Executor create(android.os.Handler):0:0 -> a
androidx.core.os.ExecutorCompat$HandlerExecutor -> androidx.core.os.a$a:
    android.os.Handler mHandler -> e
androidx.core.os.HandlerCompat -> androidx.core.os.b:
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.core.os.HandlerCompat$Api28Impl -> androidx.core.os.b$a:
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.core.os.UserManagerCompat -> androidx.core.os.c:
    1:1:boolean isUserUnlocked(android.content.Context):0:0 -> a
androidx.core.os.UserManagerCompat$Api24Impl -> androidx.core.os.c$a:
    1:1:boolean isUserUnlocked(android.content.Context):0:0 -> a
androidx.core.util.Consumer -> i.a:
    void accept(java.lang.Object) -> accept
androidx.core.util.ObjectsCompat -> i.b:
    1:1:boolean equals(java.lang.Object,java.lang.Object):0:0 -> a
    1:1:int hash(java.lang.Object[]):0:0 -> b
    1:1:java.lang.Object requireNonNull(java.lang.Object,java.lang.String):0:0 -> c
androidx.core.util.Preconditions -> i.c:
    1:1:java.lang.Object checkNotNull(java.lang.Object):0:0 -> a
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.b:
    android.view.DisplayCutout mDisplayCutout -> a
    1:1:int getSafeInsetBottom():0:0 -> a
    1:1:int getSafeInsetLeft():0:0 -> b
    1:1:int getSafeInsetRight():0:0 -> c
    1:1:int getSafeInsetTop():0:0 -> d
    1:1:androidx.core.view.DisplayCutoutCompat wrap(android.view.DisplayCutout):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/DisplayCutout;)Landroidx/core/view/b;"}
androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.DisplayCutoutCompat$$InternalSyntheticApiModelOutline$3$5995697582f938161ab89c8390e62ddcc8be8764d4286173706240625ed8d046$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.DisplayCutoutCompat$Api28Impl -> androidx.core.view.b$a:
    1:1:android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List):0:0 -> a
    1:1:java.util.List getBoundingRects(android.view.DisplayCutout):0:0 -> b
    1:1:int getSafeInsetBottom(android.view.DisplayCutout):0:0 -> c
    1:1:int getSafeInsetLeft(android.view.DisplayCutout):0:0 -> d
    1:1:int getSafeInsetRight(android.view.DisplayCutout):0:0 -> e
    1:1:int getSafeInsetTop(android.view.DisplayCutout):0:0 -> f
androidx.core.view.OnApplyWindowInsetsListener -> androidx.core.view.c:
androidx.core.view.OnReceiveContentViewBehavior -> androidx.core.view.d:
androidx.core.view.SoftwareKeyboardControllerCompat -> androidx.core.view.e:
    androidx.core.view.SoftwareKeyboardControllerCompat$Impl mImpl -> a
androidx.core.view.SoftwareKeyboardControllerCompat$Impl -> androidx.core.view.e$c:
androidx.core.view.SoftwareKeyboardControllerCompat$Impl20 -> androidx.core.view.e$a:
    android.view.View mView -> a
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30 -> androidx.core.view.e$b:
    android.view.View mView -> b
androidx.core.view.ViewCompat -> androidx.core.view.g:
    int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS -> a
    androidx.core.view.OnReceiveContentViewBehavior NO_OP_ON_RECEIVE_CONTENT_VIEW_BEHAVIOR -> b
    androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager -> c
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/i;"}
    1:1:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0:0 -> c
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/g$c;"}
    1:1:void setImportantForAccessibilityIfNeeded(android.view.View):0:0 -> e
androidx.core.view.ViewCompat$$ExternalSyntheticLambda0 -> androidx.core.view.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$2$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$2 -> androidx.core.view.g$a:
    1:1:java.lang.Object frameworkGet(android.view.View):0:0 -> b
    1:1:java.lang.CharSequence frameworkGet(android.view.View):0:0 -> d
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.g$b:
    java.util.WeakHashMap mPanesToVisible -> a
    1:1:void checkPaneVisibility(java.util.Map$Entry):0:0 -> a
    1:1:void registerForLayoutCallback(android.view.View):0:0 -> b
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.g$c:
    int mTagKey -> a
    java.lang.Class mType -> b
    int mFrameworkMinimumSdk -> c
    int mContentChangeType -> d
    1:1:boolean frameworkAvailable():0:0 -> a
    java.lang.Object frameworkGet(android.view.View) -> b
    1:1:java.lang.Object get(android.view.View):0:0 -> c
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.g$d:
    1:1:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View):0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/i;Landroid/graphics/Rect;)Landroidx/core/view/i;"}
    1:1:boolean dispatchNestedFling(android.view.View,float,float,boolean):0:0 -> c
    1:1:boolean dispatchNestedPreFling(android.view.View,float,float):0:0 -> d
    1:1:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]):0:0 -> e
    1:1:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]):0:0 -> f
    1:1:android.content.res.ColorStateList getBackgroundTintList(android.view.View):0:0 -> g
    1:1:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View):0:0 -> h
    1:1:float getElevation(android.view.View):0:0 -> i
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/i;"}
    1:1:java.lang.String getTransitionName(android.view.View):0:0 -> k
    1:1:float getTranslationZ(android.view.View):0:0 -> l
    1:1:float getZ(android.view.View):0:0 -> m
    1:1:boolean hasNestedScrollingParent(android.view.View):0:0 -> n
    1:1:boolean isImportantForAccessibility(android.view.View):0:0 -> o
    1:1:boolean isNestedScrollingEnabled(android.view.View):0:0 -> p
    1:1:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList):0:0 -> q
    1:1:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode):0:0 -> r
    1:1:void setElevation(android.view.View,float):0:0 -> s
    1:1:void setNestedScrollingEnabled(android.view.View,boolean):0:0 -> t
    1:1:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/c;)V"}
    1:1:void setTransitionName(android.view.View,java.lang.String):0:0 -> v
    1:1:void setTranslationZ(android.view.View,float):0:0 -> w
    1:1:void setZ(android.view.View,float):0:0 -> x
    1:1:boolean startNestedScroll(android.view.View,int):0:0 -> y
    1:1:void stopNestedScroll(android.view.View):0:0 -> z
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.g$d$a:
    androidx.core.view.WindowInsetsCompat mLastInsets -> a
    android.view.View val$v -> b
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.g$e:
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/i;"}
    1:1:int getScrollIndicators(android.view.View):0:0 -> b
    1:1:void setScrollIndicators(android.view.View,int):0:0 -> c
    1:1:void setScrollIndicators(android.view.View,int,int):0:0 -> d
androidx.core.view.ViewCompat$Api28Impl -> androidx.core.view.g$f:
    1:1:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/g$g;)V"}
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> b
    1:1:boolean isAccessibilityHeading(android.view.View):0:0 -> c
    1:1:boolean isScreenReaderFocusable(android.view.View):0:0 -> d
    1:1:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/g$g;)V"}
    1:1:java.lang.Object requireViewById(android.view.View,int):0:0 -> f
    1:1:void setAccessibilityHeading(android.view.View,boolean):0:0 -> g
    1:1:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence):0:0 -> h
    1:1:void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lj/a;)V"}
    1:1:void setScreenReaderFocusable(android.view.View,boolean):0:0 -> j
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0 -> androidx.core.view.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$3$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.<init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/g$g;)V"}
    1:1:boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$3$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent):0:0 -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> androidx.core.view.g$g:
androidx.core.view.WindowInsetsCompat -> androidx.core.view.i:
    androidx.core.view.WindowInsetsCompat$Impl mImpl -> a
    androidx.core.view.WindowInsetsCompat CONSUMED -> b
    1:1:void <init>(android.view.WindowInsets):0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/core/graphics/e;)V"}
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:android.view.WindowInsets toWindowInsets():0:0 -> l
    1:1:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets;)Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets;Landroid/view/View;)Landroidx/core/view/i;"}
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.i$a:
    java.lang.reflect.Field sViewAttachInfoField -> a
    java.lang.reflect.Field sStableInsets -> b
    java.lang.reflect.Field sContentInsets -> c
    boolean sReflectionSucceeded -> d
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/i;"}
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.i$b:
    androidx.core.view.WindowInsetsCompat$BuilderImpl mImpl -> a
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)Landroidx/core/view/i$b;"}
    1:1:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)Landroidx/core/view/i$b;"}
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.i$f:
    androidx.core.view.WindowInsetsCompat mInsets -> a
    androidx.core.graphics.Insets[] mInsetsTypeMask -> b
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:void applyInsetTypes():0:0 -> a
    androidx.core.view.WindowInsetsCompat build() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    void setStableInsets(androidx.core.graphics.Insets) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemGestureInsets(androidx.core.graphics.Insets):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    void setSystemWindowInsets(androidx.core.graphics.Insets) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setTappableElementInsets(androidx.core.graphics.Insets):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.i$c:
    android.view.WindowInsets mPlatformInsets -> c
    androidx.core.graphics.Insets mStableInsets -> d
    java.lang.reflect.Field sConsumedField -> e
    boolean sConsumedFieldFetched -> f
    java.lang.reflect.Constructor sConstructor -> g
    boolean sConstructorFetched -> h
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:android.view.WindowInsets createWindowInsetsInstance():0:0 -> h
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.i$d:
    android.view.WindowInsets$Builder mPlatBuilder -> c
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemGestureInsets(androidx.core.graphics.Insets):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setTappableElementInsets(androidx.core.graphics.Insets):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$59943e04c37930a0531d4f6494ed649568ab127f92ede377b1f504d2dcd54863$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$9d187abb3bbc9745a880878a21bef611d92809b2198c7b753440a50ba682397e$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$a7bac0df715b28c98a7dcfbd576701be30c0b9593556f6a2c1e40d1cb3582ae7$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$e2db7d8c486f2bd0b97fa630bde348b860e908278df8e0203f613641cfeefcc4$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$e9cf16e04656d3d7361528f4e1263ec758c19a703cd1553ad658eb1456381f1b$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$ee8cb0ef857f0d92636e84006869a5dab776eec7bf08e3331dcf284032d49109$0.m(android.view.WindowInsets$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$7$a204b8eefc41564daf6595e28b0232288c13e496630a36581a3f2c9667b5b6be$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.i$e:
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.i$l:
    androidx.core.view.WindowInsetsCompat mHost -> a
    androidx.core.view.WindowInsetsCompat CONSUMED -> b
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getMandatorySystemGestureInsets():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemGestureInsets():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemWindowInsets():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getTappableElementInsets():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:boolean isConsumed():0:0 -> m
    1:1:boolean isRound():0:0 -> n
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/core/graphics/e;)V"}
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.i$g:
    android.view.WindowInsets mPlatformInsets -> c
    androidx.core.graphics.Insets[] mOverriddenInsets -> d
    androidx.core.graphics.Insets mSystemWindowInsets -> e
    androidx.core.view.WindowInsetsCompat mRootWindowInsets -> f
    androidx.core.graphics.Insets mRootViewVisibleInsets -> g
    boolean sVisibleRectReflectionFetched -> h
    java.lang.reflect.Method sGetViewRootImplMethod -> i
    java.lang.Class sAttachInfoClass -> j
    java.lang.reflect.Field sVisibleInsetsField -> k
    java.lang.reflect.Field sAttachInfoField -> l
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroidx/core/view/i$g;)V"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemWindowInsets():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:boolean isRound():0:0 -> n
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/core/graphics/e;)V"}
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:androidx.core.graphics.Insets getInsets(int,boolean):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getInsetsForType(int,boolean):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getRootStableInsets():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getVisibleInsets(android.view.View):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/graphics/e;"}
    1:1:void loadReflectionField():0:0 -> w
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.i$h:
    androidx.core.graphics.Insets mStableInsets -> m
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroidx/core/view/i$h;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:boolean isConsumed():0:0 -> m
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.i$i:
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroidx/core/view/i$i;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.DisplayCutout androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$2$1ac87aafd592b5506d107ed040b16d853d1a131cdb8856d2e13ed11b9a207052$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$2$9207719b7ce5d8db03f418025a4671b26e9b85828127b36d45b1560d40c7fc23$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.i$j:
    androidx.core.graphics.Insets mSystemGestureInsets -> n
    androidx.core.graphics.Insets mMandatorySystemGestureInsets -> o
    androidx.core.graphics.Insets mTappableElementInsets -> p
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroidx/core/view/i$j;)V"}
    1:1:androidx.core.graphics.Insets getMandatorySystemGestureInsets():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemGestureInsets():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getTappableElementInsets():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$2$463f5d2e905bee7a94c5e1e784176828b7f74fb1bd3f21ce4d1229a6ccfdd624$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$2$8f53c81c8f092140ac3e804e5c1bbe674a9a15bae1dde5747b904aef74c08e69$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$2$a095b61c286ceceac8def73d5e6718b1c88d3a7c271856e1785f04ff68e4f101$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.i$k:
    androidx.core.view.WindowInsetsCompat CONSUMED -> q
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroidx/core/view/i$k;)V"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$2$7c95e3cf87277cc9e90a5ee20212fa74552db1fed9bbd019afd18ee3ae455fac$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$2$f14b93863108dc0e407f09f9bde286f72e692d6f9a2448abe9587c9d544bc2bf$0.m(android.view.WindowInsets,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.i$m:
    1:1:int captionBar():0:0 -> a
    1:1:int displayCutout():0:0 -> b
    1:1:int ime():0:0 -> c
    1:1:int indexOf(int):0:0 -> d
    1:1:int mandatorySystemGestures():0:0 -> e
    1:1:int navigationBars():0:0 -> f
    1:1:int statusBars():0:0 -> g
    1:1:int systemGestures():0:0 -> h
    1:1:int tappableElement():0:0 -> i
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.i$n:
    1:1:int toPlatformType(int):0:0 -> a
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$2.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$3.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$4.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$5.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$6.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$7.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat -> androidx.core.view.f0:
    androidx.core.view.WindowInsetsControllerCompat$Impl mImpl -> a
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
androidx.core.view.WindowInsetsControllerCompat$Impl -> androidx.core.view.f0$e:
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
androidx.core.view.WindowInsetsControllerCompat$Impl20 -> androidx.core.view.f0$a:
    android.view.Window mWindow -> a
    androidx.core.view.SoftwareKeyboardControllerCompat mSoftwareKeyboardControllerCompat -> b
    1:1:void setSystemUiFlag(int):0:0 -> c
    1:1:void setWindowFlag(int):0:0 -> d
    1:1:void unsetSystemUiFlag(int):0:0 -> e
    1:1:void unsetWindowFlag(int):0:0 -> f
androidx.core.view.WindowInsetsControllerCompat$Impl23 -> androidx.core.view.f0$b:
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
androidx.core.view.WindowInsetsControllerCompat$Impl26 -> androidx.core.view.f0$c:
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
androidx.core.view.WindowInsetsControllerCompat$Impl30 -> androidx.core.view.f0$d:
    androidx.core.view.WindowInsetsControllerCompat mCompatController -> a
    android.view.WindowInsetsController mInsetsController -> b
    androidx.core.view.SoftwareKeyboardControllerCompat mSoftwareKeyboardControllerCompat -> c
    androidx.collection.SimpleArrayMap mListeners -> d
    android.view.Window mWindow -> e
    1:1:void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat,androidx.core.view.SoftwareKeyboardControllerCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Window;Landroidx/core/view/f0;Landroidx/core/view/e;)V"}
    2:2:void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat,androidx.core.view.SoftwareKeyboardControllerCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsetsController;Landroidx/core/view/f0;Landroidx/core/view/e;)V"}
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
    1:1:void setSystemUiFlag(int):0:0 -> c
    1:1:void unsetSystemUiFlag(int):0:0 -> d
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsetsController androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$2$2c36919335bf4dcdedc394bc02623914235fa7fa3145ee8adfaceb2f1be0ab75$0.m(android.view.Window):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$2$d6fb3db9c12ac2c8a355cda7e3de6180a104013a10776c246d439dbb950c3f8b$0.m(android.view.WindowInsetsController,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.autofill.AutofillIdCompat -> j.a:
androidx.core.view.inputmethod.EditorInfoCompat -> k.b:
    java.lang.String[] EMPTY_STRING_ARRAY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]):0:0 -> a
androidx.core.view.inputmethod.EditorInfoCompat$$ExternalSyntheticApiModelOutline0 -> k.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.inputmethod.EditorInfoCompat$$InternalSyntheticApiModelOutline$1$146b49169c1e54fa61ed4a40cd4c1de6db19541b4186361dd99f2554fe43f4a5$0.m(android.view.inputmethod.EditorInfo,java.lang.String[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.a:
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    androidx.lifecycle.ClassesInfoCache sInstance -> c
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Landroidx/lifecycle/a$a;"}
    1:1:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> b
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/a$a;"}
    1:1:boolean hasLifecycleMethods(java.lang.Class):0:0 -> d
    1:1:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;Landroidx/lifecycle/a$b;Landroidx/lifecycle/h$a;Ljava/lang/Class;)V"}
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.a$a:
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    1:1:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;Ljava/lang/Object;)V"}
    1:1:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;Ljava/lang/Object;)V"}
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.a$b:
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
    1:1:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;Ljava/lang/Object;)V"}
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.b:
    androidx.lifecycle.GeneratedAdapter[] generatedAdapters -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
androidx.lifecycle.DefaultLifecycleObserver -> androidx.lifecycle.d:
    void onResume(androidx.lifecycle.LifecycleOwner) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    void onDestroy(androidx.lifecycle.LifecycleOwner) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    void onCreate(androidx.lifecycle.LifecycleOwner) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    void onPause(androidx.lifecycle.LifecycleOwner) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    void onStop(androidx.lifecycle.LifecycleOwner) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    void onStart(androidx.lifecycle.LifecycleOwner) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
androidx.lifecycle.DefaultLifecycleObserver$-CC -> androidx.lifecycle.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onCreate(androidx.lifecycle.LifecycleOwner):0:0 -> a
    3:6:void $default$onCreate(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/l;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onDestroy(androidx.lifecycle.LifecycleOwner):0:0 -> b
    3:6:void $default$onDestroy(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/l;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onPause(androidx.lifecycle.LifecycleOwner):0:0 -> c
    3:6:void $default$onPause(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/l;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onStart(androidx.lifecycle.LifecycleOwner):0:0 -> d
    3:6:void $default$onStart(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/l;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onStop(androidx.lifecycle.LifecycleOwner):0:0 -> e
    3:6:void $default$onStop(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/l;)V"}
androidx.lifecycle.DefaultLifecycleObserverAdapter -> androidx.lifecycle.e:
    androidx.lifecycle.DefaultLifecycleObserver defaultLifecycleObserver -> a
    androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver -> b
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
androidx.lifecycle.DefaultLifecycleObserverAdapter$WhenMappings -> androidx.lifecycle.e$a:
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.f:
androidx.lifecycle.GeneratedAdapter -> androidx.lifecycle.g:
androidx.lifecycle.Lifecycle -> androidx.lifecycle.h:
    java.util.concurrent.atomic.AtomicReference internalScopeRef -> a
    void addObserver(androidx.lifecycle.LifecycleObserver) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.h$a:
    1:1:androidx.lifecycle.Lifecycle$Event[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Landroidx/lifecycle/h$a;"}
    1:1:androidx.lifecycle.Lifecycle$State getTargetState():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h$b;"}
androidx.lifecycle.Lifecycle$Event$Companion -> androidx.lifecycle.h$a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$b;)Landroidx/lifecycle/h$a;"}
    1:1:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$b;)Landroidx/lifecycle/h$a;"}
androidx.lifecycle.Lifecycle$Event$Companion$WhenMappings -> androidx.lifecycle.h$a$a$a:
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.Lifecycle$Event$WhenMappings -> androidx.lifecycle.h$a$b:
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.h$b:
    androidx.lifecycle.Lifecycle$State DESTROYED -> e
    androidx.lifecycle.Lifecycle$State INITIALIZED -> f
    androidx.lifecycle.Lifecycle$State CREATED -> g
    androidx.lifecycle.Lifecycle$State STARTED -> h
    androidx.lifecycle.Lifecycle$State RESUMED -> i
    androidx.lifecycle.Lifecycle$State[] $VALUES -> j
    1:1:androidx.lifecycle.Lifecycle$State[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Landroidx/lifecycle/h$b;"}
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.i:
    androidx.lifecycle.LifecycleDispatcher INSTANCE -> a
    java.util.concurrent.atomic.AtomicBoolean initialized -> b
    1:1:void init(android.content.Context):0:0 -> a
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.i$a:
androidx.lifecycle.LifecycleEventObserver -> androidx.lifecycle.j:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
androidx.lifecycle.LifecycleObserver -> androidx.lifecycle.k:
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.l:
    androidx.lifecycle.Lifecycle getLifecycle() -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h;"}
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.m:
    boolean enforceMainThread -> b
    androidx.arch.core.internal.FastSafeIterableMap observerMap -> c
    androidx.lifecycle.Lifecycle$State state -> d
    java.lang.ref.WeakReference lifecycleOwner -> e
    int addingObserverCounter -> f
    boolean handlingEvent -> g
    boolean newEventOccurred -> h
    java.util.ArrayList parentStates -> i
    kotlinx.coroutines.flow.MutableStateFlow _currentStateFlow -> j
    androidx.lifecycle.LifecycleRegistry$Companion Companion -> k
    1:1:void <init>(androidx.lifecycle.LifecycleOwner):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    2:2:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Z)V"}
    1:1:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    1:1:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)Landroidx/lifecycle/h$b;"}
    1:1:void enforceMainThreadIfNeeded(java.lang.String):0:0 -> d
    1:1:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:androidx.lifecycle.Lifecycle$State getCurrentState():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h$b;"}
    1:1:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$a;)V"}
    1:1:boolean isSynced():0:0 -> h
    1:1:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$b;)V"}
    1:1:void popParentState():0:0 -> j
    1:1:void pushParentState(androidx.lifecycle.Lifecycle$State):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$b;)V"}
    1:1:void sync():0:0 -> l
androidx.lifecycle.LifecycleRegistry$Companion -> androidx.lifecycle.m$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$b;Landroidx/lifecycle/h$b;)Landroidx/lifecycle/h$b;"}
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.m$b:
    androidx.lifecycle.Lifecycle$State state -> a
    androidx.lifecycle.LifecycleEventObserver lifecycleObserver -> b
    1:1:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
    1:1:androidx.lifecycle.Lifecycle$State getState():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h$b;"}
androidx.lifecycle.LifecycleService -> androidx.lifecycle.n:
    androidx.lifecycle.ServiceLifecycleDispatcher dispatcher -> a
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h;"}
androidx.lifecycle.Lifecycling -> androidx.lifecycle.o:
    androidx.lifecycle.Lifecycling INSTANCE -> a
    java.util.Map callbackCache -> b
    java.util.Map classToAdapters -> c
    1:1:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/reflect/Constructor;Ljava/lang/Object;)Landroidx/lifecycle/g;"}
    1:1:java.lang.reflect.Constructor generatedConstructor(java.lang.Class):0:0 -> b
    1:1:java.lang.String getAdapterName(java.lang.String):0:0 -> c
    1:1:int getObserverConstructorType(java.lang.Class):0:0 -> d
    1:1:boolean isLifecycleParent(java.lang.Class):0:0 -> e
    1:1:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Landroidx/lifecycle/j;"}
    1:1:int resolveObserverCallbackType(java.lang.Class):0:0 -> g
androidx.lifecycle.LiveData -> androidx.lifecycle.p:
    java.lang.Object mDataLock -> a
    androidx.arch.core.internal.SafeIterableMap mObservers -> b
    int mActiveCount -> c
    java.lang.Object mData -> d
    java.lang.Object mPendingData -> e
    int mVersion -> f
    boolean mDispatchingValue -> g
    boolean mDispatchInvalidated -> h
    java.lang.Runnable mPostValueRunnable -> i
    java.lang.Object NOT_SET -> j
    1:1:void assertMainThread(java.lang.String):0:0 -> a
    1:1:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/p$b;)V"}
    1:1:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/p$b;)V"}
    1:1:void postValue(java.lang.Object):0:0 -> d
    1:1:void setValue(java.lang.Object):0:0 -> e
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.p$a:
    androidx.lifecycle.LiveData this$0 -> e
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.p$b:
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.q:
    java.util.Map calledMethods -> a
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.r:
    1:1:void postValue(java.lang.Object):0:0 -> d
    1:1:void setValue(java.lang.Object):0:0 -> e
androidx.lifecycle.OnLifecycleEvent -> androidx.lifecycle.s:
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
    1:1:java.util.List dependencies():0:0 -> a
    1:1:java.lang.Object create(android.content.Context):0:0 -> b
    1:1:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/lifecycle/l;"}
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.u:
    int startedCounter -> a
    int resumedCounter -> b
    boolean pauseSent -> c
    boolean stopSent -> d
    android.os.Handler handler -> e
    androidx.lifecycle.LifecycleRegistry registry -> f
    java.lang.Runnable delayedPauseRunnable -> g
    androidx.lifecycle.ReportFragment$ActivityInitializationListener initializationListener -> h
    androidx.lifecycle.ProcessLifecycleOwner$Companion Companion -> i
    androidx.lifecycle.ProcessLifecycleOwner newInstance -> j
    1:1:void $r8$lambda$8RHFmaqBQY2MpEYiTr99NwPTGEU(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u;)V"}
    1:1:androidx.lifecycle.ReportFragment$ActivityInitializationListener access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u;)Landroidx/lifecycle/w$a;"}
    1:1:androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/u;"}
    1:1:void activityPaused$lifecycle_process_release():0:0 -> d
    1:1:void activityResumed$lifecycle_process_release():0:0 -> e
    1:1:void activityStarted$lifecycle_process_release():0:0 -> f
    1:1:void activityStopped$lifecycle_process_release():0:0 -> g
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h;"}
    1:1:void attach$lifecycle_process_release(android.content.Context):0:0 -> i
    1:1:void delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u;)V"}
    1:1:void dispatchPauseIfNeeded$lifecycle_process_release():0:0 -> k
    1:1:void dispatchStopIfNeeded$lifecycle_process_release():0:0 -> l
    1:1:androidx.lifecycle.LifecycleOwner get():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/l;"}
androidx.lifecycle.ProcessLifecycleOwner$$ExternalSyntheticLambda0 -> androidx.lifecycle.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.ProcessLifecycleOwner androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.f$0 -> e
    1:1:void androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.<init>(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u;)V"}
    1:1:void androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl -> androidx.lifecycle.u$a:
    androidx.lifecycle.ProcessLifecycleOwner$Api29Impl INSTANCE -> a
    1:1:void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> a
androidx.lifecycle.ProcessLifecycleOwner$Companion -> androidx.lifecycle.u$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.lifecycle.LifecycleOwner get():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/l;"}
    1:1:void init$lifecycle_process_release(android.content.Context):0:0 -> b
androidx.lifecycle.ProcessLifecycleOwner$attach$1 -> androidx.lifecycle.u$c:
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 -> androidx.lifecycle.u$c$a:
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 -> androidx.lifecycle.u$d:
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> a
    1:1:void onCreate():0:0 -> a
    1:1:void onResume():0:0 -> b
    1:1:void onStart():0:0 -> c
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.v:
    java.lang.Object mWrapped -> a
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
androidx.lifecycle.ReportFragment -> androidx.lifecycle.w:
    androidx.lifecycle.ReportFragment$ActivityInitializationListener processListener -> a
    androidx.lifecycle.ReportFragment$Companion Companion -> b
    1:1:void dispatch(androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$a;)V"}
    1:1:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/w$a;)V"}
    1:1:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/w$a;)V"}
    1:1:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/w$a;)V"}
    1:1:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/w$a;)V"}
androidx.lifecycle.ReportFragment$ActivityInitializationListener -> androidx.lifecycle.w$a:
    void onCreate() -> a
    void onResume() -> b
    void onStart() -> c
androidx.lifecycle.ReportFragment$Companion -> androidx.lifecycle.w$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/h$a;)V"}
    1:1:androidx.lifecycle.ReportFragment get(android.app.Activity):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Landroidx/lifecycle/w;"}
    1:1:void injectIfNeededIn(android.app.Activity):0:0 -> c
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.w$c:
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion -> androidx.lifecycle.w$c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:void registerIn(android.app.Activity):0:0 -> a
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$ExternalSyntheticApiModelOutline0 -> androidx.lifecycle.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$InternalSyntheticApiModelOutline$1$697f715c7301ae348f7ba2ab082eb37b64d67d01fe586b84528231ac2d1ce45b$0.m(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ServiceLifecycleDispatcher -> androidx.lifecycle.y:
    androidx.lifecycle.LifecycleRegistry registry -> a
    android.os.Handler handler -> b
    androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable lastDispatchRunnable -> c
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h;"}
    1:1:void onServicePreSuperOnBind():0:0 -> b
    1:1:void onServicePreSuperOnCreate():0:0 -> c
    1:1:void onServicePreSuperOnDestroy():0:0 -> d
    1:1:void onServicePreSuperOnStart():0:0 -> e
    1:1:void postDispatchRunnable(androidx.lifecycle.Lifecycle$Event):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$a;)V"}
androidx.lifecycle.ServiceLifecycleDispatcher$DispatchRunnable -> androidx.lifecycle.y$a:
    androidx.lifecycle.LifecycleRegistry registry -> e
    androidx.lifecycle.Lifecycle$Event event -> f
    boolean wasExecuted -> g
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.z:
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
androidx.profileinstaller.BenchmarkOperation -> androidx.profileinstaller.a:
    1:1:boolean deleteFilesRecursively(java.io.File):0:0 -> a
    1:1:void dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/profileinstaller/ProfileInstallReceiver$a;)V"}
androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper -> androidx.profileinstaller.a$a:
    1:1:java.io.File getCodeCacheDir(android.content.Context):0:0 -> a
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper -> androidx.profileinstaller.a$b:
    1:1:java.io.File getDeviceProtectedCodeCacheDir(android.content.Context):0:0 -> a
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$ExternalSyntheticApiModelOutline0 -> androidx.profileinstaller.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.Context androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$InternalSyntheticApiModelOutline$2$cb5cae3fa2bc2f683aac30a765a66d90fae1498f4b209d97105f03875c259c9b$0.m(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.DeviceProfileWriter -> androidx.profileinstaller.d:
    android.content.res.AssetManager mAssetManager -> a
    java.util.concurrent.Executor mExecutor -> b
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback mDiagnostics -> c
    byte[] mDesiredVersion -> d
    java.io.File mCurProfile -> e
    java.lang.String mApkName -> f
    java.lang.String mProfileSourceLocation -> g
    java.lang.String mProfileMetaSourceLocation -> h
    boolean mDeviceSupportsAotProfile -> i
    androidx.profileinstaller.DexProfileData[] mProfile -> j
    byte[] mTranscodedProfile -> k
    1:1:void $r8$lambda$ERhlvXCSfTRq-n5iULYjO-Ntn-w(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/d;ILjava/lang/Object;)V"}
    1:1:androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;[B)Landroidx/profileinstaller/d;"}
    1:1:void assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> c
    1:1:byte[] desiredVersion():0:0 -> d
    1:1:boolean deviceAllowsProfileInstallerAotWrites():0:0 -> e
    1:1:java.io.InputStream getProfileInputStream(android.content.res.AssetManager):0:0 -> f
    1:1:void lambda$result$0(int,java.lang.Object):0:0 -> g
    1:1:java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String):0:0 -> h
    1:1:androidx.profileinstaller.DeviceProfileWriter read():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/profileinstaller/d;"}
    1:1:androidx.profileinstaller.DexProfileData[] readProfileInternal(java.io.InputStream):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;)[Landroidx/profileinstaller/e;"}
    1:1:boolean requiresMetadata():0:0 -> k
    1:1:void result(int,java.lang.Object):0:0 -> l
    1:1:androidx.profileinstaller.DeviceProfileWriter transcodeIfNeeded():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/profileinstaller/d;"}
    1:1:boolean write():0:0 -> n
androidx.profileinstaller.DeviceProfileWriter$$ExternalSyntheticLambda0 -> androidx.profileinstaller.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$0 -> e
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$1 -> f
    java.lang.Object androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$2 -> g
    1:1:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.<init>(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/d;ILjava/lang/Object;)V"}
    1:1:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.DexProfileData -> androidx.profileinstaller.e:
    java.lang.String apkName -> a
    java.lang.String dexName -> b
    long dexChecksum -> c
    long mTypeIdCount -> d
    int classSetSize -> e
    int hotMethodRegionSize -> f
    int numMethodIds -> g
    int[] classes -> h
    java.util.TreeMap methods -> i
androidx.profileinstaller.Encoding -> androidx.profileinstaller.f:
    1:1:int bitsToBytes(int):0:0 -> a
    1:1:byte[] compress(byte[]):0:0 -> b
    1:1:java.lang.RuntimeException error(java.lang.String):0:0 -> c
    1:1:byte[] read(java.io.InputStream,int):0:0 -> d
    1:1:byte[] readCompressed(java.io.InputStream,int,int):0:0 -> e
    1:1:java.lang.String readString(java.io.InputStream,int):0:0 -> f
    1:1:long readUInt(java.io.InputStream,int):0:0 -> g
    1:1:int readUInt16(java.io.InputStream):0:0 -> h
    1:1:long readUInt32(java.io.InputStream):0:0 -> i
    1:1:int readUInt8(java.io.InputStream):0:0 -> j
    1:1:int utf8Length(java.lang.String):0:0 -> k
    1:1:void writeAll(java.io.InputStream,java.io.OutputStream):0:0 -> l
    1:1:void writeCompressed(java.io.OutputStream,byte[]):0:0 -> m
    1:1:void writeString(java.io.OutputStream,java.lang.String):0:0 -> n
    1:1:void writeUInt(java.io.OutputStream,long,int):0:0 -> o
    1:1:void writeUInt16(java.io.OutputStream,int):0:0 -> p
    1:1:void writeUInt32(java.io.OutputStream,long):0:0 -> q
    1:1:void writeUInt8(java.io.OutputStream,int):0:0 -> r
androidx.profileinstaller.FileSectionType -> androidx.profileinstaller.g:
    long mValue -> e
    androidx.profileinstaller.FileSectionType DEX_FILES -> f
    androidx.profileinstaller.FileSectionType EXTRA_DESCRIPTORS -> g
    androidx.profileinstaller.FileSectionType CLASSES -> h
    androidx.profileinstaller.FileSectionType METHODS -> i
    androidx.profileinstaller.FileSectionType AGGREGATION_COUNT -> j
    androidx.profileinstaller.FileSectionType[] $VALUES -> k
    1:1:androidx.profileinstaller.FileSectionType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Landroidx/profileinstaller/g;"}
    1:1:long getValue():0:0 -> b
androidx.profileinstaller.ProfileInstallReceiver -> androidx.profileinstaller.ProfileInstallReceiver:
    1:1:void saveProfile(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;)V"}
androidx.profileinstaller.ProfileInstallReceiver$$ExternalSyntheticLambda0 -> androidx.profileinstaller.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstallReceiver$$InternalSyntheticLambda$1$badc508ffeba965baff33caef0f9caaa937087f4a11941b2d227a4d43e062ce8$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallReceiver$$InternalSyntheticLambda$1$badc508ffeba965baff33caef0f9caaa937087f4a11941b2d227a4d43e062ce8$0.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics -> androidx.profileinstaller.ProfileInstallReceiver$a:
    androidx.profileinstaller.ProfileInstallReceiver this$0 -> a
    1:1:void onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    1:1:void onResultReceived(int,java.lang.Object):0:0 -> b
androidx.profileinstaller.ProfileInstaller -> androidx.profileinstaller.j:
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback EMPTY_DIAGNOSTICS -> a
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback LOG_DIAGNOSTICS -> b
    1:1:void $r8$lambda$lAFgOixnKjpoenploWSedI8N01U(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:boolean deleteProfileWrittenFor(java.io.File):0:0 -> b
    1:1:void deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)V"}
    1:1:boolean hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/pm/PackageInfo;Ljava/io/File;Landroidx/profileinstaller/j$c;)Z"}
    1:1:void lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:void noteProfileWrittenFor(android.content.pm.PackageInfo,java.io.File):0:0 -> f
    1:1:void result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ljava/lang/String;Landroid/content/pm/PackageInfo;Ljava/io/File;Ljava/lang/String;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)Z"}
    1:1:void writeProfile(android.content.Context):0:0 -> i
    1:1:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)V"}
    1:1:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;Z)V"}
    1:1:void writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)V"}
androidx.profileinstaller.ProfileInstaller$$ExternalSyntheticLambda0 -> androidx.profileinstaller.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$0 -> e
    int androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$1 -> f
    java.lang.Object androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$2 -> g
    1:1:void androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.<init>(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:void androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstaller$1 -> androidx.profileinstaller.j$a:
    1:1:void onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    1:1:void onResultReceived(int,java.lang.Object):0:0 -> b
androidx.profileinstaller.ProfileInstaller$2 -> androidx.profileinstaller.j$b:
    1:1:void onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    1:1:void onResultReceived(int,java.lang.Object):0:0 -> b
androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback -> androidx.profileinstaller.j$c:
    void onDiagnosticReceived(int,java.lang.Object) -> a
    void onResultReceived(int,java.lang.Object) -> b
androidx.profileinstaller.ProfileInstallerInitializer -> androidx.profileinstaller.ProfileInstallerInitializer:
    1:1:java.util.List dependencies():0:0 -> a
    1:1:java.lang.Object create(android.content.Context):0:0 -> b
    1:1:void $r8$lambda$QGpANLTF0YGY0pXfe2eje4OKwkc(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$nkOIpN4NfyreWbcXjHv0xCvwgTY(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$nvFqT5BztGB-MvszW9GUTUoI9rw(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/profileinstaller/ProfileInstallerInitializer$c;"}
    1:1:void delayAfterFirstFrame(android.content.Context):0:0 -> g
    1:1:void installAfterDelay(android.content.Context):0:0 -> h
    1:1:void lambda$delayAfterFirstFrame$0(android.content.Context):0:0 -> i
    1:1:void lambda$installAfterDelay$1(android.content.Context):0:0 -> j
    1:1:void lambda$writeInBackground$2(android.content.Context):0:0 -> k
    1:1:void writeInBackground(android.content.Context):0:0 -> l
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0 -> androidx.profileinstaller.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstallerInitializer androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$0 -> e
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$1 -> f
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.<init>(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1 -> androidx.profileinstaller.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.f$0 -> e
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda2 -> androidx.profileinstaller.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.f$0 -> e
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl -> androidx.profileinstaller.ProfileInstallerInitializer$a:
    1:1:void $r8$lambda$DSwPKNQiVu4DdgIKQZrSpqkWM-A(java.lang.Runnable,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void lambda$postFrameCallback$0(java.lang.Runnable,long):0:0 -> b
    1:1:void postFrameCallback(java.lang.Runnable):0:0 -> c
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0 -> androidx.profileinstaller.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.f$0 -> a
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.<init>(java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.doFrame(long):0:0 -> doFrame
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl -> androidx.profileinstaller.ProfileInstallerInitializer$b:
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$ExternalSyntheticApiModelOutline0 -> androidx.profileinstaller.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.Handler androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$InternalSyntheticApiModelOutline$3$8d52cf30b98a04962970f0c5e6c7c8573caae9b733781b8847fa0ec96d6a0ee8$0.m(android.os.Looper):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Result -> androidx.profileinstaller.ProfileInstallerInitializer$c:
androidx.profileinstaller.ProfileTranscoder -> androidx.profileinstaller.p:
    byte[] MAGIC_PROF -> a
    byte[] MAGIC_PROFM -> b
    1:1:void skipInlineCache(java.io.InputStream):0:0 -> A
    1:1:boolean transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[B[Landroidx/profileinstaller/e;)Z"}
    1:1:void writeClasses(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:androidx.profileinstaller.WritableFileSection writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;)Landroidx/profileinstaller/s;"}
    1:1:void writeHeader(java.io.OutputStream,byte[]):0:0 -> E
    1:1:void writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:void writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;Ljava/lang/String;)V"}
    1:1:void writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:void writeMethodsWithInlineCaches(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:int computeMethodFlags(androidx.profileinstaller.DexProfileData):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/e;)I"}
    1:1:byte[] createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;[B)[B"}
    1:1:androidx.profileinstaller.WritableFileSection createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;)Landroidx/profileinstaller/s;"}
    1:1:androidx.profileinstaller.WritableFileSection createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;)Landroidx/profileinstaller/s;"}
    1:1:byte[] createMethodBitmapRegion(androidx.profileinstaller.DexProfileData):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/e;)[B"}
    1:1:byte[] createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/e;)[B"}
    1:1:java.lang.String enforceSeparator(java.lang.String,java.lang.String):0:0 -> g
    1:1:java.lang.String extractKey(java.lang.String):0:0 -> h
    1:1:androidx.profileinstaller.DexProfileData findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;Ljava/lang/String;)Landroidx/profileinstaller/e;"}
    1:1:java.lang.String generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> j
    1:1:int getMethodBitmapStorageSize(int):0:0 -> k
    1:1:int methodFlagBitmapIndex(int,int,int):0:0 -> l
    1:1:int[] readClasses(java.io.InputStream,int):0:0 -> m
    1:1:int readFlagsFromBitmap(java.util.BitSet,int,int):0:0 -> n
    1:1:byte[] readHeader(java.io.InputStream,byte[]):0:0 -> o
    1:1:void readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Landroidx/profileinstaller/e;)V"}
    1:1:androidx.profileinstaller.DexProfileData[] readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[B[B[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[B[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;I[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[B[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[BI[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Landroidx/profileinstaller/e;)V"}
    1:1:androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[BLjava/lang/String;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Ljava/lang/String;I)[Landroidx/profileinstaller/e;"}
    1:1:int roundUpToByte(int):0:0 -> y
    1:1:void setMethodBitmapBit(byte[],int,int,androidx.profileinstaller.DexProfileData):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILandroidx/profileinstaller/e;)V"}
androidx.profileinstaller.ProfileVerifier -> androidx.profileinstaller.q:
    androidx.concurrent.futures.ResolvableFuture sFuture -> a
    java.lang.Object SYNC_OBJ -> b
    androidx.profileinstaller.ProfileVerifier$CompilationStatus sCompilationStatus -> c
    1:1:long getPackageLastUpdateTime(android.content.Context):0:0 -> a
    1:1:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZZ)Landroidx/profileinstaller/q$c;"}
    1:1:androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)Landroidx/profileinstaller/q$c;"}
androidx.profileinstaller.ProfileVerifier$Api33Impl -> androidx.profileinstaller.q$a:
    1:1:android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context):0:0 -> a
androidx.profileinstaller.ProfileVerifier$Cache -> androidx.profileinstaller.q$b:
    int mSchema -> a
    int mResultCode -> b
    long mPackageLastUpdateTime -> c
    long mInstalledCurrentProfileSize -> d
    1:1:androidx.profileinstaller.ProfileVerifier$Cache readFromFile(java.io.File):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;)Landroidx/profileinstaller/q$b;"}
    1:1:void writeOnFile(java.io.File):0:0 -> b
androidx.profileinstaller.ProfileVerifier$CompilationStatus -> androidx.profileinstaller.q$c:
    int mResultCode -> a
    boolean mHasReferenceProfile -> b
    boolean mHasCurrentProfile -> c
androidx.profileinstaller.ProfileVersion -> androidx.profileinstaller.r:
    byte[] V015_S -> a
    byte[] V010_P -> b
    byte[] V009_O_MR1 -> c
    byte[] V005_O -> d
    byte[] V001_N -> e
    byte[] METADATA_V001_N -> f
    byte[] METADATA_V002 -> g
    1:1:java.lang.String dexKeySeparator(byte[]):0:0 -> a
androidx.profileinstaller.WritableFileSection -> androidx.profileinstaller.s:
    androidx.profileinstaller.FileSectionType mType -> a
    int mExpectedInflateSize -> b
    byte[] mContents -> c
    boolean mNeedsCompression -> d
androidx.room.AutoCloser -> l.c:
    androidx.sqlite.db.SupportSQLiteOpenHelper delegateOpenHelper -> a
    android.os.Handler handler -> b
    java.lang.Runnable onAutoCloseCallback -> c
    java.lang.Object lock -> d
    long autoCloseTimeoutInMs -> e
    java.util.concurrent.Executor executor -> f
    int refCount -> g
    long lastDecrementRefCountTimeStamp -> h
    androidx.sqlite.db.SupportSQLiteDatabase delegateDatabase -> i
    boolean manuallyClosed -> j
    java.lang.Runnable executeAutoCloser -> k
    java.lang.Runnable autoCloser -> l
    androidx.room.AutoCloser$Companion Companion -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,java.util.concurrent.TimeUnit,java.util.concurrent.Executor):0:0 -> <init>
    1:1:void $r8$lambda$IDlpiQzGERMyiJhLp9dqH94Jfq8(androidx.room.AutoCloser):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c;)V"}
    1:1:void $r8$lambda$Xeo1sT4yrRJFpXIV1D3OJ8zyhr8(androidx.room.AutoCloser):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c;)V"}
    1:1:void autoCloser$lambda$3(androidx.room.AutoCloser):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c;)V"}
    1:1:void closeDatabaseIfOpen():0:0 -> d
    1:1:void decrementCountAndScheduleClose():0:0 -> e
    1:1:void executeAutoCloser$lambda$0(androidx.room.AutoCloser):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c;)V"}
    1:1:java.lang.Object executeRefCountingFunction(kotlin.jvm.functions.Function1):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;)Ljava/lang/Object;"}
    1:1:androidx.sqlite.db.SupportSQLiteDatabase getDelegateDatabase$room_runtime_release():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper getDelegateOpenHelper():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/h;"}
    1:1:androidx.sqlite.db.SupportSQLiteDatabase incrementCountAndEnsureDbIsOpen():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:void init(androidx.sqlite.db.SupportSQLiteOpenHelper):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h;)V"}
    1:1:boolean isActive():0:0 -> l
    1:1:void setAutoCloseCallback(java.lang.Runnable):0:0 -> m
    1:1:void setDelegateOpenHelper(androidx.sqlite.db.SupportSQLiteOpenHelper):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h;)V"}
androidx.room.AutoCloser$$ExternalSyntheticLambda0 -> l.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoCloser androidx.room.AutoCloser$$InternalSyntheticLambda$2$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$0.f$0 -> e
    1:1:void androidx.room.AutoCloser$$InternalSyntheticLambda$2$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$0.<init>(androidx.room.AutoCloser):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c;)V"}
    1:1:void androidx.room.AutoCloser$$InternalSyntheticLambda$2$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoCloser$$ExternalSyntheticLambda1 -> l.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.AutoCloser androidx.room.AutoCloser$$InternalSyntheticLambda$2$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$1.f$0 -> e
    1:1:void androidx.room.AutoCloser$$InternalSyntheticLambda$2$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$1.<init>(androidx.room.AutoCloser):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c;)V"}
    1:1:void androidx.room.AutoCloser$$InternalSyntheticLambda$2$428c86343428edf44da98ccc7ce4a0a8b1ab169f33105a087b7eccbf17b4fe6f$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.AutoCloser$Companion -> l.c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.room.AutoClosingRoomOpenHelper -> l.d:
    androidx.sqlite.db.SupportSQLiteOpenHelper delegate -> e
    androidx.room.AutoCloser autoCloser -> f
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase autoClosingDb -> g
    1:1:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper,androidx.room.AutoCloser):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h;Ll/c;)V"}
    1:1:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase():0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/h;"}
    1:1:void close():0:0 -> close
    1:1:java.lang.String getDatabaseName():0:0 -> getDatabaseName
    1:1:void setWriteAheadLoggingEnabled(boolean):0:0 -> setWriteAheadLoggingEnabled
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase -> l.d$a:
    androidx.room.AutoCloser autoCloser -> e
    1:1:void <init>(androidx.room.AutoCloser):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c;)V"}
    1:1:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;)Landroid/database/Cursor;"}
    1:1:android.database.Cursor query(java.lang.String):0:0 -> N
    1:1:java.lang.String getPath():0:0 -> O
    1:1:boolean inTransaction():0:0 -> P
    1:1:void pokeOpen():0:0 -> a
    1:1:void endTransaction():0:0 -> c
    1:1:void close():0:0 -> close
    1:1:void beginTransaction():0:0 -> f
    1:1:boolean isOpen():0:0 -> j
    1:1:java.util.List getAttachedDbs():0:0 -> k
    1:1:boolean isWriteAheadLoggingEnabled():0:0 -> m
    1:1:void execSQL(java.lang.String):0:0 -> p
    1:1:void setTransactionSuccessful():0:0 -> s
    1:1:void execSQL(java.lang.String,java.lang.Object[]):0:0 -> t
    1:1:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;Landroid/os/CancellationSignal;)Landroid/database/Cursor;"}
    1:1:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lo/k;"}
    1:1:void beginTransactionNonExclusive():0:0 -> y
    1:1:int update(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[]):0:0 -> z
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1 -> l.d$a$a:
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.List invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/util/List;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1 -> l.d$a$b:
    java.lang.String $sql -> f
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2 -> l.d$a$c:
    java.lang.String $sql -> f
    java.lang.Object[] $bindArgs -> g
    1:1:void <init>(java.lang.String,java.lang.Object[]):0:0 -> <init>
    1:1:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1 -> l.d$a$d:
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1 INSTANCE -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
    1:1:java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/lang/Boolean;"}
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1 -> l.d$a$e:
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/lang/Boolean;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1 -> l.d$a$f:
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.String invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/lang/String;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1 -> l.d$a$g:
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1 -> l.d$a$h:
    java.lang.String $table -> f
    int $conflictAlgorithm -> g
    android.content.ContentValues $values -> h
    java.lang.String $whereClause -> i
    java.lang.Object[] $whereArgs -> j
    1:1:void <init>(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[]):0:0 -> <init>
    1:1:java.lang.Integer invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/lang/Integer;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement -> l.d$b:
    java.lang.String sql -> e
    androidx.room.AutoCloser autoCloser -> f
    java.util.ArrayList binds -> g
    1:1:void <init>(java.lang.String,androidx.room.AutoCloser):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ll/c;)V"}
    1:1:void bindBlob(int,byte[]):0:0 -> E
    1:1:void bindNull(int):0:0 -> F
    1:1:void bindDouble(int,double):0:0 -> G
    1:1:long executeInsert():0:0 -> M
    1:1:void access$doBinds(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,androidx.sqlite.db.SupportSQLiteStatement):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/d$b;Lo/k;)V"}
    1:1:java.lang.String access$getSql$p(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/d$b;)Ljava/lang/String;"}
    1:1:void close():0:0 -> close
    1:1:void doBinds(androidx.sqlite.db.SupportSQLiteStatement):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)V"}
    1:1:java.lang.Object executeSqliteStatementWithRefCount(kotlin.jvm.functions.Function1):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;)Ljava/lang/Object;"}
    1:1:void saveBinds(int,java.lang.Object):0:0 -> g
    1:1:void bindString(int,java.lang.String):0:0 -> q
    1:1:void bindLong(int,long):0:0 -> r
    1:1:int executeUpdateDelete():0:0 -> v
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1 -> l.d$b$a:
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Long invoke(androidx.sqlite.db.SupportSQLiteStatement):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)Ljava/lang/Long;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1 -> l.d$b$b:
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement this$0 -> f
    kotlin.jvm.functions.Function1 $block -> g
    1:1:void <init>(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/d$b;Lr1/l;)V"}
    1:1:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1 -> l.d$b$c:
    androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Integer invoke(androidx.sqlite.db.SupportSQLiteStatement):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)Ljava/lang/Integer;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor -> l.d$c:
    android.database.Cursor delegate -> e
    androidx.room.AutoCloser autoCloser -> f
    1:1:void <init>(android.database.Cursor,androidx.room.AutoCloser):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/database/Cursor;Ll/c;)V"}
    1:1:void close():0:0 -> close
    1:1:void copyStringToBuffer(int,android.database.CharArrayBuffer):0:0 -> copyStringToBuffer
    1:1:void deactivate():0:0 -> deactivate
    1:1:byte[] getBlob(int):0:0 -> getBlob
    1:1:int getColumnCount():0:0 -> getColumnCount
    1:1:int getColumnIndex(java.lang.String):0:0 -> getColumnIndex
    1:1:int getColumnIndexOrThrow(java.lang.String):0:0 -> getColumnIndexOrThrow
    1:1:java.lang.String getColumnName(int):0:0 -> getColumnName
    1:1:java.lang.String[] getColumnNames():0:0 -> getColumnNames
    1:1:int getCount():0:0 -> getCount
    1:1:double getDouble(int):0:0 -> getDouble
    1:1:android.os.Bundle getExtras():0:0 -> getExtras
    1:1:float getFloat(int):0:0 -> getFloat
    1:1:int getInt(int):0:0 -> getInt
    1:1:long getLong(int):0:0 -> getLong
    1:1:android.net.Uri getNotificationUri():0:0 -> getNotificationUri
    1:1:java.util.List getNotificationUris():0:0 -> getNotificationUris
    1:1:int getPosition():0:0 -> getPosition
    1:1:short getShort(int):0:0 -> getShort
    1:1:java.lang.String getString(int):0:0 -> getString
    1:1:int getType(int):0:0 -> getType
    1:1:boolean getWantsAllOnMoveCalls():0:0 -> getWantsAllOnMoveCalls
    1:1:boolean isAfterLast():0:0 -> isAfterLast
    1:1:boolean isBeforeFirst():0:0 -> isBeforeFirst
    1:1:boolean isClosed():0:0 -> isClosed
    1:1:boolean isFirst():0:0 -> isFirst
    1:1:boolean isLast():0:0 -> isLast
    1:1:boolean isNull(int):0:0 -> isNull
    1:1:boolean move(int):0:0 -> move
    1:1:boolean moveToFirst():0:0 -> moveToFirst
    1:1:boolean moveToLast():0:0 -> moveToLast
    1:1:boolean moveToNext():0:0 -> moveToNext
    1:1:boolean moveToPosition(int):0:0 -> moveToPosition
    1:1:boolean moveToPrevious():0:0 -> moveToPrevious
    1:1:void registerContentObserver(android.database.ContentObserver):0:0 -> registerContentObserver
    1:1:void registerDataSetObserver(android.database.DataSetObserver):0:0 -> registerDataSetObserver
    1:1:boolean requery():0:0 -> requery
    1:1:android.os.Bundle respond(android.os.Bundle):0:0 -> respond
    1:1:void setExtras(android.os.Bundle):0:0 -> setExtras
    1:1:void setNotificationUri(android.content.ContentResolver,android.net.Uri):0:0 -> setNotificationUri
    1:1:void setNotificationUris(android.content.ContentResolver,java.util.List):0:0 -> setNotificationUris
    1:1:void unregisterContentObserver(android.database.ContentObserver):0:0 -> unregisterContentObserver
    1:1:void unregisterDataSetObserver(android.database.DataSetObserver):0:0 -> unregisterDataSetObserver
androidx.room.AutoClosingRoomOpenHelperFactory -> l.e:
    androidx.sqlite.db.SupportSQLiteOpenHelper$Factory delegate -> a
    androidx.room.AutoCloser autoCloser -> b
    1:1:void <init>(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.AutoCloser):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$c;Ll/c;)V"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$b;)Lo/h;"}
    1:1:androidx.room.AutoClosingRoomOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$b;)Ll/d;"}
androidx.room.DatabaseConfiguration -> l.f:
    android.content.Context context -> a
    java.lang.String name -> b
    androidx.sqlite.db.SupportSQLiteOpenHelper$Factory sqliteOpenHelperFactory -> c
    androidx.room.RoomDatabase$MigrationContainer migrationContainer -> d
    java.util.List callbacks -> e
    boolean allowMainThreadQueries -> f
    androidx.room.RoomDatabase$JournalMode journalMode -> g
    java.util.concurrent.Executor queryExecutor -> h
    java.util.concurrent.Executor transactionExecutor -> i
    android.content.Intent multiInstanceInvalidationServiceIntent -> j
    boolean requireMigration -> k
    boolean allowDestructiveMigrationOnDowngrade -> l
    java.util.Set migrationNotRequiredFrom -> m
    java.lang.String copyFromAssetPath -> n
    java.io.File copyFromFile -> o
    java.util.concurrent.Callable copyFromInputStream -> p
    java.util.List typeConverters -> q
    java.util.List autoMigrationSpecs -> r
    boolean multiInstanceInvalidation -> s
    1:1:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,android.content.Intent,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback,java.util.List,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Lo/h$c;Ll/r$e;Ljava/util/List;ZLl/r$d;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Landroid/content/Intent;ZZLjava/util/Set;Ljava/lang/String;Ljava/io/File;Ljava/util/concurrent/Callable;Ll/r$f;Ljava/util/List;Ljava/util/List;)V"}
    1:1:boolean isMigrationRequired(int,int):0:0 -> a
androidx.room.DelegatingOpenHelper -> l.g:
    androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/h;"}
androidx.room.EntityDeletionOrUpdateAdapter -> l.h:
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
androidx.room.EntityInsertionAdapter -> l.i:
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Ljava/lang/Object;)V"}
    1:1:void insert(java.lang.Object):0:0 -> j
androidx.room.IMultiInstanceInvalidationCallback -> androidx.room.IMultiInstanceInvalidationCallback:
    void onInvalidation(java.lang.String[]) -> O
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy -> androidx.room.IMultiInstanceInvalidationCallback$Stub$a:
    android.os.IBinder mRemote -> o
    1:1:void onInvalidation(java.lang.String[]):0:0 -> O
androidx.room.IMultiInstanceInvalidationService -> androidx.room.IMultiInstanceInvalidationService:
    void broadcastInvalidation(int,java.lang.String[]) -> H
    void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int) -> b0
    int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String) -> c
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy -> androidx.room.IMultiInstanceInvalidationService$Stub$a:
    android.os.IBinder mRemote -> o
    1:1:void broadcastInvalidation(int,java.lang.String[]):0:0 -> H
    1:1:int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String):0:0 -> c
androidx.room.Index$Order -> l.j:
    androidx.room.Index$Order ASC -> e
    androidx.room.Index$Order DESC -> f
    androidx.room.Index$Order[] $VALUES -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.room.Index$Order[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll/j;"}
    1:1:androidx.room.Index$Order valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/j;"}
    1:1:androidx.room.Index$Order[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll/j;"}
androidx.room.InvalidationLiveDataContainer -> l.k:
    androidx.room.RoomDatabase database -> a
    java.util.Set liveDataSet -> b
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
androidx.room.InvalidationTracker -> l.m:
    androidx.room.RoomDatabase database -> a
    java.util.Map shadowTablesMap -> b
    java.util.Map viewTables -> c
    java.util.Map tableIdLookup -> d
    java.lang.String[] tablesNames -> e
    androidx.room.AutoCloser autoCloser -> f
    java.util.concurrent.atomic.AtomicBoolean pendingRefresh -> g
    boolean initialized -> h
    androidx.sqlite.db.SupportSQLiteStatement cleanupStatement -> i
    androidx.room.InvalidationTracker$ObservedTableTracker observedTableTracker -> j
    androidx.room.InvalidationLiveDataContainer invalidationLiveDataContainer -> k
    androidx.arch.core.internal.SafeIterableMap observerMap -> l
    androidx.room.MultiInstanceInvalidationClient multiInstanceInvalidationClient -> m
    java.lang.Object syncTriggersLock -> n
    java.lang.Object trackerLock -> o
    java.lang.Runnable refreshRunnable -> p
    androidx.room.InvalidationTracker$Companion Companion -> q
    java.lang.String[] TRIGGERS -> r
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;Ljava/util/Map;Ljava/util/Map;[Ljava/lang/String;)V"}
    1:1:androidx.room.AutoCloser access$getAutoCloser$p(androidx.room.InvalidationTracker):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m;)Ll/c;"}
    1:1:void addObserver(androidx.room.InvalidationTracker$Observer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m$c;)V"}
    1:1:boolean ensureInitialization$room_runtime_release():0:0 -> c
    1:1:androidx.sqlite.db.SupportSQLiteStatement getCleanupStatement$room_runtime_release():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/k;"}
    1:1:androidx.room.RoomDatabase getDatabase$room_runtime_release():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/r;"}
    1:1:androidx.arch.core.internal.SafeIterableMap getObserverMap$room_runtime_release():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc/b;"}
    1:1:java.util.concurrent.atomic.AtomicBoolean getPendingRefresh():0:0 -> g
    1:1:java.util.Map getTableIdLookup$room_runtime_release():0:0 -> h
    1:1:void internalInit$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void notifyObserversByTableNames(java.lang.String[]):0:0 -> j
    1:1:void onAutoCloseCallback$room_runtime_release():0:0 -> k
    1:1:void refreshVersionsAsync():0:0 -> l
    1:1:void removeObserver(androidx.room.InvalidationTracker$Observer):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m$c;)V"}
    1:1:java.lang.String[] resolveViews(java.lang.String[]):0:0 -> n
    1:1:void setAutoCloser$room_runtime_release(androidx.room.AutoCloser):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/c;)V"}
    1:1:void startMultiInstanceInvalidation$room_runtime_release(android.content.Context,java.lang.String,android.content.Intent):0:0 -> p
    1:1:void startTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;I)V"}
    1:1:void stopTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;I)V"}
    1:1:void syncTriggers$room_runtime_release():0:0 -> s
    1:1:void syncTriggers$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.room.InvalidationTracker$$ExternalSyntheticLambda0 -> l.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.InvalidationTracker androidx.room.InvalidationTracker$$InternalSyntheticLambda$2$7002e9fde3521f548f6f7d8407c3101ba51ad0ca9c2ca5cd33fee50c4f3a9c31$0.f$0 -> e
    1:1:void androidx.room.InvalidationTracker$$InternalSyntheticLambda$2$7002e9fde3521f548f6f7d8407c3101ba51ad0ca9c2ca5cd33fee50c4f3a9c31$0.<init>(androidx.room.InvalidationTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m;)V"}
    1:1:void androidx.room.InvalidationTracker$$InternalSyntheticLambda$2$7002e9fde3521f548f6f7d8407c3101ba51ad0ca9c2ca5cd33fee50c4f3a9c31$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.InvalidationTracker$Companion -> l.m$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:void beginTransactionInternal$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:java.lang.String getTriggerName$room_runtime_release(java.lang.String,java.lang.String):0:0 -> b
androidx.room.InvalidationTracker$ObservedTableTracker -> l.m$b:
    long[] tableObservers -> a
    boolean[] triggerStates -> b
    int[] triggerStateChanges -> c
    boolean needsSync -> d
    androidx.room.InvalidationTracker$ObservedTableTracker$Companion Companion -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int):0:0 -> <init>
    1:1:int[] getTablesToSync():0:0 -> a
    1:1:boolean onAdded(int[]):0:0 -> b
    1:1:boolean onRemoved(int[]):0:0 -> c
    1:1:void resetTriggerState():0:0 -> d
androidx.room.InvalidationTracker$ObservedTableTracker$Companion -> l.m$b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.room.InvalidationTracker$Observer -> l.m$c:
    java.lang.String[] tables -> a
    1:1:void <init>(java.lang.String[]):0:0 -> <init>
    1:1:java.lang.String[] getTables$room_runtime_release():0:0 -> a
    boolean isRemote$room_runtime_release() -> b
    void onInvalidated(java.util.Set) -> c
androidx.room.InvalidationTracker$ObserverWrapper -> l.m$d:
    androidx.room.InvalidationTracker$Observer observer -> a
    int[] tableIds -> b
    java.lang.String[] tableNames -> c
    java.util.Set singleTableSet -> d
    1:1:void <init>(androidx.room.InvalidationTracker$Observer,int[],java.lang.String[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m$c;[I[Ljava/lang/String;)V"}
    1:1:int[] getTableIds$room_runtime_release():0:0 -> a
    1:1:void notifyByTableInvalidStatus$room_runtime_release(java.util.Set):0:0 -> b
    1:1:void notifyByTableNames$room_runtime_release(java.lang.String[]):0:0 -> c
androidx.room.InvalidationTracker$refreshRunnable$1 -> l.m$e:
    androidx.room.InvalidationTracker this$0 -> e
    1:1:void <init>(androidx.room.InvalidationTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m;)V"}
    1:1:java.util.Set checkUpdatedTable():0:0 -> a
    1:1:void run():0:0 -> run
androidx.room.MultiInstanceInvalidationClient -> androidx.room.MultiInstanceInvalidationClient:
    java.lang.String name -> a
    androidx.room.InvalidationTracker invalidationTracker -> b
    java.util.concurrent.Executor executor -> c
    android.content.Context appContext -> d
    int clientId -> e
    androidx.room.InvalidationTracker$Observer observer -> f
    androidx.room.IMultiInstanceInvalidationService service -> g
    androidx.room.IMultiInstanceInvalidationCallback callback -> h
    java.util.concurrent.atomic.AtomicBoolean stopped -> i
    android.content.ServiceConnection serviceConnection -> j
    java.lang.Runnable setUpRunnable -> k
    java.lang.Runnable removeObserverRunnable -> l
    1:1:void <init>(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Landroid/content/Intent;Ll/m;Ljava/util/concurrent/Executor;)V"}
    1:1:void $r8$lambda$OUFtvTStWETjeJxrBwS2HtXq3VE(androidx.room.MultiInstanceInvalidationClient):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$at7cvPuqmY8Y6FAv2N0cZPhRid0(androidx.room.MultiInstanceInvalidationClient):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getClientId():0:0 -> c
    1:1:java.util.concurrent.Executor getExecutor():0:0 -> d
    1:1:androidx.room.InvalidationTracker getInvalidationTracker():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/m;"}
    1:1:androidx.room.InvalidationTracker$Observer getObserver():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/m$c;"}
    1:1:java.lang.Runnable getRemoveObserverRunnable():0:0 -> g
    1:1:androidx.room.IMultiInstanceInvalidationService getService():0:0 -> h
    1:1:java.lang.Runnable getSetUpRunnable():0:0 -> i
    1:1:java.util.concurrent.atomic.AtomicBoolean getStopped():0:0 -> j
    1:1:void removeObserverRunnable$lambda$2(androidx.room.MultiInstanceInvalidationClient):0:0 -> k
    1:1:void setObserver(androidx.room.InvalidationTracker$Observer):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/m$c;)V"}
    1:1:void setService(androidx.room.IMultiInstanceInvalidationService):0:0 -> m
    1:1:void setUpRunnable$lambda$1(androidx.room.MultiInstanceInvalidationClient):0:0 -> n
androidx.room.MultiInstanceInvalidationClient$$ExternalSyntheticLambda0 -> l.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.MultiInstanceInvalidationClient androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$2$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$0.f$0 -> e
    1:1:void androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$2$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$0.<init>(androidx.room.MultiInstanceInvalidationClient):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$2$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.MultiInstanceInvalidationClient$$ExternalSyntheticLambda1 -> l.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.MultiInstanceInvalidationClient androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$2$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$1.f$0 -> e
    1:1:void androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$2$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$1.<init>(androidx.room.MultiInstanceInvalidationClient):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.room.MultiInstanceInvalidationClient$$InternalSyntheticLambda$2$53732ed0c7115bd515974dcbfb4fce4866ccaeffec8bb2d4c8bfac448f156e99$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.MultiInstanceInvalidationClient$1 -> androidx.room.MultiInstanceInvalidationClient$a:
    androidx.room.MultiInstanceInvalidationClient this$0 -> b
    1:1:boolean isRemote$room_runtime_release():0:0 -> b
    1:1:void onInvalidated(java.util.Set):0:0 -> c
androidx.room.MultiInstanceInvalidationClient$callback$1 -> androidx.room.MultiInstanceInvalidationClient$callback$1:
    androidx.room.MultiInstanceInvalidationClient this$0 -> o
    1:1:void onInvalidation(java.lang.String[]):0:0 -> O
    1:1:void $r8$lambda$YbA_oLvwgwIT6Ag339-3Mj03vfc(androidx.room.MultiInstanceInvalidationClient,java.lang.String[]):0:0 -> j0
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onInvalidation$lambda$0(androidx.room.MultiInstanceInvalidationClient,java.lang.String[]):0:0 -> k0
androidx.room.MultiInstanceInvalidationClient$callback$1$$ExternalSyntheticLambda0 -> l.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.room.MultiInstanceInvalidationClient androidx.room.MultiInstanceInvalidationClient$callback$1$$InternalSyntheticLambda$1$e0384cf52252c7e972fa2891534fdd0952f950b0b4857bcff2122a48cca953dc$0.f$0 -> e
    java.lang.String[] androidx.room.MultiInstanceInvalidationClient$callback$1$$InternalSyntheticLambda$1$e0384cf52252c7e972fa2891534fdd0952f950b0b4857bcff2122a48cca953dc$0.f$1 -> f
    1:1:void androidx.room.MultiInstanceInvalidationClient$callback$1$$InternalSyntheticLambda$1$e0384cf52252c7e972fa2891534fdd0952f950b0b4857bcff2122a48cca953dc$0.<init>(androidx.room.MultiInstanceInvalidationClient,java.lang.String[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.room.MultiInstanceInvalidationClient$callback$1$$InternalSyntheticLambda$1$e0384cf52252c7e972fa2891534fdd0952f950b0b4857bcff2122a48cca953dc$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1 -> androidx.room.MultiInstanceInvalidationClient$b:
    androidx.room.MultiInstanceInvalidationClient this$0 -> a
androidx.room.MultiInstanceInvalidationService -> androidx.room.MultiInstanceInvalidationService:
    int maxClientId -> a
    java.util.Map clientNames -> b
    android.os.RemoteCallbackList callbackList -> c
    androidx.room.IMultiInstanceInvalidationService$Stub binder -> d
    1:1:android.os.RemoteCallbackList getCallbackList$room_runtime_release():0:0 -> a
    1:1:java.util.Map getClientNames$room_runtime_release():0:0 -> b
    1:1:int getMaxClientId$room_runtime_release():0:0 -> c
    1:1:void setMaxClientId$room_runtime_release(int):0:0 -> d
androidx.room.MultiInstanceInvalidationService$binder$1 -> androidx.room.MultiInstanceInvalidationService$binder$1:
    androidx.room.MultiInstanceInvalidationService this$0 -> o
    1:1:void broadcastInvalidation(int,java.lang.String[]):0:0 -> H
    1:1:void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int):0:0 -> b0
    1:1:int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String):0:0 -> c
androidx.room.MultiInstanceInvalidationService$callbackList$1 -> androidx.room.MultiInstanceInvalidationService$a:
    androidx.room.MultiInstanceInvalidationService this$0 -> a
    1:1:void onCallbackDied(androidx.room.IMultiInstanceInvalidationCallback,java.lang.Object):0:0 -> a
androidx.room.Room -> l.q:
    androidx.room.Room INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/Class;Ljava/lang/String;)Ll/r$a;"}
    1:1:java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String):0:0 -> b
    1:1:androidx.room.RoomDatabase$Builder inMemoryDatabaseBuilder(android.content.Context,java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/Class;)Ll/r$a;"}
androidx.room.RoomDatabase -> l.r:
    androidx.sqlite.db.SupportSQLiteDatabase mDatabase -> a
    java.util.concurrent.Executor internalQueryExecutor -> b
    java.util.concurrent.Executor internalTransactionExecutor -> c
    androidx.sqlite.db.SupportSQLiteOpenHelper internalOpenHelper -> d
    androidx.room.InvalidationTracker invalidationTracker -> e
    boolean allowMainThreadQueries -> f
    boolean writeAheadLoggingEnabled -> g
    java.util.List mCallbacks -> h
    java.util.Map autoMigrationSpecs -> i
    java.util.concurrent.locks.ReentrantReadWriteLock readWriteLock -> j
    androidx.room.AutoCloser autoCloser -> k
    java.lang.ThreadLocal suspendingTransactionId -> l
    java.util.Map backingFieldMap -> m
    java.util.Map typeConverters -> n
    androidx.room.RoomDatabase$Companion Companion -> o
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void setTransactionSuccessful():0:0 -> A
    1:1:java.lang.Object unwrapOpenHelper(java.lang.Class,androidx.sqlite.db.SupportSQLiteOpenHelper):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/h;)Ljava/lang/Object;"}
    1:1:void access$internalBeginTransaction(androidx.room.RoomDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:void access$internalEndTransaction(androidx.room.RoomDatabase):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:void assertNotMainThread():0:0 -> c
    1:1:void assertNotSuspendingTransaction():0:0 -> d
    1:1:void beginTransaction():0:0 -> e
    1:1:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lo/k;"}
    androidx.room.InvalidationTracker createInvalidationTracker() -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/m;"}
    androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/f;)Lo/h;"}
    1:1:void endTransaction():0:0 -> i
    1:1:java.util.List getAutoMigrations(java.util.Map):0:0 -> j
    1:1:java.util.concurrent.locks.Lock getCloseLock$room_runtime_release():0:0 -> k
    1:1:androidx.room.InvalidationTracker getInvalidationTracker():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/m;"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/h;"}
    1:1:java.util.concurrent.Executor getQueryExecutor():0:0 -> n
    1:1:java.util.Set getRequiredAutoMigrationSpecs():0:0 -> o
    1:1:java.util.Map getRequiredTypeConverters():0:0 -> p
    1:1:boolean inTransaction():0:0 -> q
    1:1:void init(androidx.room.DatabaseConfiguration):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/f;)V"}
    1:1:void internalBeginTransaction():0:0 -> s
    1:1:void internalEndTransaction():0:0 -> t
    1:1:void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:boolean isMainThread$room_runtime_release():0:0 -> v
    1:1:boolean isOpen():0:0 -> w
    1:1:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;Landroid/os/CancellationSignal;)Landroid/database/Cursor;"}
    1:1:android.database.Cursor query$default(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal,int,java.lang.Object):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;Lo/j;Landroid/os/CancellationSignal;ILjava/lang/Object;)Landroid/database/Cursor;"}
    1:1:java.lang.Object runInTransaction(java.util.concurrent.Callable):0:0 -> z
androidx.room.RoomDatabase$Builder -> l.r$a:
    android.content.Context context -> a
    java.lang.Class klass -> b
    java.lang.String name -> c
    java.util.List callbacks -> d
    java.util.List typeConverters -> e
    java.util.List autoMigrationSpecs -> f
    java.util.concurrent.Executor queryExecutor -> g
    java.util.concurrent.Executor transactionExecutor -> h
    androidx.sqlite.db.SupportSQLiteOpenHelper$Factory factory -> i
    boolean allowMainThreadQueries -> j
    androidx.room.RoomDatabase$JournalMode journalMode -> k
    android.content.Intent multiInstanceInvalidationIntent -> l
    boolean requireMigration -> m
    boolean allowDestructiveMigrationOnDowngrade -> n
    long autoCloseTimeout -> o
    java.util.concurrent.TimeUnit autoCloseTimeUnit -> p
    androidx.room.RoomDatabase$MigrationContainer migrationContainer -> q
    java.util.Set migrationsNotRequiredFrom -> r
    java.util.Set migrationStartAndEndVersions -> s
    java.lang.String copyFromAssetPath -> t
    java.io.File copyFromFile -> u
    java.util.concurrent.Callable copyFromInputStream -> v
    1:1:void <init>(android.content.Context,java.lang.Class,java.lang.String):0:0 -> <init>
    1:1:androidx.room.RoomDatabase$Builder addCallback(androidx.room.RoomDatabase$Callback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r$b;)Ll/r$a;"}
    1:1:androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lm/b;)Ll/r$a;"}
    1:1:androidx.room.RoomDatabase$Builder allowMainThreadQueries():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/r$a;"}
    1:1:androidx.room.RoomDatabase build():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/r;"}
    1:1:androidx.room.RoomDatabase$Builder fallbackToDestructiveMigration():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/r$a;"}
    1:1:androidx.room.RoomDatabase$Builder openHelperFactory(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$c;)Ll/r$a;"}
    1:1:androidx.room.RoomDatabase$Builder setQueryExecutor(java.util.concurrent.Executor):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;)Ll/r$a;"}
androidx.room.RoomDatabase$Callback -> l.r$b:
    void <init>() -> <init>
    1:1:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void onDestructiveMigration(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.room.RoomDatabase$Companion -> l.r$c:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.room.RoomDatabase$JournalMode -> l.r$d:
    androidx.room.RoomDatabase$JournalMode AUTOMATIC -> e
    androidx.room.RoomDatabase$JournalMode TRUNCATE -> f
    androidx.room.RoomDatabase$JournalMode WRITE_AHEAD_LOGGING -> g
    androidx.room.RoomDatabase$JournalMode[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.room.RoomDatabase$JournalMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll/r$d;"}
    1:1:boolean isLowRamDevice(android.app.ActivityManager):0:0 -> b
    1:1:androidx.room.RoomDatabase$JournalMode resolve$room_runtime_release(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ll/r$d;"}
    1:1:androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/r$d;"}
    1:1:androidx.room.RoomDatabase$JournalMode[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll/r$d;"}
androidx.room.RoomDatabase$MigrationContainer -> l.r$e:
    java.util.Map migrations -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void addMigration(androidx.room.migration.Migration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/b;)V"}
    1:1:void addMigrations(androidx.room.migration.Migration[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lm/b;)V"}
    1:1:boolean contains(int,int):0:0 -> c
    1:1:java.util.List findMigrationPath(int,int):0:0 -> d
    1:1:java.util.List findUpMigrationPath(java.util.List,boolean,int,int):0:0 -> e
    1:1:java.util.Map getMigrations():0:0 -> f
androidx.room.RoomDatabase$PrepackagedDatabaseCallback -> l.r$f:
androidx.room.RoomDatabase$beginTransaction$1 -> l.r$g:
    androidx.room.RoomDatabase this$0 -> f
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.RoomDatabase$endTransaction$1 -> l.r$h:
    androidx.room.RoomDatabase this$0 -> f
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.room.RoomMasterTable -> l.s:
    androidx.room.RoomMasterTable INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.String createInsertQuery(java.lang.String):0:0 -> a
androidx.room.RoomOpenHelper -> l.t:
    androidx.room.DatabaseConfiguration configuration -> c
    androidx.room.RoomOpenHelper$Delegate delegate -> d
    java.lang.String identityHash -> e
    java.lang.String legacyHash -> f
    androidx.room.RoomOpenHelper$Companion Companion -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/f;Ll/t$b;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;II)V"}
    1:1:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;II)V"}
    1:1:void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void createMasterTableIfNotExists(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.room.RoomOpenHelper$Companion -> l.t$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:boolean hasEmptySchema$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Z"}
    1:1:boolean hasRoomMasterTable$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Z"}
androidx.room.RoomOpenHelper$Delegate -> l.t$b:
    int version -> a
    1:1:void <init>(int):0:0 -> <init>
    void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    void onOpen(androidx.sqlite.db.SupportSQLiteDatabase) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ll/t$c;"}
androidx.room.RoomOpenHelper$ValidationResult -> l.t$c:
    boolean isValid -> a
    java.lang.String expectedFoundMsg -> b
    1:1:void <init>(boolean,java.lang.String):0:0 -> <init>
androidx.room.RoomSQLiteQuery -> l.u:
    int capacity -> e
    java.lang.String query -> f
    long[] longBindings -> g
    double[] doubleBindings -> h
    java.lang.String[] stringBindings -> i
    byte[][] blobBindings -> j
    int[] bindingTypes -> k
    int argCount -> l
    androidx.room.RoomSQLiteQuery$Companion Companion -> m
    java.util.TreeMap queryPool -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILs1/g;)V"}
    1:1:void bindBlob(int,byte[]):0:0 -> E
    1:1:void bindNull(int):0:0 -> F
    1:1:void bindDouble(int,double):0:0 -> G
    1:1:java.lang.String getSql():0:0 -> a
    1:1:void bindTo(androidx.sqlite.db.SupportSQLiteProgram):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/i;)V"}
    1:1:void close():0:0 -> close
    1:1:androidx.room.RoomSQLiteQuery acquire(java.lang.String,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;I)Ll/u;"}
    1:1:int getArgCount():0:0 -> e
    1:1:void init(java.lang.String,int):0:0 -> g
    1:1:void release():0:0 -> h
    1:1:void bindString(int,java.lang.String):0:0 -> q
    1:1:void bindLong(int,long):0:0 -> r
androidx.room.RoomSQLiteQuery$Companion -> l.u$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.room.RoomSQLiteQuery acquire(java.lang.String,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;I)Ll/u;"}
    1:1:void prunePoolLocked$room_runtime_release():0:0 -> b
androidx.room.SQLiteCopyOpenHelper -> l.v:
    android.content.Context context -> e
    java.lang.String copyFromAssetPath -> f
    java.io.File copyFromFile -> g
    java.util.concurrent.Callable copyFromInputStream -> h
    int databaseVersion -> i
    androidx.sqlite.db.SupportSQLiteOpenHelper delegate -> j
    androidx.room.DatabaseConfiguration databaseConfiguration -> k
    boolean verified -> l
    1:1:void <init>(android.content.Context,java.lang.String,java.io.File,java.util.concurrent.Callable,int,androidx.sqlite.db.SupportSQLiteOpenHelper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Ljava/io/File;Ljava/util/concurrent/Callable;ILo/h;)V"}
    1:1:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase():0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/h;"}
    1:1:void copyDatabaseFile(java.io.File,boolean):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:void dispatchOnOpenPrepackagedDatabase(java.io.File,boolean):0:0 -> d
    1:1:void setDatabaseConfiguration(androidx.room.DatabaseConfiguration):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/f;)V"}
    1:1:void verifyDatabaseFile(boolean):0:0 -> g
    1:1:java.lang.String getDatabaseName():0:0 -> getDatabaseName
    1:1:void setWriteAheadLoggingEnabled(boolean):0:0 -> setWriteAheadLoggingEnabled
androidx.room.SQLiteCopyOpenHelperFactory -> l.w:
    java.lang.String mCopyFromAssetPath -> a
    java.io.File mCopyFromFile -> b
    java.util.concurrent.Callable mCopyFromInputStream -> c
    androidx.sqlite.db.SupportSQLiteOpenHelper$Factory mDelegate -> d
    1:1:void <init>(java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/io/File;Ljava/util/concurrent/Callable;Lo/h$c;)V"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$b;)Lo/h;"}
androidx.room.SharedSQLiteStatement -> l.x:
    androidx.room.RoomDatabase database -> a
    java.util.concurrent.atomic.AtomicBoolean lock -> b
    kotlin.Lazy stmt$delegate -> c
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:androidx.sqlite.db.SupportSQLiteStatement access$createNewStatement(androidx.room.SharedSQLiteStatement):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/x;)Lo/k;"}
    1:1:androidx.sqlite.db.SupportSQLiteStatement acquire():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/k;"}
    1:1:void assertNotMainThread():0:0 -> c
    1:1:androidx.sqlite.db.SupportSQLiteStatement createNewStatement():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/k;"}
    java.lang.String createQuery() -> e
    1:1:androidx.sqlite.db.SupportSQLiteStatement getStmt():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/k;"}
    1:1:androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo/k;"}
    1:1:void release(androidx.sqlite.db.SupportSQLiteStatement):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)V"}
androidx.room.SharedSQLiteStatement$stmt$2 -> l.x$a:
    androidx.room.SharedSQLiteStatement this$0 -> f
    1:1:void <init>(androidx.room.SharedSQLiteStatement):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/x;)V"}
    1:1:androidx.sqlite.db.SupportSQLiteStatement invoke():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/k;"}
    1:1:java.lang.Object invoke():0:0 -> b
androidx.room.TransactionExecutor -> l.z:
    java.util.concurrent.Executor executor -> e
    java.util.ArrayDeque tasks -> f
    java.lang.Runnable active -> g
    java.lang.Object syncLock -> h
    1:1:void <init>(java.util.concurrent.Executor):0:0 -> <init>
    1:1:void $r8$lambda$AympDHYBb78s7_N_9gRsXF0sHiw(java.lang.Runnable,androidx.room.TransactionExecutor):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Ll/z;)V"}
    1:1:void execute$lambda$1$lambda$0(java.lang.Runnable,androidx.room.TransactionExecutor):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Ll/z;)V"}
    1:1:void scheduleNext():0:0 -> c
    1:1:void execute(java.lang.Runnable):0:0 -> execute
androidx.room.TransactionExecutor$$ExternalSyntheticLambda0 -> l.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.room.TransactionExecutor$$InternalSyntheticLambda$2$a7aff24326a30578a87b66dd3a2fd52bae145a6d4358e68c6948337d64752f59$0.f$0 -> e
    androidx.room.TransactionExecutor androidx.room.TransactionExecutor$$InternalSyntheticLambda$2$a7aff24326a30578a87b66dd3a2fd52bae145a6d4358e68c6948337d64752f59$0.f$1 -> f
    1:1:void androidx.room.TransactionExecutor$$InternalSyntheticLambda$2$a7aff24326a30578a87b66dd3a2fd52bae145a6d4358e68c6948337d64752f59$0.<init>(java.lang.Runnable,androidx.room.TransactionExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Ll/z;)V"}
    1:1:void androidx.room.TransactionExecutor$$InternalSyntheticLambda$2$a7aff24326a30578a87b66dd3a2fd52bae145a6d4358e68c6948337d64752f59$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.room.migration.AutoMigrationSpec -> m.a:
    void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.room.migration.Migration -> m.b:
    int startVersion -> a
    int endVersion -> b
    1:1:void <init>(int,int):0:0 -> <init>
    void migrate(androidx.sqlite.db.SupportSQLiteDatabase) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.room.util.CursorUtil -> n.a:
    1:1:android.database.Cursor copyAndClose(android.database.Cursor):0:0 -> a
    1:1:int findColumnIndexBySuffix(android.database.Cursor,java.lang.String):0:0 -> b
    1:1:int findColumnIndexBySuffix(java.lang.String[],java.lang.String):0:0 -> c
    1:1:int getColumnIndex(android.database.Cursor,java.lang.String):0:0 -> d
    1:1:int getColumnIndexOrThrow(android.database.Cursor,java.lang.String):0:0 -> e
androidx.room.util.DBUtil -> n.b:
    1:1:void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;Lo/j;ZLandroid/os/CancellationSignal;)Landroid/database/Cursor;"}
    1:1:int readVersion(java.io.File):0:0 -> c
androidx.room.util.FileUtil -> n.c:
    1:1:void copy(java.nio.channels.ReadableByteChannel,java.nio.channels.FileChannel):0:0 -> a
androidx.room.util.TableInfo -> n.d:
    java.lang.String name -> a
    java.util.Map columns -> b
    java.util.Set foreignKeys -> c
    java.util.Set indices -> d
    androidx.room.util.TableInfo$Companion Companion -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,java.util.Map,java.util.Set,java.util.Set):0:0 -> <init>
    1:1:androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Ljava/lang/String;)Ln/d;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.room.util.TableInfo$Column -> n.d$a:
    java.lang.String name -> a
    java.lang.String type -> b
    boolean notNull -> c
    int primaryKeyPosition -> d
    java.lang.String defaultValue -> e
    int createdFrom -> f
    int affinity -> g
    androidx.room.util.TableInfo$Column$Companion Companion -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,java.lang.String,boolean,int,java.lang.String,int):0:0 -> <init>
    1:1:int findAffinity(java.lang.String):0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.room.util.TableInfo$Column$Companion -> n.d$a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:boolean containsSurroundingParenthesis(java.lang.String):0:0 -> a
    1:1:boolean defaultValueEquals(java.lang.String,java.lang.String):0:0 -> b
androidx.room.util.TableInfo$Companion -> n.d$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Ljava/lang/String;)Ln/d;"}
androidx.room.util.TableInfo$ForeignKey -> n.d$c:
    java.lang.String referenceTable -> a
    java.lang.String onDelete -> b
    java.lang.String onUpdate -> c
    java.util.List columnNames -> d
    java.util.List referenceColumnNames -> e
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.room.util.TableInfo$ForeignKeyWithSequence -> n.d$d:
    int id -> e
    int sequence -> f
    java.lang.String from -> g
    java.lang.String to -> h
    1:1:void <init>(int,int,java.lang.String,java.lang.String):0:0 -> <init>
    1:1:int compareTo(androidx.room.util.TableInfo$ForeignKeyWithSequence):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln/d$d;)I"}
    1:1:java.lang.String getFrom():0:0 -> b
    1:1:int getId():0:0 -> c
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
    1:1:java.lang.String getTo():0:0 -> d
androidx.room.util.TableInfo$Index -> n.d$e:
    java.lang.String name -> a
    boolean unique -> b
    java.util.List columns -> c
    java.util.List orders -> d
    androidx.room.util.TableInfo$Index$Companion Companion -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,boolean,java.util.List,java.util.List):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.room.util.TableInfo$Index$Companion -> n.d$e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.room.util.TableInfoKt -> n.e:
    1:1:java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Ljava/lang/String;)Ljava/util/Map;"}
    1:1:java.util.List readForeignKeyFieldMappings(android.database.Cursor):0:0 -> b
    1:1:java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Ljava/lang/String;)Ljava/util/Set;"}
    1:1:androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Ljava/lang/String;Z)Ln/d$e;"}
    1:1:java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Ljava/lang/String;)Ljava/util/Set;"}
    1:1:androidx.room.util.TableInfo readTableInfo(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Ljava/lang/String;)Ln/d;"}
androidx.sqlite.db.SimpleSQLiteQuery -> o.a:
    java.lang.String query -> e
    java.lang.Object[] bindArgs -> f
    androidx.sqlite.db.SimpleSQLiteQuery$Companion Companion -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.Object[]):0:0 -> <init>
    1:1:java.lang.String getSql():0:0 -> a
    1:1:void bindTo(androidx.sqlite.db.SupportSQLiteProgram):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/i;)V"}
androidx.sqlite.db.SimpleSQLiteQuery$Companion -> o.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:void bind(androidx.sqlite.db.SupportSQLiteProgram,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/i;ILjava/lang/Object;)V"}
    1:1:void bind(androidx.sqlite.db.SupportSQLiteProgram,java.lang.Object[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/i;[Ljava/lang/Object;)V"}
androidx.sqlite.db.SupportSQLiteCompat$Api16Impl -> o.b:
    androidx.sqlite.db.SupportSQLiteCompat$Api16Impl INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean deleteDatabase(java.io.File):0:0 -> a
    1:1:boolean isWriteAheadLoggingEnabled(android.database.sqlite.SQLiteDatabase):0:0 -> b
    1:1:android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal,android.database.sqlite.SQLiteDatabase$CursorFactory):0:0 -> c
    1:1:void setWriteAheadLoggingEnabled(android.database.sqlite.SQLiteOpenHelper,boolean):0:0 -> d
androidx.sqlite.db.SupportSQLiteCompat$Api19Impl -> o.c:
    androidx.sqlite.db.SupportSQLiteCompat$Api19Impl INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:android.net.Uri getNotificationUri(android.database.Cursor):0:0 -> a
    1:1:boolean isLowRamDevice(android.app.ActivityManager):0:0 -> b
androidx.sqlite.db.SupportSQLiteCompat$Api21Impl -> o.d:
    androidx.sqlite.db.SupportSQLiteCompat$Api21Impl INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.io.File getNoBackupFilesDir(android.content.Context):0:0 -> a
androidx.sqlite.db.SupportSQLiteCompat$Api23Impl -> o.e:
    androidx.sqlite.db.SupportSQLiteCompat$Api23Impl INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void setExtras(android.database.Cursor,android.os.Bundle):0:0 -> a
androidx.sqlite.db.SupportSQLiteCompat$Api29Impl -> o.f:
    androidx.sqlite.db.SupportSQLiteCompat$Api29Impl INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.util.List getNotificationUris(android.database.Cursor):0:0 -> a
    1:1:void setNotificationUris(android.database.Cursor,android.content.ContentResolver,java.util.List):0:0 -> b
androidx.sqlite.db.SupportSQLiteDatabase -> o.g:
    android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery) -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;)Landroid/database/Cursor;"}
    android.database.Cursor query(java.lang.String) -> N
    java.lang.String getPath() -> O
    boolean inTransaction() -> P
    void endTransaction() -> c
    void beginTransaction() -> f
    boolean isOpen() -> j
    java.util.List getAttachedDbs() -> k
    boolean isWriteAheadLoggingEnabled() -> m
    void execSQL(java.lang.String) -> p
    void setTransactionSuccessful() -> s
    void execSQL(java.lang.String,java.lang.Object[]) -> t
    android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;Landroid/os/CancellationSignal;)Landroid/database/Cursor;"}
    androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String) -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lo/k;"}
    void beginTransactionNonExclusive() -> y
    int update(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[]) -> z
androidx.sqlite.db.SupportSQLiteOpenHelper -> o.h:
    androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase() -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    void close() -> close
    java.lang.String getDatabaseName() -> getDatabaseName
    void setWriteAheadLoggingEnabled(boolean) -> setWriteAheadLoggingEnabled
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback -> o.h$a:
    int version -> a
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback$Companion Companion -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int):0:0 -> <init>
    1:1:void deleteDatabaseFile(java.lang.String):0:0 -> a
    1:1:void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void onCorruption(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    void onCreate(androidx.sqlite.db.SupportSQLiteDatabase) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;II)V"}
    1:1:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;II)V"}
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback$Companion -> o.h$a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration -> o.h$b:
    android.content.Context context -> a
    java.lang.String name -> b
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback callback -> c
    boolean useNoBackupDirectory -> d
    boolean allowDataLossOnRecovery -> e
    androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Companion Companion -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Lo/h$a;ZZ)V"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lo/h$b$a;"}
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder -> o.h$b$a:
    android.content.Context context -> a
    java.lang.String name -> b
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback callback -> c
    boolean useNoBackupDirectory -> d
    boolean allowDataLossOnRecovery -> e
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder allowDataLossOnRecovery(boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo/h$b$a;"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/h$b;"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder callback(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$a;)Lo/h$b$a;"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder name(java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lo/h$b$a;"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder noBackupDirectory(boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo/h$b$a;"}
androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Companion -> o.h$b$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration$Builder builder(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lo/h$b$a;"}
androidx.sqlite.db.SupportSQLiteOpenHelper$Factory -> o.h$c:
    androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$b;)Lo/h;"}
androidx.sqlite.db.SupportSQLiteProgram -> o.i:
    void bindBlob(int,byte[]) -> E
    void bindNull(int) -> F
    void bindDouble(int,double) -> G
    void bindString(int,java.lang.String) -> q
    void bindLong(int,long) -> r
androidx.sqlite.db.SupportSQLiteQuery -> o.j:
    java.lang.String getSql() -> a
    void bindTo(androidx.sqlite.db.SupportSQLiteProgram) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/i;)V"}
androidx.sqlite.db.SupportSQLiteStatement -> o.k:
    long executeInsert() -> M
    int executeUpdateDelete() -> v
androidx.sqlite.db.framework.FrameworkSQLiteDatabase -> p.c:
    android.database.sqlite.SQLiteDatabase delegate -> e
    java.util.List attachedDbs -> f
    androidx.sqlite.db.framework.FrameworkSQLiteDatabase$Companion Companion -> g
    java.lang.String[] CONFLICT_VALUES -> h
    java.lang.String[] EMPTY_STRING_ARRAY -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.database.sqlite.SQLiteDatabase):0:0 -> <init>
    1:1:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;)Landroid/database/Cursor;"}
    1:1:android.database.Cursor query(java.lang.String):0:0 -> N
    1:1:java.lang.String getPath():0:0 -> O
    1:1:boolean inTransaction():0:0 -> P
    1:1:android.database.Cursor $r8$lambda$BFGJjdMOCDz5XPIMAR1G27bXFjU(androidx.sqlite.db.SupportSQLiteQuery,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)Landroid/database/Cursor;"}
    1:1:android.database.Cursor $r8$lambda$xWs7VTYEzeAWyi_2-SJixQ1HyKQ(kotlin.jvm.functions.Function4,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/r;Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)Landroid/database/Cursor;"}
    1:1:void endTransaction():0:0 -> c
    1:1:void close():0:0 -> close
    1:1:boolean isDelegate(android.database.sqlite.SQLiteDatabase):0:0 -> d
    1:1:android.database.Cursor query$lambda$0(kotlin.jvm.functions.Function4,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/r;Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)Landroid/database/Cursor;"}
    1:1:void beginTransaction():0:0 -> f
    1:1:android.database.Cursor query$lambda$1(androidx.sqlite.db.SupportSQLiteQuery,android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)Landroid/database/Cursor;"}
    1:1:boolean isOpen():0:0 -> j
    1:1:java.util.List getAttachedDbs():0:0 -> k
    1:1:boolean isWriteAheadLoggingEnabled():0:0 -> m
    1:1:void execSQL(java.lang.String):0:0 -> p
    1:1:void setTransactionSuccessful():0:0 -> s
    1:1:void execSQL(java.lang.String,java.lang.Object[]):0:0 -> t
    1:1:android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;Landroid/os/CancellationSignal;)Landroid/database/Cursor;"}
    1:1:androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lo/k;"}
    1:1:void beginTransactionNonExclusive():0:0 -> y
    1:1:int update(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[]):0:0 -> z
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$ExternalSyntheticLambda0 -> p.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.sqlite.db.SupportSQLiteQuery androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$2$42fb69677b2d90999db55e25f83a91b14e4f655962062179feac5377484ae44e$0.f$0 -> a
    1:1:void androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$2$42fb69677b2d90999db55e25f83a91b14e4f655962062179feac5377484ae44e$0.<init>(androidx.sqlite.db.SupportSQLiteQuery):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;)V"}
    1:1:android.database.Cursor androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$2$42fb69677b2d90999db55e25f83a91b14e4f655962062179feac5377484ae44e$0.newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery):0:0 -> newCursor
      # {"id":"com.android.tools.r8.synthesized"}
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$ExternalSyntheticLambda1 -> p.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function4 androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$2$4ca1fe47fb60a659663dfb72e6161ce39c33ec8a71bb8b0b8365d109d32752af$0.f$0 -> a
    1:1:void androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$2$4ca1fe47fb60a659663dfb72e6161ce39c33ec8a71bb8b0b8365d109d32752af$0.<init>(kotlin.jvm.functions.Function4):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/r;)V"}
    1:1:android.database.Cursor androidx.sqlite.db.framework.FrameworkSQLiteDatabase$$InternalSyntheticLambda$2$4ca1fe47fb60a659663dfb72e6161ce39c33ec8a71bb8b0b8365d109d32752af$0.newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery):0:0 -> newCursor
      # {"id":"com.android.tools.r8.synthesized"}
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$Companion -> p.c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$query$cursorFactory$1 -> p.c$b:
    androidx.sqlite.db.SupportSQLiteQuery $query -> f
    1:1:void <init>(androidx.sqlite.db.SupportSQLiteQuery):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/j;)V"}
    1:1:android.database.sqlite.SQLiteCursor invoke(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> h
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper -> p.d:
    android.content.Context context -> e
    java.lang.String name -> f
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback callback -> g
    boolean useNoBackupDirectory -> h
    boolean allowDataLossOnRecovery -> i
    kotlin.Lazy lazyDelegate -> j
    boolean writeAheadLoggingEnabled -> k
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$Companion Companion -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Lo/h$a;ZZ)V"}
    1:1:androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase():0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:boolean access$getAllowDataLossOnRecovery$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)Z"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper$Callback access$getCallback$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)Lo/h$a;"}
    1:1:void close():0:0 -> close
    1:1:android.content.Context access$getContext$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)Landroid/content/Context;"}
    1:1:java.lang.String access$getName$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)Ljava/lang/String;"}
    1:1:boolean access$getUseNoBackupDirectory$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)Z"}
    1:1:java.lang.String getDatabaseName():0:0 -> getDatabaseName
    1:1:boolean access$getWriteAheadLoggingEnabled$p(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)Z"}
    1:1:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper getDelegate():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/d$c;"}
    1:1:void setWriteAheadLoggingEnabled(boolean):0:0 -> setWriteAheadLoggingEnabled
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$Companion -> p.d$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder -> p.d$b:
    androidx.sqlite.db.framework.FrameworkSQLiteDatabase db -> a
    1:1:void <init>(androidx.sqlite.db.framework.FrameworkSQLiteDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/c;)V"}
    1:1:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getDb():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/c;"}
    1:1:void setDb(androidx.sqlite.db.framework.FrameworkSQLiteDatabase):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/c;)V"}
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper -> p.d$c:
    android.content.Context context -> e
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder dbRef -> f
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback callback -> g
    boolean allowDataLossOnRecovery -> h
    boolean migrated -> i
    androidx.sqlite.util.ProcessLock lock -> j
    boolean opened -> k
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$Companion Companion -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,java.lang.String,androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder,androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Lp/d$b;Lo/h$a;Z)V"}
    1:1:void $r8$lambda$wesXNSdtx2gMKZWCPManFjtpLB8(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder,android.database.sqlite.SQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$a;Lp/d$b;Landroid/database/sqlite/SQLiteDatabase;)V"}
    1:1:void _init_$lambda$0(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder,android.database.sqlite.SQLiteDatabase):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$a;Lp/d$b;Landroid/database/sqlite/SQLiteDatabase;)V"}
    1:1:void close():0:0 -> close
    1:1:androidx.sqlite.db.SupportSQLiteDatabase getSupportDatabase(boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo/g;"}
    1:1:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(android.database.sqlite.SQLiteDatabase):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/database/sqlite/SQLiteDatabase;)Lp/c;"}
    1:1:android.database.sqlite.SQLiteDatabase getWritableOrReadableDatabase(boolean):0:0 -> g
    1:1:android.database.sqlite.SQLiteDatabase innerGetDatabase(boolean):0:0 -> h
    1:1:void onConfigure(android.database.sqlite.SQLiteDatabase):0:0 -> onConfigure
    1:1:void onCreate(android.database.sqlite.SQLiteDatabase):0:0 -> onCreate
    1:1:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int):0:0 -> onDowngrade
    1:1:void onOpen(android.database.sqlite.SQLiteDatabase):0:0 -> onOpen
    1:1:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):0:0 -> onUpgrade
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$ExternalSyntheticLambda0 -> p.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.sqlite.db.SupportSQLiteOpenHelper$Callback androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$InternalSyntheticLambda$2$d9397fa285b1201e74033e81a913ba758c1e49620200ccaaa8f0e0907e36aead$0.f$0 -> a
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$InternalSyntheticLambda$2$d9397fa285b1201e74033e81a913ba758c1e49620200ccaaa8f0e0907e36aead$0.f$1 -> b
    1:1:void androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$InternalSyntheticLambda$2$d9397fa285b1201e74033e81a913ba758c1e49620200ccaaa8f0e0907e36aead$0.<init>(androidx.sqlite.db.SupportSQLiteOpenHelper$Callback,androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$a;Lp/d$b;)V"}
    1:1:void androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$$InternalSyntheticLambda$2$d9397fa285b1201e74033e81a913ba758c1e49620200ccaaa8f0e0907e36aead$0.onCorruption(android.database.sqlite.SQLiteDatabase):0:0 -> onCorruption
      # {"id":"com.android.tools.r8.synthesized"}
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackException -> p.d$c$a:
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName callbackName -> e
    java.lang.Throwable cause -> f
    1:1:void <init>(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName,java.lang.Throwable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d$c$b;Ljava/lang/Throwable;)V"}
    1:1:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName getCallbackName():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/d$c$b;"}
    1:1:java.lang.Throwable getCause():0:0 -> getCause
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName -> p.d$c$b:
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName ON_CONFIGURE -> e
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName ON_CREATE -> f
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName ON_UPGRADE -> g
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName ON_DOWNGRADE -> h
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName ON_OPEN -> i
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lp/d$c$b;"}
    1:1:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lp/d$c$b;"}
    1:1:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lp/d$c$b;"}
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$Companion -> p.d$c$c:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.sqlite.db.framework.FrameworkSQLiteDatabase getWrappedDb(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$DBRefHolder,android.database.sqlite.SQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d$b;Landroid/database/sqlite/SQLiteDatabase;)Lp/c;"}
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$WhenMappings -> p.d$c$d:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$lazyDelegate$1 -> p.d$d:
    androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper this$0 -> f
    1:1:void <init>(androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/d;)V"}
    1:1:androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper invoke():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/d$c;"}
    1:1:java.lang.Object invoke():0:0 -> b
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelperFactory -> p.f:
    void <init>() -> <init>
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$b;)Lo/h;"}
androidx.sqlite.db.framework.FrameworkSQLiteProgram -> p.g:
    android.database.sqlite.SQLiteProgram delegate -> e
    1:1:void <init>(android.database.sqlite.SQLiteProgram):0:0 -> <init>
    1:1:void bindBlob(int,byte[]):0:0 -> E
    1:1:void bindNull(int):0:0 -> F
    1:1:void bindDouble(int,double):0:0 -> G
    1:1:void close():0:0 -> close
    1:1:void bindString(int,java.lang.String):0:0 -> q
    1:1:void bindLong(int,long):0:0 -> r
androidx.sqlite.db.framework.FrameworkSQLiteStatement -> p.h:
    android.database.sqlite.SQLiteStatement delegate -> f
    1:1:void <init>(android.database.sqlite.SQLiteStatement):0:0 -> <init>
    1:1:long executeInsert():0:0 -> M
    1:1:int executeUpdateDelete():0:0 -> v
androidx.sqlite.util.ProcessLock -> q.a:
    boolean processLock -> a
    java.io.File lockFile -> b
    java.util.concurrent.locks.Lock threadLock -> c
    java.nio.channels.FileChannel lockChannel -> d
    androidx.sqlite.util.ProcessLock$Companion Companion -> e
    java.util.Map threadLocksMap -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,java.io.File,boolean):0:0 -> <init>
    1:1:java.util.Map access$getThreadLocksMap$cp():0:0 -> a
    1:1:void lock(boolean):0:0 -> b
    1:1:void lock$default(androidx.sqlite.util.ProcessLock,boolean,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a;ZILjava/lang/Object;)V"}
    1:1:void unlock():0:0 -> d
androidx.sqlite.util.ProcessLock$Companion -> q.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:java.util.concurrent.locks.Lock access$getThreadLock(androidx.sqlite.util.ProcessLock$Companion,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a$a;Ljava/lang/String;)Ljava/util/concurrent/locks/Lock;"}
    1:1:java.util.concurrent.locks.Lock getThreadLock(java.lang.String):0:0 -> b
androidx.startup.AppInitializer -> androidx.startup.a:
    java.util.Map mInitialized -> a
    java.util.Set mDiscovered -> b
    android.content.Context mContext -> c
    androidx.startup.AppInitializer sInstance -> d
    java.lang.Object sLock -> e
    1:1:void discoverAndInitialize():0:0 -> a
    1:1:void discoverAndInitialize(android.os.Bundle):0:0 -> b
    1:1:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> c
    1:1:androidx.startup.AppInitializer getInstance(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/startup/a;"}
    1:1:boolean isEagerlyInitialized(java.lang.Class):0:0 -> e
androidx.startup.Initializer -> r.a:
    java.util.List dependencies() -> a
    java.lang.Object create(android.content.Context) -> b
androidx.startup.R$string -> r.b:
    int androidx_startup -> a
androidx.startup.StartupException -> r.c:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.Throwable):0:0 -> <init>
androidx.tracing.Trace -> s.a:
    long sTraceTagApp -> a
    java.lang.reflect.Method sIsTagEnabledMethod -> b
    java.lang.reflect.Method sAsyncTraceBeginMethod -> c
    java.lang.reflect.Method sAsyncTraceEndMethod -> d
    1:1:void beginAsyncSection(java.lang.String,int):0:0 -> a
    1:1:void beginAsyncSectionFallback(java.lang.String,int):0:0 -> b
    1:1:void beginSection(java.lang.String):0:0 -> c
    1:1:void endAsyncSection(java.lang.String,int):0:0 -> d
    1:1:void endAsyncSectionFallback(java.lang.String,int):0:0 -> e
    1:1:void endSection():0:0 -> f
    1:1:void handleException(java.lang.String,java.lang.Exception):0:0 -> g
    1:1:boolean isEnabled():0:0 -> h
    1:1:boolean isEnabledFallback():0:0 -> i
    1:1:java.lang.String truncatedTraceSectionLabel(java.lang.String):0:0 -> j
androidx.tracing.TraceApi18Impl -> s.b:
    1:1:void beginSection(java.lang.String):0:0 -> a
    1:1:void endSection():0:0 -> b
androidx.tracing.TraceApi29Impl -> s.c:
    1:1:void beginAsyncSection(java.lang.String,int):0:0 -> a
    1:1:void endAsyncSection(java.lang.String,int):0:0 -> b
    1:1:boolean isEnabled():0:0 -> c
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    1:1:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel):0:0 -> a
    1:1:androidx.versionedparcelable.ParcelImpl[] newArray(int):0:0 -> b
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.a:
    androidx.collection.ArrayMap mReadCache -> a
    androidx.collection.ArrayMap mWriteCache -> b
    androidx.collection.ArrayMap mParcelizerCache -> c
    1:1:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf/a;Lf/a;Lf/a;)V"}
    void writeByteArray(byte[]) -> A
    1:1:void writeByteArray(byte[],int):0:0 -> B
    void writeCharSequence(java.lang.CharSequence) -> C
    1:1:void writeCharSequence(java.lang.CharSequence,int):0:0 -> D
    void writeInt(int) -> E
    1:1:void writeInt(int,int):0:0 -> F
    void writeParcelable(android.os.Parcelable) -> G
    1:1:void writeParcelable(android.os.Parcelable,int):0:0 -> H
    void writeString(java.lang.String) -> I
    1:1:void writeString(java.lang.String,int):0:0 -> J
    1:1:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/a;Landroidx/versionedparcelable/a;)V"}
    1:1:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/a;)V"}
    1:1:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/a;I)V"}
    1:1:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/a;)V"}
    void closeField() -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/versionedparcelable/a;"}
    1:1:java.lang.Class findParcelClass(java.lang.Class):0:0 -> c
    1:1:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> d
    1:1:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> e
    1:1:boolean isStream():0:0 -> f
    boolean readBoolean() -> g
    1:1:boolean readBoolean(boolean,int):0:0 -> h
    byte[] readByteArray() -> i
    1:1:byte[] readByteArray(byte[],int):0:0 -> j
    java.lang.CharSequence readCharSequence() -> k
    1:1:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int):0:0 -> l
    boolean readField(int) -> m
    1:1:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/versionedparcelable/a;)Lt/a;"}
    int readInt() -> o
    1:1:int readInt(int,int):0:0 -> p
    android.os.Parcelable readParcelable() -> q
    1:1:android.os.Parcelable readParcelable(android.os.Parcelable,int):0:0 -> r
    java.lang.String readString() -> s
    1:1:java.lang.String readString(java.lang.String,int):0:0 -> t
    1:1:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt/a;"}
    1:1:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/a;I)Lt/a;"}
    void setOutputField(int) -> w
    1:1:void setSerializationFlags(boolean,boolean):0:0 -> x
    void writeBoolean(boolean) -> y
    1:1:void writeBoolean(boolean,int):0:0 -> z
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.b:
    android.util.SparseIntArray mPositionLookup -> d
    android.os.Parcel mParcel -> e
    int mOffset -> f
    int mEnd -> g
    java.lang.String mPrefix -> h
    int mCurrentField -> i
    int mNextRead -> j
    int mFieldId -> k
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;IILjava/lang/String;Lf/a;Lf/a;Lf/a;)V"}
    1:1:void writeByteArray(byte[]):0:0 -> A
    1:1:void writeCharSequence(java.lang.CharSequence):0:0 -> C
    1:1:void writeInt(int):0:0 -> E
    1:1:void writeParcelable(android.os.Parcelable):0:0 -> G
    1:1:void writeString(java.lang.String):0:0 -> I
    1:1:void closeField():0:0 -> a
    1:1:androidx.versionedparcelable.VersionedParcel createSubParcel():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/versionedparcelable/a;"}
    1:1:boolean readBoolean():0:0 -> g
    1:1:byte[] readByteArray():0:0 -> i
    1:1:java.lang.CharSequence readCharSequence():0:0 -> k
    1:1:boolean readField(int):0:0 -> m
    1:1:int readInt():0:0 -> o
    1:1:android.os.Parcelable readParcelable():0:0 -> q
    1:1:java.lang.String readString():0:0 -> s
    1:1:void setOutputField(int):0:0 -> w
    1:1:void writeBoolean(boolean):0:0 -> y
androidx.versionedparcelable.VersionedParcelable -> t.a:
androidx.window.SafeWindowExtensionsProvider -> u.a:
    java.lang.ClassLoader loader -> a
    1:1:void <init>(java.lang.ClassLoader):0:0 -> <init>
    1:1:java.lang.ClassLoader access$getLoader$p(androidx.window.SafeWindowExtensionsProvider):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/a;)Ljava/lang/ClassLoader;"}
    1:1:java.lang.Class access$getWindowExtensionsProviderClass(androidx.window.SafeWindowExtensionsProvider):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/a;)Ljava/lang/Class;"}
    1:1:java.lang.Class getWindowExtensionsClass$window_release():0:0 -> c
    1:1:java.lang.Class getWindowExtensionsProviderClass():0:0 -> d
    1:1:boolean isWindowExtensionsPresent():0:0 -> e
    1:1:boolean isWindowExtensionsValid$window_release():0:0 -> f
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsPresent$1 -> u.a$a:
    androidx.window.SafeWindowExtensionsProvider this$0 -> f
    1:1:void <init>(androidx.window.SafeWindowExtensionsProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/a;)V"}
    1:1:java.lang.Class invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> b
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsValid$1 -> u.a$b:
    androidx.window.SafeWindowExtensionsProvider this$0 -> f
    1:1:void <init>(androidx.window.SafeWindowExtensionsProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/a;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> b
androidx.window.core.AndroidLogger -> v.a:
    androidx.window.core.AndroidLogger INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void debug(java.lang.String,java.lang.String):0:0 -> a
androidx.window.core.Bounds -> v.b:
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    1:1:void <init>(int,int,int,int):0:0 -> <init>
    2:2:void <init>(android.graphics.Rect):0:0 -> <init>
    1:1:int getHeight():0:0 -> a
    1:1:int getLeft():0:0 -> b
    1:1:int getTop():0:0 -> c
    1:1:int getWidth():0:0 -> d
    1:1:boolean isZero():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:android.graphics.Rect toRect():0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.core.BuildConfig -> v.c:
    androidx.window.core.BuildConfig INSTANCE -> a
    androidx.window.core.VerificationMode verificationMode -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.core.VerificationMode getVerificationMode():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv/j;"}
androidx.window.core.ConsumerAdapter -> v.d:
    java.lang.ClassLoader loader -> a
    1:1:void <init>(java.lang.ClassLoader):0:0 -> <init>
    1:1:java.lang.Object buildConsumer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/b;Lr1/l;)Ljava/lang/Object;"}
    1:1:java.lang.Class consumerClassOrNull$window_release():0:0 -> b
    1:1:androidx.window.core.ConsumerAdapter$Subscription createSubscription(java.lang.Object,kotlin.reflect.KClass,java.lang.String,java.lang.String,android.app.Activity,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lw1/b;Ljava/lang/String;Ljava/lang/String;Landroid/app/Activity;Lr1/l;)Lv/d$b;"}
    1:1:java.lang.Class unsafeConsumerClass():0:0 -> d
androidx.window.core.ConsumerAdapter$ConsumerHandler -> v.d$a:
    kotlin.reflect.KClass clazz -> a
    kotlin.jvm.functions.Function1 consumer -> b
    1:1:void <init>(kotlin.reflect.KClass,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/b;Lr1/l;)V"}
    1:1:void invokeAccept(java.lang.Object):0:0 -> a
    1:1:boolean isAccept(java.lang.reflect.Method,java.lang.Object[]):0:0 -> b
    1:1:boolean isEquals(java.lang.reflect.Method,java.lang.Object[]):0:0 -> c
    1:1:boolean isHashCode(java.lang.reflect.Method,java.lang.Object[]):0:0 -> d
    1:1:boolean isToString(java.lang.reflect.Method,java.lang.Object[]):0:0 -> e
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]):0:0 -> invoke
androidx.window.core.ConsumerAdapter$Subscription -> v.d$b:
    void dispose() -> a
androidx.window.core.ConsumerAdapter$createSubscription$1 -> v.d$c:
    java.lang.reflect.Method $removeMethod -> a
    java.lang.Object $obj -> b
    java.lang.Object $javaConsumer -> c
    1:1:void <init>(java.lang.reflect.Method,java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:void dispose():0:0 -> a
androidx.window.core.ExtensionsUtil -> v.e:
    androidx.window.core.ExtensionsUtil INSTANCE -> a
    java.lang.String TAG -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int getSafeVendorApiLevel():0:0 -> a
androidx.window.core.FailedSpecification -> v.f:
    java.lang.Object value -> b
    java.lang.String tag -> c
    java.lang.String message -> d
    androidx.window.core.Logger logger -> e
    androidx.window.core.VerificationMode verificationMode -> f
    androidx.window.core.WindowStrictModeException exception -> g
    1:1:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.VerificationMode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lv/g;Lv/j;)V"}
    1:1:java.lang.Object compute():0:0 -> a
    1:1:androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr1/l;)Lv/h;"}
androidx.window.core.FailedSpecification$WhenMappings -> v.f$a:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.window.core.Logger -> v.g:
    void debug(java.lang.String,java.lang.String) -> a
androidx.window.core.SpecificationComputer -> v.h:
    androidx.window.core.SpecificationComputer$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    java.lang.Object compute() -> a
    1:1:java.lang.String createMessage(java.lang.Object,java.lang.String):0:0 -> b
    androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr1/l;)Lv/h;"}
androidx.window.core.SpecificationComputer$Companion -> v.h$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.window.core.SpecificationComputer startSpecification(java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/String;Lv/j;Lv/g;)Lv/h;"}
    1:1:androidx.window.core.SpecificationComputer startSpecification$default(androidx.window.core.SpecificationComputer$Companion,java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h$a;Ljava/lang/Object;Ljava/lang/String;Lv/j;Lv/g;ILjava/lang/Object;)Lv/h;"}
androidx.window.core.ValidSpecification -> v.i:
    java.lang.Object value -> b
    java.lang.String tag -> c
    androidx.window.core.VerificationMode verificationMode -> d
    androidx.window.core.Logger logger -> e
    1:1:void <init>(java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/String;Lv/j;Lv/g;)V"}
    1:1:java.lang.Object compute():0:0 -> a
    1:1:androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr1/l;)Lv/h;"}
androidx.window.core.VerificationMode -> v.j:
    androidx.window.core.VerificationMode STRICT -> e
    androidx.window.core.VerificationMode LOG -> f
    androidx.window.core.VerificationMode QUIET -> g
    androidx.window.core.VerificationMode[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.window.core.VerificationMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lv/j;"}
    1:1:androidx.window.core.VerificationMode valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lv/j;"}
    1:1:androidx.window.core.VerificationMode[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lv/j;"}
androidx.window.core.Version -> v.k:
    int major -> e
    int minor -> f
    int patch -> g
    java.lang.String description -> h
    kotlin.Lazy bigInteger$delegate -> i
    androidx.window.core.Version$Companion Companion -> j
    androidx.window.core.Version UNKNOWN -> k
    androidx.window.core.Version VERSION_0_1 -> l
    androidx.window.core.Version VERSION_1_0 -> m
    androidx.window.core.Version CURRENT -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int,java.lang.String):0:0 -> <init>
    2:2:void <init>(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIILjava/lang/String;Ls1/g;)V"}
    1:1:androidx.window.core.Version access$getVERSION_0_1$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv/k;"}
    1:1:int compareTo(androidx.window.core.Version):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/k;)I"}
    1:1:java.math.BigInteger getBigInteger():0:0 -> c
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
    1:1:int getMajor():0:0 -> d
    1:1:int getMinor():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int getPatch():0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.core.Version$Companion -> v.k$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.window.core.Version getVERSION_0_1():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv/k;"}
    1:1:androidx.window.core.Version parse(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lv/k;"}
androidx.window.core.Version$bigInteger$2 -> v.k$b:
    androidx.window.core.Version this$0 -> f
    1:1:void <init>(androidx.window.core.Version):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/k;)V"}
    1:1:java.math.BigInteger invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> b
androidx.window.core.WindowStrictModeException -> v.l:
    1:1:void <init>(java.lang.String):0:0 -> <init>
androidx.window.java.core.CallbackToFlowAdapter -> w.a:
    java.util.concurrent.locks.ReentrantLock lock -> a
    java.util.Map consumerToJobMap -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void connect(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;Li/a;Lc2/d;)V"}
    1:1:void disconnect(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1 -> w.a$a:
    int label -> i
    kotlinx.coroutines.flow.Flow $flow -> j
    androidx.core.util.Consumer $consumer -> k
    1:1:void <init>(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/d;Li/a;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/d;)Ljava/lang/Object;"}
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1$1 -> w.a$a$a:
    androidx.core.util.Consumer $consumer -> a
    1:1:void <init>(androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter -> x.a:
    androidx.window.layout.WindowInfoTracker tracker -> b
    androidx.window.java.core.CallbackToFlowAdapter callbackToFlowAdapter -> c
    1:1:void <init>(androidx.window.layout.WindowInfoTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/f;)V"}
    2:2:void <init>(androidx.window.layout.WindowInfoTracker,androidx.window.java.core.CallbackToFlowAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/f;Lw/a;)V"}
    1:1:kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lc2/d;"}
    1:1:void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ljava/util/concurrent/Executor;Li/a;)V"}
    1:1:void removeWindowLayoutInfoListener(androidx.core.util.Consumer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
androidx.window.layout.DisplayFeature -> y.a:
    android.graphics.Rect getBounds() -> b
androidx.window.layout.EmptyDecorator -> y.b:
    androidx.window.layout.EmptyDecorator INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/f;)Ly/f;"}
androidx.window.layout.FoldingFeature -> y.c:
    androidx.window.layout.FoldingFeature$State getState() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/c$b;"}
    androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/c$a;"}
androidx.window.layout.FoldingFeature$OcclusionType -> y.c$a:
    java.lang.String description -> a
    androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion -> b
    androidx.window.layout.FoldingFeature$OcclusionType NONE -> c
    androidx.window.layout.FoldingFeature$OcclusionType FULL -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.FoldingFeature$OcclusionType$Companion -> y.c$a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.window.layout.FoldingFeature$State -> y.c$b:
    java.lang.String description -> a
    androidx.window.layout.FoldingFeature$State$Companion Companion -> b
    androidx.window.layout.FoldingFeature$State FLAT -> c
    androidx.window.layout.FoldingFeature$State HALF_OPENED -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.FoldingFeature$State$Companion -> y.c$b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.window.layout.HardwareFoldingFeature -> y.d:
    androidx.window.core.Bounds featureBounds -> a
    androidx.window.layout.HardwareFoldingFeature$Type type -> b
    androidx.window.layout.FoldingFeature$State state -> c
    androidx.window.layout.HardwareFoldingFeature$Companion Companion -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/b;Ly/d$b;Ly/c$b;)V"}
    1:1:androidx.window.layout.FoldingFeature$State getState():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/c$b;"}
    1:1:android.graphics.Rect getBounds():0:0 -> b
    1:1:androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/c$a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.HardwareFoldingFeature$Companion -> y.d$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:void validateFeatureBounds$window_release(androidx.window.core.Bounds):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/b;)V"}
androidx.window.layout.HardwareFoldingFeature$Type -> y.d$b:
    java.lang.String description -> a
    androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion -> b
    androidx.window.layout.HardwareFoldingFeature$Type FOLD -> c
    androidx.window.layout.HardwareFoldingFeature$Type HINGE -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/d$b;"}
    1:1:androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/d$b;"}
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.HardwareFoldingFeature$Type$Companion -> y.d$b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.window.layout.HardwareFoldingFeature$Type getFOLD():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/d$b;"}
    1:1:androidx.window.layout.HardwareFoldingFeature$Type getHINGE():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/d$b;"}
androidx.window.layout.SafeWindowLayoutComponentProvider -> y.e:
    java.lang.ClassLoader loader -> a
    androidx.window.core.ConsumerAdapter consumerAdapter -> b
    androidx.window.SafeWindowExtensionsProvider safeWindowExtensionsProvider -> c
    1:1:void <init>(java.lang.ClassLoader,androidx.window.core.ConsumerAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/ClassLoader;Lv/d;)V"}
    1:1:androidx.window.core.ConsumerAdapter access$getConsumerAdapter$p(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e;)Lv/d;"}
    1:1:java.lang.Class access$getFoldingFeatureClass(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e;)Ljava/lang/Class;"}
    1:1:androidx.window.SafeWindowExtensionsProvider access$getSafeWindowExtensionsProvider$p(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e;)Lu/a;"}
    1:1:java.lang.Class access$getWindowLayoutComponentClass(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e;)Ljava/lang/Class;"}
    1:1:boolean canUseWindowLayoutComponent():0:0 -> e
    1:1:java.lang.Class getFoldingFeatureClass():0:0 -> f
    1:1:androidx.window.extensions.layout.WindowLayoutComponent getWindowLayoutComponent():0:0 -> g
    1:1:java.lang.Class getWindowLayoutComponentClass():0:0 -> h
    1:1:boolean hasValidVendorApiLevel1$window_release():0:0 -> i
    1:1:boolean hasValidVendorApiLevel2$window_release():0:0 -> j
    1:1:boolean isFoldingFeatureValid():0:0 -> k
    1:1:boolean isMethodWindowLayoutInfoListenerJavaConsumerValid():0:0 -> l
    1:1:boolean isMethodWindowLayoutInfoListenerWindowConsumerValid():0:0 -> m
    1:1:boolean isWindowLayoutComponentAccessible$window_release():0:0 -> n
    1:1:boolean isWindowLayoutProviderValid():0:0 -> o
androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1 -> y.e$a:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> f
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> b
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerJavaConsumerValid$1 -> y.e$b:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> f
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> b
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerWindowConsumerValid$1 -> y.e$c:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> f
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> b
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1 -> y.e$d:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> f
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> b
androidx.window.layout.WindowInfoTracker -> y.f:
    androidx.window.layout.WindowInfoTracker$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lc2/d;"}
androidx.window.layout.WindowInfoTracker$Companion -> y.f$a:
    androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE -> a
    boolean DEBUG -> b
    java.lang.String TAG -> c
    kotlin.Lazy extensionBackend$delegate -> d
    androidx.window.layout.WindowInfoTrackerDecorator decorator -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean access$getDEBUG$p():0:0 -> a
    1:1:java.lang.String access$getTAG$p():0:0 -> b
    1:1:androidx.window.layout.adapter.WindowBackend getExtensionBackend$window_release():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz/a;"}
    1:1:androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ly/f;"}
androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2 -> y.f$a$a:
    androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.window.layout.adapter.WindowBackend invoke():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz/a;"}
    1:1:java.lang.Object invoke():0:0 -> b
androidx.window.layout.WindowInfoTrackerDecorator -> y.g:
    androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/f;)Ly/f;"}
androidx.window.layout.WindowInfoTrackerImpl -> y.i:
    androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator -> b
    androidx.window.layout.adapter.WindowBackend windowBackend -> c
    1:1:void <init>(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.adapter.WindowBackend):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/m;Lz/a;)V"}
    1:1:kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Lc2/d;"}
    1:1:androidx.window.layout.adapter.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/i;)Lz/a;"}
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2 -> y.i$a:
    int label -> i
    java.lang.Object L$0 -> j
    androidx.window.layout.WindowInfoTrackerImpl this$0 -> k
    android.app.Activity $activity -> l
    1:1:void <init>(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/i;Landroid/app/Activity;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:void $r8$lambda$ZtyEPDD_2v4gDwMCwKS3X4pa0JY(kotlinx.coroutines.channels.ProducerScope,androidx.window.layout.WindowLayoutInfo):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;Ly/j;)V"}
    1:1:java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;Li1/d;)Ljava/lang/Object;"}
    1:1:void invokeSuspend$lambda$0(kotlinx.coroutines.channels.ProducerScope,androidx.window.layout.WindowLayoutInfo):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;Ly/j;)V"}
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$ExternalSyntheticLambda0 -> y.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlinx.coroutines.channels.ProducerScope androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$InternalSyntheticLambda$1$3439cd9e065b3cff2394bf010e6292f8dc2b9d9af5aa86005a10f448b0ffb373$0.f$0 -> a
    1:1:void androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$InternalSyntheticLambda$1$3439cd9e065b3cff2394bf010e6292f8dc2b9d9af5aa86005a10f448b0ffb373$0.<init>(kotlinx.coroutines.channels.ProducerScope):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;)V"}
    1:1:void androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$InternalSyntheticLambda$1$3439cd9e065b3cff2394bf010e6292f8dc2b9d9af5aa86005a10f448b0ffb373$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$2 -> y.i$a$a:
    androidx.window.layout.WindowInfoTrackerImpl this$0 -> f
    androidx.core.util.Consumer $listener -> g
    1:1:void <init>(androidx.window.layout.WindowInfoTrackerImpl,androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/i;Li/a;)V"}
    1:1:void invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> b
androidx.window.layout.WindowLayoutInfo -> y.j:
    java.util.List displayFeatures -> a
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:java.util.List getDisplayFeatures():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.WindowMetrics -> y.k:
    androidx.window.core.Bounds _bounds -> a
    androidx.core.view.WindowInsetsCompat _windowInsetsCompat -> b
    1:1:void <init>(android.graphics.Rect,androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Landroidx/core/view/i;)V"}
    2:2:void <init>(android.graphics.Rect,androidx.core.view.WindowInsetsCompat,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Landroidx/core/view/i;ILs1/g;)V"}
    3:3:void <init>(androidx.window.core.Bounds,androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/b;Landroidx/core/view/i;)V"}
    1:1:android.graphics.Rect getBounds():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.WindowMetricsCalculator -> y.m:
    androidx.window.layout.WindowMetricsCalculator$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Ly/k;"}
androidx.window.layout.WindowMetricsCalculator$-CC -> y.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void <clinit>():0:0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    1:7:androidx.window.layout.WindowMetricsCalculator androidx.window.layout.WindowMetricsCalculator.getOrCreate():0:0 -> a
    1:7:androidx.window.layout.WindowMetricsCalculator getOrCreate():0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/m;"}
androidx.window.layout.WindowMetricsCalculator$Companion -> y.m$a:
    androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE -> a
    kotlin.jvm.functions.Function1 decorator -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.WindowMetricsCalculator getOrCreate():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/m;"}
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 -> y.m$a$a:
    androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/m;)Ly/m;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.window.layout.WindowMetricsCalculatorCompat -> y.p:
    androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE -> b
    java.lang.String TAG -> c
    java.util.ArrayList insetsTypeMasks -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Ly/k;"}
    1:1:androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Ly/k;"}
    1:1:androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ly/k;"}
    1:1:androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ly/k;"}
    1:1:android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity):0:0 -> e
    1:1:android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity):0:0 -> f
    1:1:android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity):0:0 -> g
    1:1:android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity):0:0 -> h
    1:1:androidx.core.view.WindowInsetsCompat computeWindowInsetsCompat$window_release(android.content.Context):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/core/view/i;"}
    1:1:android.view.DisplayCutout getCutoutForDisplay(android.view.Display):0:0 -> j
    1:1:int getNavigationBarHeight(android.content.Context):0:0 -> k
    1:1:android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display):0:0 -> l
    1:1:void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect):0:0 -> m
androidx.window.layout.WindowMetricsCalculatorCompat$$ExternalSyntheticApiModelOutline0 -> y.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.window.layout.WindowMetricsCalculatorCompat$$InternalSyntheticApiModelOutline$2$fec12a0d2db9672587b75f0d9357eb68b131cde69fd9f877e73a50b9815945fb$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowMetricsCalculatorCompat$$ExternalSyntheticApiModelOutline1 -> y.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.DisplayCutout androidx.window.layout.WindowMetricsCalculatorCompat$$InternalSyntheticApiModelOutline$2$fec12a0d2db9672587b75f0d9357eb68b131cde69fd9f877e73a50b9815945fb$1.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.adapter.WindowBackend -> z.a:
    void unregisterLayoutChangeCallback(androidx.core.util.Consumer) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
    void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Li/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackend -> a0.a:
    androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion -> a0.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.window.layout.adapter.WindowBackend newInstance(androidx.window.extensions.layout.WindowLayoutComponent,androidx.window.core.ConsumerAdapter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/extensions/layout/WindowLayoutComponent;Lv/d;)Lz/a;"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0 -> a0.c:
    void <init>() -> <init>
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Li/a;)V"}
    1:1:void $r8$lambda$FIKlvhyEFY0ibeYIXQhlkJ0r6sg(androidx.core.util.Consumer):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
    1:1:void registerLayoutChangeCallback$lambda$0(androidx.core.util.Consumer):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$ExternalSyntheticLambda0 -> a0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.util.Consumer androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$InternalSyntheticLambda$2$17c6bbbc95ef4ffab4263f8c64f94b5521955c30c930ac5f8b92464e91569474$0.f$0 -> e
    1:1:void androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$InternalSyntheticLambda$2$17c6bbbc95ef4ffab4263f8c64f94b5521955c30c930ac5f8b92464e91569474$0.<init>(androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
    1:1:void androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$InternalSyntheticLambda$2$17c6bbbc95ef4ffab4263f8c64f94b5521955c30c930ac5f8b92464e91569474$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1 -> a0.d:
    androidx.window.extensions.layout.WindowLayoutComponent component -> a
    androidx.window.core.ConsumerAdapter consumerAdapter -> b
    java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock -> c
    java.util.Map contextToListeners -> d
    java.util.Map listenerToContext -> e
    java.util.Map consumerToToken -> f
    1:1:void <init>(androidx.window.extensions.layout.WindowLayoutComponent,androidx.window.core.ConsumerAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/extensions/layout/WindowLayoutComponent;Lv/d;)V"}
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Li/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1$registerLayoutChangeCallback$1$2$disposableToken$1 -> a0.d$a:
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
    1:1:void invoke(androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> n
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2 -> a0.e:
    androidx.window.extensions.layout.WindowLayoutComponent component -> a
    java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock -> b
    java.util.Map contextToListeners -> c
    java.util.Map listenerToContext -> d
    1:1:void <init>(androidx.window.extensions.layout.WindowLayoutComponent):0:0 -> <init>
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Li/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter -> a0.f:
    androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.FoldingFeature translate$window_release(androidx.window.layout.WindowMetrics,androidx.window.extensions.layout.FoldingFeature):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/k;Landroidx/window/extensions/layout/FoldingFeature;)Ly/c;"}
    1:1:androidx.window.layout.WindowLayoutInfo translate$window_release(android.content.Context,androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/window/extensions/layout/WindowLayoutInfo;)Ly/j;"}
    1:1:androidx.window.layout.WindowLayoutInfo translate$window_release(androidx.window.layout.WindowMetrics,androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/k;Landroidx/window/extensions/layout/WindowLayoutInfo;)Ly/j;"}
    1:1:boolean validBounds(androidx.window.layout.WindowMetrics,androidx.window.core.Bounds):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/k;Lv/b;)Z"}
androidx.window.layout.adapter.extensions.MulticastConsumer -> a0.g:
    android.content.Context context -> a
    java.util.concurrent.locks.ReentrantLock multicastConsumerLock -> b
    androidx.window.layout.WindowLayoutInfo lastKnownValue -> c
    java.util.Set registeredListeners -> d
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:void accept(androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> a
    1:1:void accept(java.lang.Object):0:0 -> accept
    1:1:void addListener(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
    1:1:boolean isEmpty():0:0 -> c
    1:1:void removeListener(androidx.core.util.Consumer):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback -> androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback:
    java.lang.Object mLock -> a
    androidx.window.sidecar.SidecarDeviceState mLastDeviceState -> b
    java.util.Map mActivityWindowLayoutInfo -> c
    androidx.window.layout.adapter.sidecar.SidecarAdapter mAdapter -> d
    androidx.window.sidecar.SidecarInterface$SidecarCallback mCallback -> e
    1:1:void <init>(androidx.window.layout.adapter.sidecar.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb0/a;Landroidx/window/sidecar/SidecarInterface$SidecarCallback;)V"}
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat -> androidx.window.layout.adapter.sidecar.a:
    void setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/a$a;)V"}
    void onWindowLayoutChangeListenerRemoved(android.app.Activity) -> b
    void onWindowLayoutChangeListenerAdded(android.app.Activity) -> c
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface -> androidx.window.layout.adapter.sidecar.a$a:
    void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ly/j;)V"}
androidx.window.layout.adapter.sidecar.SidecarAdapter -> b0.a:
    androidx.window.core.VerificationMode verificationMode -> a
    androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion Companion -> b
    java.lang.String TAG -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.window.core.VerificationMode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/j;)V"}
    2:2:void <init>(androidx.window.core.VerificationMode,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/j;ILs1/g;)V"}
    1:1:boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState):0:0 -> a
    1:1:boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature):0:0 -> b
    1:1:boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List):0:0 -> c
    1:1:boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo):0:0 -> d
    1:1:java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState):0:0 -> e
    1:1:androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/sidecar/SidecarWindowLayoutInfo;Landroidx/window/sidecar/SidecarDeviceState;)Ly/j;"}
    1:1:androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/sidecar/SidecarDisplayFeature;Landroidx/window/sidecar/SidecarDeviceState;)Ly/a;"}
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion -> b0.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState):0:0 -> a
    1:1:int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState):0:0 -> b
    1:1:java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo):0:0 -> c
    1:1:void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int):0:0 -> d
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1 -> b0.a$b:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2 -> b0.a$c:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3 -> b0.a$d:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4 -> b0.a$e:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.window.layout.adapter.sidecar.SidecarCompat -> androidx.window.layout.adapter.sidecar.SidecarCompat:
    androidx.window.sidecar.SidecarInterface sidecar -> a
    androidx.window.layout.adapter.sidecar.SidecarAdapter sidecarAdapter -> b
    java.util.Map windowListenerRegisteredContexts -> c
    java.util.Map componentCallbackMap -> d
    androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback extensionCallback -> e
    androidx.window.layout.adapter.sidecar.SidecarCompat$Companion Companion -> f
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(androidx.window.sidecar.SidecarInterface,androidx.window.layout.adapter.sidecar.SidecarAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/sidecar/SidecarInterface;Lb0/a;)V"}
    1:1:void setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/a$a;)V"}
    1:1:void onWindowLayoutChangeListenerRemoved(android.app.Activity):0:0 -> b
    1:1:void onWindowLayoutChangeListenerAdded(android.app.Activity):0:0 -> c
    1:1:androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback access$getExtensionCallback$p(androidx.window.layout.adapter.sidecar.SidecarCompat):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/SidecarCompat;)Landroidx/window/layout/adapter/sidecar/SidecarCompat$b;"}
    1:1:androidx.window.layout.adapter.sidecar.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.adapter.sidecar.SidecarCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/SidecarCompat;)Lb0/a;"}
    1:1:java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.adapter.sidecar.SidecarCompat):0:0 -> f
    1:1:androidx.window.sidecar.SidecarInterface getSidecar():0:0 -> g
    1:1:androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Ly/j;"}
    1:1:void register(android.os.IBinder,android.app.Activity):0:0 -> i
    1:1:void registerConfigurationChangeListener(android.app.Activity):0:0 -> j
    1:1:void unregisterComponentCallback(android.app.Activity):0:0 -> k
    1:1:boolean validateExtensionInterface():0:0 -> l
androidx.window.layout.adapter.sidecar.SidecarCompat$Companion -> androidx.window.layout.adapter.sidecar.SidecarCompat$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:android.os.IBinder getActivityWindowToken$window_release(android.app.Activity):0:0 -> a
    1:1:androidx.window.sidecar.SidecarInterface getSidecarCompat$window_release(android.content.Context):0:0 -> b
    1:1:androidx.window.core.Version getSidecarVersion():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv/k;"}
androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback -> androidx.window.layout.adapter.sidecar.SidecarCompat$b:
    androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    java.util.WeakHashMap activityWindowLayoutInfo -> c
    1:1:void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ly/j;)V"}
    1:1:void clearWindowLayoutInfo(android.app.Activity):0:0 -> b
androidx.window.layout.adapter.sidecar.SidecarCompat$FirstAttachAdapter -> androidx.window.layout.adapter.sidecar.SidecarCompat$c:
    androidx.window.layout.adapter.sidecar.SidecarCompat sidecarCompat -> a
    java.lang.ref.WeakReference activityWeakReference -> b
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback -> androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback:
    androidx.window.layout.adapter.sidecar.SidecarCompat this$0 -> a
androidx.window.layout.adapter.sidecar.SidecarWindowBackend -> androidx.window.layout.adapter.sidecar.b:
    androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat windowExtension -> a
    java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks -> b
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion Companion -> c
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend globalInstance -> d
    java.util.concurrent.locks.ReentrantLock globalLock -> e
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Li/a;)V"}
    1:1:androidx.window.layout.adapter.sidecar.SidecarWindowBackend access$getGlobalInstance$cp():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/window/layout/adapter/sidecar/b;"}
    1:1:java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp():0:0 -> d
    1:1:void access$setGlobalInstance$cp(androidx.window.layout.adapter.sidecar.SidecarWindowBackend):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b;)V"}
    1:1:void callbackRemovedForActivity(android.app.Activity):0:0 -> f
    1:1:java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks():0:0 -> g
    1:1:boolean isActivityRegistered(android.app.Activity):0:0 -> h
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion -> androidx.window.layout.adapter.sidecar.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.window.layout.adapter.sidecar.SidecarWindowBackend getInstance(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/window/layout/adapter/sidecar/b;"}
    1:1:androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/window/layout/adapter/sidecar/a;"}
    1:1:boolean isSidecarVersionSupported(androidx.window.core.Version):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/k;)Z"}
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$ExtensionListenerImpl -> androidx.window.layout.adapter.sidecar.b$b:
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend this$0 -> a
    1:1:void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ly/j;)V"}
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper -> androidx.window.layout.adapter.sidecar.b$c:
    android.app.Activity activity -> a
    java.util.concurrent.Executor executor -> b
    androidx.core.util.Consumer callback -> c
    androidx.window.layout.WindowLayoutInfo lastInfo -> d
    1:1:void <init>(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ljava/util/concurrent/Executor;Li/a;)V"}
    1:1:void $r8$lambda$1Fzggiz8q3lTHWyU2mIB89dvBzk(androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b$c;Ly/j;)V"}
    1:1:void accept(androidx.window.layout.WindowLayoutInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/j;)V"}
    1:1:void accept$lambda$0(androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b$c;Ly/j;)V"}
    1:1:android.app.Activity getActivity():0:0 -> d
    1:1:androidx.core.util.Consumer getCallback():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li/a;"}
    1:1:androidx.window.layout.WindowLayoutInfo getLastInfo():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/j;"}
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$ExternalSyntheticLambda0 -> b0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.f$0 -> e
    androidx.window.layout.WindowLayoutInfo androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.f$1 -> f
    1:1:void androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.<init>(androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b$c;Ly/j;)V"}
    1:1:void androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ActivityCompatHelperApi24 -> c0.b:
    androidx.window.layout.util.ActivityCompatHelperApi24 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean isInMultiWindowMode(android.app.Activity):0:0 -> a
androidx.window.layout.util.ActivityCompatHelperApi24$$ExternalSyntheticApiModelOutline0 -> c0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.window.layout.util.ActivityCompatHelperApi24$$InternalSyntheticApiModelOutline$2$0a53b1046f1ef1f870f8d08ade93680249c65d8d02c6665a148e6f800cce17a3$0.m(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelper -> c0.c:
    androidx.window.layout.util.ContextCompatHelper INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:android.content.Context unwrapUiContext$window_release(android.content.Context):0:0 -> a
androidx.window.layout.util.ContextCompatHelperApi30 -> c0.i:
    androidx.window.layout.util.ContextCompatHelperApi30 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:android.graphics.Rect currentWindowBounds(android.content.Context):0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/core/view/i;"}
    1:1:androidx.window.layout.WindowMetrics currentWindowMetrics(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Ly/k;"}
    1:1:android.graphics.Rect maximumWindowBounds(android.content.Context):0:0 -> d
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline0 -> c0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$0.m(android.content.Context,java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline1 -> c0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$1.m(android.view.WindowManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline2 -> c0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$2.m(android.view.WindowMetrics):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline3 -> c0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Rect androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$4.m(android.view.WindowMetrics):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline4 -> c0.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$97041ee14f9e1ddb13491de6b1484cd9401e12caea0ce217570289610e813181$1.m(android.view.WindowManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi17 -> c0.j:
    androidx.window.layout.util.DisplayCompatHelperApi17 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void getRealSize(android.view.Display,android.graphics.Point):0:0 -> a
androidx.window.layout.util.DisplayCompatHelperApi28 -> c0.o:
    androidx.window.layout.util.DisplayCompatHelperApi28 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int safeInsetBottom(android.view.DisplayCutout):0:0 -> a
    1:1:int safeInsetLeft(android.view.DisplayCutout):0:0 -> b
    1:1:int safeInsetRight(android.view.DisplayCutout):0:0 -> c
    1:1:int safeInsetTop(android.view.DisplayCutout):0:0 -> d
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline0 -> c0.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$20bb7be1389f6bcde3259f8b4259e4c107c23f941b31730e635a09e9fbd4c61c$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline1 -> c0.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$505db3e413fefb2baa6a7cf0abbcf0f5dba7beff88c12c454cd54159787c87cc$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline2 -> c0.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$8901a2b0072c331cfdcf81d5485321c9368020de8bb39106b857442a154ff29a$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline3 -> c0.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$f0a1d90c774d23c902daed4582cbd925dc00be2e1d3a255d144a0377ed35c9db$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.reflection.ReflectionUtils -> d0.a:
    androidx.window.reflection.ReflectionUtils INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean checkIsPresent$window_release(kotlin.jvm.functions.Function0):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/a;)Z"}
    1:1:boolean doesReturn$window_release(java.lang.reflect.Method,java.lang.Class):0:0 -> b
    1:1:boolean doesReturn$window_release(java.lang.reflect.Method,kotlin.reflect.KClass):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/reflect/Method;Lw1/b;)Z"}
    1:1:boolean isPublic$window_release(java.lang.reflect.Method):0:0 -> d
    1:1:boolean validateReflection$window_release(java.lang.String,kotlin.jvm.functions.Function0):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr1/a;)Z"}
androidx.work.ArrayCreatingInputMerger -> androidx.work.ArrayCreatingInputMerger:
    1:1:androidx.work.Data merge(java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Landroidx/work/b;"}
    1:1:java.lang.Object concatenateArrayAndNonArray(java.lang.Object,java.lang.Object,java.lang.Class):0:0 -> b
    1:1:java.lang.Object concatenateArrays(java.lang.Object,java.lang.Object):0:0 -> c
    1:1:java.lang.Object createArrayFor(java.lang.Object,java.lang.Class):0:0 -> d
androidx.work.BackoffPolicy -> e0.a:
    androidx.work.BackoffPolicy EXPONENTIAL -> e
    androidx.work.BackoffPolicy LINEAR -> f
    androidx.work.BackoffPolicy[] $VALUES -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.work.BackoffPolicy[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le0/a;"}
    1:1:androidx.work.BackoffPolicy valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/a;"}
    1:1:androidx.work.BackoffPolicy[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le0/a;"}
androidx.work.Clock -> e0.b:
    long currentTimeMillis() -> a
androidx.work.Configuration -> androidx.work.a:
    java.util.concurrent.Executor executor -> a
    java.util.concurrent.Executor taskExecutor -> b
    androidx.work.Clock clock -> c
    androidx.work.WorkerFactory workerFactory -> d
    androidx.work.InputMergerFactory inputMergerFactory -> e
    androidx.work.RunnableScheduler runnableScheduler -> f
    androidx.core.util.Consumer initializationExceptionHandler -> g
    androidx.core.util.Consumer schedulingExceptionHandler -> h
    java.lang.String defaultProcessName -> i
    int minimumLoggingLevel -> j
    int minJobSchedulerId -> k
    int maxJobSchedulerId -> l
    int contentUriTriggerWorkersLimit -> m
    int maxSchedulerLimit -> n
    boolean isUsingDefaultTaskExecutor -> o
    androidx.work.Configuration$Companion Companion -> p
    1:1:androidx.work.Clock getClock():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/b;"}
    1:1:int getContentUriTriggerWorkersLimit():0:0 -> b
    1:1:java.lang.String getDefaultProcessName():0:0 -> c
    1:1:java.util.concurrent.Executor getExecutor():0:0 -> d
    1:1:androidx.core.util.Consumer getInitializationExceptionHandler():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li/a;"}
    1:1:androidx.work.InputMergerFactory getInputMergerFactory():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/k;"}
    1:1:int getMaxJobSchedulerId():0:0 -> g
    1:1:int getMaxSchedulerLimit():0:0 -> h
    1:1:int getMinJobSchedulerId():0:0 -> i
    1:1:int getMinimumLoggingLevel():0:0 -> j
    1:1:androidx.work.RunnableScheduler getRunnableScheduler():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/v;"}
    1:1:androidx.core.util.Consumer getSchedulingExceptionHandler():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li/a;"}
    1:1:java.util.concurrent.Executor getTaskExecutor():0:0 -> m
    1:1:androidx.work.WorkerFactory getWorkerFactory():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/b0;"}
androidx.work.Configuration$Builder -> androidx.work.a$a:
    java.util.concurrent.Executor executor -> a
    androidx.work.WorkerFactory workerFactory -> b
    androidx.work.InputMergerFactory inputMergerFactory -> c
    java.util.concurrent.Executor taskExecutor -> d
    androidx.work.Clock clock -> e
    androidx.work.RunnableScheduler runnableScheduler -> f
    androidx.core.util.Consumer initializationExceptionHandler -> g
    androidx.core.util.Consumer schedulingExceptionHandler -> h
    java.lang.String defaultProcessName -> i
    int loggingLevel -> j
    int minJobSchedulerId -> k
    int maxJobSchedulerId -> l
    int maxSchedulerLimit -> m
    int contentUriTriggerWorkersLimit -> n
    1:1:androidx.work.Configuration build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/a;"}
    1:1:androidx.work.Clock getClock$work_runtime_release():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/b;"}
    1:1:int getContentUriTriggerWorkersLimit$work_runtime_release():0:0 -> c
    1:1:java.lang.String getDefaultProcessName$work_runtime_release():0:0 -> d
    1:1:java.util.concurrent.Executor getExecutor$work_runtime_release():0:0 -> e
    1:1:androidx.core.util.Consumer getInitializationExceptionHandler$work_runtime_release():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li/a;"}
    1:1:androidx.work.InputMergerFactory getInputMergerFactory$work_runtime_release():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/k;"}
    1:1:int getLoggingLevel$work_runtime_release():0:0 -> h
    1:1:int getMaxJobSchedulerId$work_runtime_release():0:0 -> i
    1:1:int getMaxSchedulerLimit$work_runtime_release():0:0 -> j
    1:1:int getMinJobSchedulerId$work_runtime_release():0:0 -> k
    1:1:androidx.work.RunnableScheduler getRunnableScheduler$work_runtime_release():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/v;"}
    1:1:androidx.core.util.Consumer getSchedulingExceptionHandler$work_runtime_release():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li/a;"}
    1:1:java.util.concurrent.Executor getTaskExecutor$work_runtime_release():0:0 -> n
    1:1:androidx.work.WorkerFactory getWorkerFactory$work_runtime_release():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/b0;"}
androidx.work.Configuration$Companion -> androidx.work.a$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.work.ConfigurationKt -> e0.c:
    int DEFAULT_CONTENT_URI_TRIGGERS_WORKERS_LIMIT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.util.concurrent.Executor access$createDefaultExecutor(boolean):0:0 -> a
    1:1:java.util.concurrent.Executor createDefaultExecutor(boolean):0:0 -> b
    1:1:int getDEFAULT_CONTENT_URI_TRIGGERS_WORKERS_LIMIT():0:0 -> c
androidx.work.ConfigurationKt$createDefaultExecutor$factory$1 -> e0.c$a:
    java.util.concurrent.atomic.AtomicInteger threadCount -> a
    boolean $isTaskExecutor -> b
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
androidx.work.Constraints -> e0.d:
    androidx.work.NetworkType requiredNetworkType -> a
    boolean requiresCharging -> b
    boolean requiresDeviceIdle -> c
    boolean requiresBatteryNotLow -> d
    boolean requiresStorageNotLow -> e
    long contentTriggerUpdateDelayMillis -> f
    long contentTriggerMaxDelayMillis -> g
    java.util.Set contentUriTriggers -> h
    androidx.work.Constraints$Companion Companion -> i
    androidx.work.Constraints NONE -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.work.Constraints):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/d;)V"}
    2:2:void <init>(androidx.work.NetworkType,boolean,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/o;ZZZ)V"}
    3:3:void <init>(androidx.work.NetworkType,boolean,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/o;ZZZILs1/g;)V"}
    4:4:void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/o;ZZZZ)V"}
    5:5:void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/o;ZZZZJJLjava/util/Set;)V"}
    6:6:void <init>(androidx.work.NetworkType,boolean,boolean,boolean,boolean,long,long,java.util.Set,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/o;ZZZZJJLjava/util/Set;ILs1/g;)V"}
    1:1:long getContentTriggerMaxDelayMillis():0:0 -> a
    1:1:long getContentTriggerUpdateDelayMillis():0:0 -> b
    1:1:java.util.Set getContentUriTriggers():0:0 -> c
    1:1:androidx.work.NetworkType getRequiredNetworkType():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/o;"}
    1:1:boolean hasContentUriTriggers():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:boolean requiresBatteryNotLow():0:0 -> f
    1:1:boolean requiresCharging():0:0 -> g
    1:1:boolean requiresDeviceIdle():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean requiresStorageNotLow():0:0 -> i
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.Constraints$Builder -> e0.d$a:
    boolean requiresCharging -> a
    boolean requiresDeviceIdle -> b
    androidx.work.NetworkType requiredNetworkType -> c
    boolean requiresBatteryNotLow -> d
    boolean requiresStorageNotLow -> e
    long triggerContentUpdateDelay -> f
    long triggerContentMaxDelay -> g
    java.util.Set contentUriTriggers -> h
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.work.Constraints build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/d;"}
    1:1:androidx.work.Constraints$Builder setRequiredNetworkType(androidx.work.NetworkType):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/o;)Le0/d$a;"}
    1:1:androidx.work.Constraints$Builder setRequiresStorageNotLow(boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Le0/d$a;"}
androidx.work.Constraints$Companion -> e0.d$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.work.Constraints$ContentUriTrigger -> e0.d$c:
    android.net.Uri uri -> a
    boolean isTriggeredForDescendants -> b
    1:1:void <init>(android.net.Uri,boolean):0:0 -> <init>
    1:1:android.net.Uri getUri():0:0 -> a
    1:1:boolean isTriggeredForDescendants():0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.work.Constraints$ContentUriTrigger$$ExternalSyntheticBackport0 -> e0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.work.Constraints$ContentUriTrigger$$InternalSyntheticBackport$1$2e476f6529747027d148ea423295c3cf01c39a723b5cd916f9f9037a9914ff62$0.m(boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.CoroutineWorker -> androidx.work.CoroutineWorker:
    kotlinx.coroutines.CompletableJob job -> e
    androidx.work.impl.utils.futures.SettableFuture future -> f
    kotlinx.coroutines.CoroutineDispatcher coroutineContext -> g
    1:1:com.google.common.util.concurrent.ListenableFuture getForegroundInfoAsync():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/a;"}
    1:1:void onStopped():0:0 -> m
    1:1:com.google.common.util.concurrent.ListenableFuture startWork():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/a;"}
    1:1:void $r8$lambda$vS4ut6uACXh9vB8D1LtSlAShhGE(androidx.work.CoroutineWorker):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void _init_$lambda$0(androidx.work.CoroutineWorker):0:0 -> r
    java.lang.Object doWork(kotlin.coroutines.Continuation) -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.CoroutineDispatcher getCoroutineContext():0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/a0;"}
    1:1:java.lang.Object getForegroundInfo(kotlin.coroutines.Continuation):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object getForegroundInfo$suspendImpl(androidx.work.CoroutineWorker,kotlin.coroutines.Continuation):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/CoroutineWorker;Li1/d;)Ljava/lang/Object;"}
    1:1:androidx.work.impl.utils.futures.SettableFuture getFuture$work_runtime_release():0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/impl/utils/futures/c;"}
androidx.work.CoroutineWorker$$ExternalSyntheticLambda0 -> e0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.CoroutineWorker androidx.work.CoroutineWorker$$InternalSyntheticLambda$1$4868da841a0e23000b4c894c3ebd889c844b46c9538bbffd3e0d7a1a3acb0725$0.f$0 -> e
    1:1:void androidx.work.CoroutineWorker$$InternalSyntheticLambda$1$4868da841a0e23000b4c894c3ebd889c844b46c9538bbffd3e0d7a1a3acb0725$0.<init>(androidx.work.CoroutineWorker):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.work.CoroutineWorker$$InternalSyntheticLambda$1$4868da841a0e23000b4c894c3ebd889c844b46c9538bbffd3e0d7a1a3acb0725$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.CoroutineWorker$getForegroundInfoAsync$1 -> androidx.work.CoroutineWorker$a:
    java.lang.Object L$0 -> i
    int label -> j
    androidx.work.JobListenableFuture $jobFuture -> k
    androidx.work.CoroutineWorker this$0 -> l
    1:1:void <init>(androidx.work.JobListenableFuture,androidx.work.CoroutineWorker,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/m;Landroidx/work/CoroutineWorker;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/d;)Ljava/lang/Object;"}
androidx.work.CoroutineWorker$startWork$1 -> androidx.work.CoroutineWorker$b:
    int label -> i
    androidx.work.CoroutineWorker this$0 -> j
    1:1:void <init>(androidx.work.CoroutineWorker,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/CoroutineWorker;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/d;)Ljava/lang/Object;"}
androidx.work.Data -> androidx.work.b:
    java.util.Map mValues -> a
    java.lang.String TAG -> b
    androidx.work.Data EMPTY -> c
    1:1:void <init>(androidx.work.Data):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/b;)V"}
    2:2:void <init>(java.util.Map):0:0 -> <init>
    1:1:java.lang.Boolean[] convertPrimitiveBooleanArray(boolean[]):0:0 -> a
    1:1:java.lang.Byte[] convertPrimitiveByteArray(byte[]):0:0 -> b
    1:1:java.lang.Double[] convertPrimitiveDoubleArray(double[]):0:0 -> c
    1:1:java.lang.Float[] convertPrimitiveFloatArray(float[]):0:0 -> d
    1:1:java.lang.Integer[] convertPrimitiveIntArray(int[]):0:0 -> e
    1:1:java.lang.Long[] convertPrimitiveLongArray(long[]):0:0 -> f
    1:1:androidx.work.Data fromByteArray(byte[]):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Landroidx/work/b;"}
    1:1:boolean getBoolean(java.lang.String,boolean):0:0 -> h
    1:1:int getInt(java.lang.String,int):0:0 -> i
    1:1:java.util.Map getKeyValueMap():0:0 -> j
    1:1:long getLong(java.lang.String,long):0:0 -> k
    1:1:java.lang.String getString(java.lang.String):0:0 -> l
    1:1:int size():0:0 -> m
    1:1:byte[] toByteArrayInternal(androidx.work.Data):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/b;)[B"}
androidx.work.Data$Builder -> androidx.work.b$a:
    java.util.Map mValues -> a
    1:1:androidx.work.Data build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/b;"}
    1:1:androidx.work.Data$Builder put(java.lang.String,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Object;)Landroidx/work/b$a;"}
    1:1:androidx.work.Data$Builder putAll(androidx.work.Data):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/b;)Landroidx/work/b$a;"}
    1:1:androidx.work.Data$Builder putAll(java.util.Map):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Landroidx/work/b$a;"}
    1:1:androidx.work.Data$Builder putBoolean(java.lang.String,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Z)Landroidx/work/b$a;"}
    1:1:androidx.work.Data$Builder putInt(java.lang.String,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;I)Landroidx/work/b$a;"}
    1:1:androidx.work.Data$Builder putLong(java.lang.String,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;J)Landroidx/work/b$a;"}
    1:1:androidx.work.Data$Builder putString(java.lang.String,java.lang.String):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;)Landroidx/work/b$a;"}
androidx.work.ExistingWorkPolicy -> e0.g:
    androidx.work.ExistingWorkPolicy REPLACE -> e
    androidx.work.ExistingWorkPolicy KEEP -> f
    androidx.work.ExistingWorkPolicy APPEND -> g
    androidx.work.ExistingWorkPolicy APPEND_OR_REPLACE -> h
    androidx.work.ExistingWorkPolicy[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.work.ExistingWorkPolicy[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le0/g;"}
    1:1:androidx.work.ExistingWorkPolicy valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/g;"}
    1:1:androidx.work.ExistingWorkPolicy[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le0/g;"}
androidx.work.ForegroundInfo -> e0.h:
    int mNotificationId -> a
    int mForegroundServiceType -> b
    android.app.Notification mNotification -> c
    1:1:void <init>(int,android.app.Notification,int):0:0 -> <init>
    1:1:int getForegroundServiceType():0:0 -> a
    1:1:android.app.Notification getNotification():0:0 -> b
    1:1:int getNotificationId():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.ForegroundUpdater -> e0.i:
    com.google.common.util.concurrent.ListenableFuture setForegroundAsync(android.content.Context,java.util.UUID,androidx.work.ForegroundInfo) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/UUID;Le0/h;)Lo0/a;"}
androidx.work.InputMerger -> e0.j:
    void <init>() -> <init>
    androidx.work.Data merge(java.util.List) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Landroidx/work/b;"}
androidx.work.InputMergerFactory -> e0.k:
    void <init>() -> <init>
    androidx.work.InputMerger createInputMerger(java.lang.String) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/j;"}
    1:1:androidx.work.InputMerger createInputMergerWithDefaultFallback(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/j;"}
androidx.work.InputMergerKt -> e0.l:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:androidx.work.InputMerger fromClassName(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/j;"}
androidx.work.JobListenableFuture -> e0.m:
    kotlinx.coroutines.Job job -> a
    androidx.work.impl.utils.futures.SettableFuture underlying -> b
    1:1:void <init>(kotlinx.coroutines.Job,androidx.work.impl.utils.futures.SettableFuture):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;Landroidx/work/impl/utils/futures/c;)V"}
    2:2:void <init>(kotlinx.coroutines.Job,androidx.work.impl.utils.futures.SettableFuture,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;Landroidx/work/impl/utils/futures/c;ILs1/g;)V"}
    1:1:void addListener(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> a
    1:1:androidx.work.impl.utils.futures.SettableFuture access$getUnderlying$p(androidx.work.JobListenableFuture):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/m;)Landroidx/work/impl/utils/futures/c;"}
    1:1:void complete(java.lang.Object):0:0 -> c
    1:1:boolean cancel(boolean):0:0 -> cancel
    1:1:java.lang.Object get():0:0 -> get
    2:2:java.lang.Object get(long,java.util.concurrent.TimeUnit):0:0 -> get
    1:1:boolean isCancelled():0:0 -> isCancelled
    1:1:boolean isDone():0:0 -> isDone
androidx.work.JobListenableFuture$1 -> e0.m$a:
    androidx.work.JobListenableFuture this$0 -> f
    1:1:void <init>(androidx.work.JobListenableFuture):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/m;)V"}
    1:1:void invoke(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.work.ListenableWorker -> androidx.work.c:
    android.content.Context mAppContext -> a
    androidx.work.WorkerParameters mWorkerParams -> b
    int mStopReason -> c
    boolean mUsed -> d
    1:1:android.content.Context getApplicationContext():0:0 -> a
    1:1:java.util.concurrent.Executor getBackgroundExecutor():0:0 -> b
    1:1:com.google.common.util.concurrent.ListenableFuture getForegroundInfoAsync():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/a;"}
    1:1:java.util.UUID getId():0:0 -> e
    1:1:androidx.work.Data getInputData():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/b;"}
    1:1:int getStopReason():0:0 -> g
    1:1:androidx.work.impl.utils.taskexecutor.TaskExecutor getTaskExecutor():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/c;"}
    1:1:androidx.work.WorkerFactory getWorkerFactory():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/b0;"}
    1:1:boolean isStopped():0:0 -> k
    1:1:boolean isUsed():0:0 -> l
    1:1:void onStopped():0:0 -> m
    1:1:void setUsed():0:0 -> n
    com.google.common.util.concurrent.ListenableFuture startWork() -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/a;"}
    1:1:void stop(int):0:0 -> p
androidx.work.ListenableWorker$Result -> androidx.work.c$a:
    1:1:androidx.work.ListenableWorker$Result failure():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/c$a;"}
    1:1:androidx.work.ListenableWorker$Result retry():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/c$a;"}
    1:1:androidx.work.ListenableWorker$Result success():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/c$a;"}
    1:1:androidx.work.ListenableWorker$Result success(androidx.work.Data):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/b;)Landroidx/work/c$a;"}
androidx.work.ListenableWorker$Result$Failure -> androidx.work.c$a$a:
    androidx.work.Data mOutputData -> a
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.work.Data):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/b;)V"}
    1:1:androidx.work.Data getOutputData():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/b;"}
androidx.work.ListenableWorker$Result$Retry -> androidx.work.c$a$b:
androidx.work.ListenableWorker$Result$Success -> androidx.work.c$a$c:
    androidx.work.Data mOutputData -> a
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.work.Data):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/b;)V"}
    1:1:androidx.work.Data getOutputData():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/b;"}
androidx.work.Logger -> e0.n:
    java.lang.Object sLock -> a
    androidx.work.Logger sLogger -> b
    int MAX_PREFIXED_TAG_LENGTH -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>(int) -> <init>
    void debug(java.lang.String,java.lang.String) -> a
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void error(java.lang.String,java.lang.String) -> c
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    1:1:androidx.work.Logger get():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/n;"}
    void info(java.lang.String,java.lang.String) -> f
    void info(java.lang.String,java.lang.String,java.lang.Throwable) -> g
    1:1:void setLogger(androidx.work.Logger):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/n;)V"}
    1:1:java.lang.String tagWithPrefix(java.lang.String):0:0 -> i
    void verbose(java.lang.String,java.lang.String) -> j
    void warning(java.lang.String,java.lang.String) -> k
    void warning(java.lang.String,java.lang.String,java.lang.Throwable) -> l
androidx.work.Logger$LogcatLogger -> e0.n$a:
    int mLoggingLevel -> d
    1:1:void <init>(int):0:0 -> <init>
    1:1:void debug(java.lang.String,java.lang.String):0:0 -> a
    1:1:void debug(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> b
    1:1:void error(java.lang.String,java.lang.String):0:0 -> c
    1:1:void error(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> d
    1:1:void info(java.lang.String,java.lang.String):0:0 -> f
    1:1:void info(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> g
    1:1:void verbose(java.lang.String,java.lang.String):0:0 -> j
    1:1:void warning(java.lang.String,java.lang.String):0:0 -> k
    1:1:void warning(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> l
androidx.work.NetworkType -> e0.o:
    androidx.work.NetworkType NOT_REQUIRED -> e
    androidx.work.NetworkType CONNECTED -> f
    androidx.work.NetworkType UNMETERED -> g
    androidx.work.NetworkType NOT_ROAMING -> h
    androidx.work.NetworkType METERED -> i
    androidx.work.NetworkType TEMPORARILY_UNMETERED -> j
    androidx.work.NetworkType[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.work.NetworkType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le0/o;"}
    1:1:androidx.work.NetworkType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/o;"}
    1:1:androidx.work.NetworkType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le0/o;"}
androidx.work.NoOpInputMergerFactory -> e0.p:
    androidx.work.NoOpInputMergerFactory INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.work.InputMerger createInputMerger(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/j;"}
    1:1:java.lang.Void createInputMerger(java.lang.String):0:0 -> c
androidx.work.OneTimeWorkRequest -> e0.q:
    androidx.work.OneTimeWorkRequest$Companion Companion -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.work.OneTimeWorkRequest$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/q$a;)V"}
    1:1:androidx.work.OneTimeWorkRequest from(java.lang.Class):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Le0/q;"}
androidx.work.OneTimeWorkRequest$Builder -> e0.q$a:
    1:1:void <init>(java.lang.Class):0:0 -> <init>
    1:1:androidx.work.WorkRequest buildInternal$work_runtime_release():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/a0;"}
    1:1:androidx.work.WorkRequest$Builder getThisObject$work_runtime_release():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/a0$a;"}
    1:1:androidx.work.OneTimeWorkRequest buildInternal$work_runtime_release():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/q;"}
    1:1:androidx.work.OneTimeWorkRequest$Builder getThisObject$work_runtime_release():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/q$a;"}
androidx.work.OneTimeWorkRequest$Companion -> e0.q$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.work.OneTimeWorkRequest from(java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Le0/q;"}
androidx.work.Operation -> e0.r:
    androidx.work.Operation$State$SUCCESS SUCCESS -> a
    androidx.work.Operation$State$IN_PROGRESS IN_PROGRESS -> b
    1:1:void <clinit>():0:0 -> <clinit>
androidx.work.Operation$1 -> e0.r$a:
androidx.work.Operation$State -> e0.r$b:
    void <init>() -> <init>
androidx.work.Operation$State$FAILURE -> e0.r$b$a:
    java.lang.Throwable mThrowable -> a
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
    1:1:java.lang.Throwable getThrowable():0:0 -> a
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.Operation$State$IN_PROGRESS -> e0.r$b$b:
    void <init>() -> <init>
    1:1:void <init>(androidx.work.Operation$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/r$a;)V"}
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.Operation$State$SUCCESS -> e0.r$b$c:
    void <init>() -> <init>
    1:1:void <init>(androidx.work.Operation$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/r$a;)V"}
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.OutOfQuotaPolicy -> e0.s:
    androidx.work.OutOfQuotaPolicy RUN_AS_NON_EXPEDITED_WORK_REQUEST -> e
    androidx.work.OutOfQuotaPolicy DROP_WORK_REQUEST -> f
    androidx.work.OutOfQuotaPolicy[] $VALUES -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.work.OutOfQuotaPolicy[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le0/s;"}
    1:1:androidx.work.OutOfQuotaPolicy valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/s;"}
    1:1:androidx.work.OutOfQuotaPolicy[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le0/s;"}
androidx.work.OverwritingInputMerger -> androidx.work.OverwritingInputMerger:
    1:1:androidx.work.Data merge(java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Landroidx/work/b;"}
androidx.work.ProgressUpdater -> e0.t:
androidx.work.R$bool -> e0.u:
    int workmanager_test_configuration -> a
androidx.work.RunnableScheduler -> e0.v:
    void cancel(java.lang.Runnable) -> a
    void scheduleWithDelay(long,java.lang.Runnable) -> b
androidx.work.SystemClock -> e0.w:
    void <init>() -> <init>
    1:1:long currentTimeMillis():0:0 -> a
androidx.work.WorkContinuation -> e0.x:
    void <init>() -> <init>
androidx.work.WorkInfo$State -> e0.y:
    androidx.work.WorkInfo$State ENQUEUED -> e
    androidx.work.WorkInfo$State RUNNING -> f
    androidx.work.WorkInfo$State SUCCEEDED -> g
    androidx.work.WorkInfo$State FAILED -> h
    androidx.work.WorkInfo$State BLOCKED -> i
    androidx.work.WorkInfo$State CANCELLED -> j
    androidx.work.WorkInfo$State[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.work.WorkInfo$State[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le0/y;"}
    1:1:boolean isFinished():0:0 -> b
    1:1:androidx.work.WorkInfo$State valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/y;"}
    1:1:androidx.work.WorkInfo$State[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le0/y;"}
androidx.work.WorkManager -> e0.z:
    void <init>() -> <init>
    androidx.work.Operation cancelAllWorkByTag(java.lang.String) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/r;"}
    androidx.work.Operation cancelWorkById(java.util.UUID) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;)Le0/r;"}
    1:1:androidx.work.Operation enqueue(androidx.work.WorkRequest):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/a0;)Le0/r;"}
    androidx.work.Operation enqueue(java.util.List) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Le0/r;"}
    1:1:androidx.work.WorkManager getInstance(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Le0/z;"}
    1:1:void initialize(android.content.Context,androidx.work.Configuration):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;)V"}
androidx.work.WorkManagerInitializer -> androidx.work.WorkManagerInitializer:
    java.lang.String TAG -> a
    1:1:java.util.List dependencies():0:0 -> a
    1:1:java.lang.Object create(android.content.Context):0:0 -> b
    1:1:androidx.work.WorkManager create(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Le0/z;"}
androidx.work.WorkRequest -> e0.a0:
    java.util.UUID id -> a
    androidx.work.impl.model.WorkSpec workSpec -> b
    java.util.Set tags -> c
    androidx.work.WorkRequest$Companion Companion -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.UUID,androidx.work.impl.model.WorkSpec,java.util.Set):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Lj0/w;Ljava/util/Set;)V"}
    1:1:java.util.UUID getId():0:0 -> a
    1:1:java.lang.String getStringId():0:0 -> b
    1:1:java.util.Set getTags():0:0 -> c
    1:1:androidx.work.impl.model.WorkSpec getWorkSpec():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/w;"}
androidx.work.WorkRequest$Builder -> e0.a0$a:
    java.lang.Class workerClass -> a
    boolean backoffCriteriaSet -> b
    java.util.UUID id -> c
    androidx.work.impl.model.WorkSpec workSpec -> d
    java.util.Set tags -> e
    1:1:void <init>(java.lang.Class):0:0 -> <init>
    1:1:androidx.work.WorkRequest$Builder addTag(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/a0$a;"}
    1:1:androidx.work.WorkRequest build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/a0;"}
    androidx.work.WorkRequest buildInternal$work_runtime_release() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/a0;"}
    1:1:boolean getBackoffCriteriaSet$work_runtime_release():0:0 -> d
    1:1:java.util.UUID getId$work_runtime_release():0:0 -> e
    1:1:java.util.Set getTags$work_runtime_release():0:0 -> f
    androidx.work.WorkRequest$Builder getThisObject$work_runtime_release() -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/a0$a;"}
    1:1:androidx.work.impl.model.WorkSpec getWorkSpec$work_runtime_release():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/w;"}
    1:1:androidx.work.WorkRequest$Builder setBackoffCriteria(androidx.work.BackoffPolicy,long,java.util.concurrent.TimeUnit):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/a;JLjava/util/concurrent/TimeUnit;)Le0/a0$a;"}
    1:1:androidx.work.WorkRequest$Builder setConstraints(androidx.work.Constraints):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/d;)Le0/a0$a;"}
    1:1:androidx.work.WorkRequest$Builder setId(java.util.UUID):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;)Le0/a0$a;"}
    1:1:androidx.work.WorkRequest$Builder setInputData(androidx.work.Data):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/b;)Le0/a0$a;"}
androidx.work.WorkRequest$Companion -> e0.a0$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.work.Worker -> androidx.work.Worker:
    androidx.work.impl.utils.futures.SettableFuture mFuture -> e
    1:1:com.google.common.util.concurrent.ListenableFuture getForegroundInfoAsync():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/a;"}
    1:1:com.google.common.util.concurrent.ListenableFuture startWork():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/a;"}
    androidx.work.ListenableWorker$Result doWork() -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/c$a;"}
    1:1:androidx.work.ForegroundInfo getForegroundInfo():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/h;"}
androidx.work.Worker$1 -> androidx.work.Worker$a:
    androidx.work.Worker this$0 -> e
androidx.work.Worker$2 -> androidx.work.Worker$b:
    androidx.work.impl.utils.futures.SettableFuture val$future -> e
    androidx.work.Worker this$0 -> f
androidx.work.WorkerFactory -> e0.b0:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    androidx.work.ListenableWorker createWorker(android.content.Context,java.lang.String,androidx.work.WorkerParameters) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Landroidx/work/WorkerParameters;)Landroidx/work/c;"}
    1:1:androidx.work.ListenableWorker createWorkerWithDefaultFallback(android.content.Context,java.lang.String,androidx.work.WorkerParameters):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Landroidx/work/WorkerParameters;)Landroidx/work/c;"}
    1:1:androidx.work.WorkerFactory getDefaultWorkerFactory():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/b0;"}
androidx.work.WorkerFactory$1 -> e0.b0$a:
    void <init>() -> <init>
    1:1:androidx.work.ListenableWorker createWorker(android.content.Context,java.lang.String,androidx.work.WorkerParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Landroidx/work/WorkerParameters;)Landroidx/work/c;"}
androidx.work.WorkerParameters -> androidx.work.WorkerParameters:
    java.util.UUID mId -> a
    androidx.work.Data mInputData -> b
    java.util.Set mTags -> c
    androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras -> d
    int mRunAttemptCount -> e
    java.util.concurrent.Executor mBackgroundExecutor -> f
    androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor -> g
    androidx.work.WorkerFactory mWorkerFactory -> h
    androidx.work.ProgressUpdater mProgressUpdater -> i
    androidx.work.ForegroundUpdater mForegroundUpdater -> j
    int mGeneration -> k
    1:1:void <init>(java.util.UUID,androidx.work.Data,java.util.Collection,androidx.work.WorkerParameters$RuntimeExtras,int,int,java.util.concurrent.Executor,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.WorkerFactory,androidx.work.ProgressUpdater,androidx.work.ForegroundUpdater):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Landroidx/work/b;Ljava/util/Collection;Landroidx/work/WorkerParameters$a;IILjava/util/concurrent/Executor;Ll0/c;Le0/b0;Le0/t;Le0/i;)V"}
    1:1:java.util.concurrent.Executor getBackgroundExecutor():0:0 -> a
    1:1:androidx.work.ForegroundUpdater getForegroundUpdater():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/i;"}
    1:1:java.util.UUID getId():0:0 -> c
    1:1:androidx.work.Data getInputData():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/b;"}
    1:1:androidx.work.impl.utils.taskexecutor.TaskExecutor getTaskExecutor():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/c;"}
    1:1:androidx.work.WorkerFactory getWorkerFactory():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/b0;"}
androidx.work.WorkerParameters$RuntimeExtras -> androidx.work.WorkerParameters$a:
    java.util.List triggeredContentAuthorities -> a
    java.util.List triggeredContentUris -> b
    android.net.Network network -> c
androidx.work.impl.Api21Impl -> androidx.work.impl.a:
    androidx.work.impl.Api21Impl INSTANCE -> a
    1:1:java.io.File getNoBackupFilesDir(android.content.Context):0:0 -> a
androidx.work.impl.AutoMigration_14_15 -> androidx.work.impl.b:
    1:1:void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.AutoMigration_19_20 -> androidx.work.impl.c:
    1:1:void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.CleanupCallback -> androidx.work.impl.d:
    androidx.work.Clock clock -> a
    1:1:void <init>(androidx.work.Clock):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/b;)V"}
    1:1:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:long getPruneDate():0:0 -> d
    1:1:java.lang.String getPruneSQL():0:0 -> e
androidx.work.impl.DefaultRunnableScheduler -> androidx.work.impl.e:
    android.os.Handler mHandler -> a
    1:1:void cancel(java.lang.Runnable):0:0 -> a
    1:1:void scheduleWithDelay(long,java.lang.Runnable):0:0 -> b
androidx.work.impl.ExecutionListener -> androidx.work.impl.f:
    void onExecuted(androidx.work.impl.model.WorkGenerationalId,boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Z)V"}
androidx.work.impl.Migration_11_12 -> androidx.work.impl.g:
    androidx.work.impl.Migration_11_12 INSTANCE -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.Migration_12_13 -> androidx.work.impl.h:
    androidx.work.impl.Migration_12_13 INSTANCE -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.Migration_15_16 -> androidx.work.impl.i:
    androidx.work.impl.Migration_15_16 INSTANCE -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.Migration_16_17 -> androidx.work.impl.j:
    androidx.work.impl.Migration_16_17 INSTANCE -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.Migration_1_2 -> androidx.work.impl.k:
    androidx.work.impl.Migration_1_2 INSTANCE -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.Migration_3_4 -> androidx.work.impl.l:
    androidx.work.impl.Migration_3_4 INSTANCE -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.Migration_4_5 -> androidx.work.impl.m:
    androidx.work.impl.Migration_4_5 INSTANCE -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.Migration_6_7 -> androidx.work.impl.n:
    androidx.work.impl.Migration_6_7 INSTANCE -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.Migration_7_8 -> androidx.work.impl.o:
    androidx.work.impl.Migration_7_8 INSTANCE -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.Migration_8_9 -> androidx.work.impl.p:
    androidx.work.impl.Migration_8_9 INSTANCE -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.OperationImpl -> androidx.work.impl.q:
    androidx.lifecycle.MutableLiveData mOperationState -> c
    androidx.work.impl.utils.futures.SettableFuture mOperationFuture -> d
    1:1:void markState(androidx.work.Operation$State):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/r$b;)V"}
androidx.work.impl.Processor -> androidx.work.impl.u:
    android.os.PowerManager$WakeLock mForegroundLock -> a
    android.content.Context mAppContext -> b
    androidx.work.Configuration mConfiguration -> c
    androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor -> d
    androidx.work.impl.WorkDatabase mWorkDatabase -> e
    java.util.Map mForegroundWorkMap -> f
    java.util.Map mEnqueuedWorkMap -> g
    java.util.Map mWorkRuns -> h
    java.util.Set mCancelledIds -> i
    java.util.List mOuterListeners -> j
    java.lang.Object mLock -> k
    java.lang.String TAG -> l
    1:1:void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;Ll0/c;Landroidx/work/impl/WorkDatabase;)V"}
    1:1:void startForeground(java.lang.String,androidx.work.ForegroundInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Le0/h;)V"}
    1:1:void $r8$lambda$Bg3FlYHf9CNKM0T38iM9eyGDQ60(androidx.work.impl.Processor,androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/u;Lj0/n;Z)V"}
    1:1:androidx.work.impl.model.WorkSpec $r8$lambda$G6pyPhUu1fiIb85vbIqsiGmwX7w(androidx.work.impl.Processor,java.util.ArrayList,java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/u;Ljava/util/ArrayList;Ljava/lang/String;)Lj0/w;"}
    1:1:void $r8$lambda$wZWAJM8aAC4J9laKkSvSt01pdH8(androidx.work.impl.Processor,com.google.common.util.concurrent.ListenableFuture,androidx.work.impl.WorkerWrapper):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/u;Lo0/a;Landroidx/work/impl/v0;)V"}
    1:1:void addExecutionListener(androidx.work.impl.ExecutionListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/f;)V"}
    1:1:androidx.work.impl.WorkerWrapper cleanUpWorkerUnsafe(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/work/impl/v0;"}
    1:1:androidx.work.impl.model.WorkSpec getRunningWorkSpec(java.lang.String):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj0/w;"}
    1:1:androidx.work.impl.WorkerWrapper getWorkerWrapperUnsafe(java.lang.String):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/work/impl/v0;"}
    1:1:boolean interrupt(java.lang.String,androidx.work.impl.WorkerWrapper,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/work/impl/v0;I)Z"}
    1:1:boolean isCancelled(java.lang.String):0:0 -> j
    1:1:boolean isEnqueued(java.lang.String):0:0 -> k
    1:1:void lambda$runOnExecuted$2(androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Z)V"}
    1:1:androidx.work.impl.model.WorkSpec lambda$startWork$0(java.util.ArrayList,java.lang.String):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Ljava/lang/String;)Lj0/w;"}
    1:1:void lambda$startWork$1(com.google.common.util.concurrent.ListenableFuture,androidx.work.impl.WorkerWrapper):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/a;Landroidx/work/impl/v0;)V"}
    1:1:void onExecuted(androidx.work.impl.WorkerWrapper,boolean):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/v0;Z)V"}
    1:1:void removeExecutionListener(androidx.work.impl.ExecutionListener):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/f;)V"}
    1:1:void runOnExecuted(androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Z)V"}
    1:1:boolean startWork(androidx.work.impl.StartStopToken):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;)Z"}
    1:1:boolean startWork(androidx.work.impl.StartStopToken,androidx.work.WorkerParameters$RuntimeExtras):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;Landroidx/work/WorkerParameters$a;)Z"}
    1:1:boolean stopAndCancelWork(java.lang.String,int):0:0 -> t
    1:1:void stopForegroundService():0:0 -> u
    1:1:boolean stopForegroundWork(androidx.work.impl.StartStopToken,int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;I)Z"}
    1:1:boolean stopWork(androidx.work.impl.StartStopToken,int):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;I)Z"}
androidx.work.impl.Processor$$ExternalSyntheticLambda0 -> androidx.work.impl.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.Processor androidx.work.impl.Processor$$InternalSyntheticLambda$1$3354c334eae638a678a5f8f26330a80af9f2189a5e04c420370f770cb67bb301$0.f$0 -> a
    java.util.ArrayList androidx.work.impl.Processor$$InternalSyntheticLambda$1$3354c334eae638a678a5f8f26330a80af9f2189a5e04c420370f770cb67bb301$0.f$1 -> b
    java.lang.String androidx.work.impl.Processor$$InternalSyntheticLambda$1$3354c334eae638a678a5f8f26330a80af9f2189a5e04c420370f770cb67bb301$0.f$2 -> c
    1:1:void androidx.work.impl.Processor$$InternalSyntheticLambda$1$3354c334eae638a678a5f8f26330a80af9f2189a5e04c420370f770cb67bb301$0.<init>(androidx.work.impl.Processor,java.util.ArrayList,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/u;Ljava/util/ArrayList;Ljava/lang/String;)V"}
    1:1:java.lang.Object androidx.work.impl.Processor$$InternalSyntheticLambda$1$3354c334eae638a678a5f8f26330a80af9f2189a5e04c420370f770cb67bb301$0.call():0:0 -> call
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.Processor$$ExternalSyntheticLambda1 -> androidx.work.impl.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.Processor androidx.work.impl.Processor$$InternalSyntheticLambda$1$3354c334eae638a678a5f8f26330a80af9f2189a5e04c420370f770cb67bb301$1.f$0 -> e
    com.google.common.util.concurrent.ListenableFuture androidx.work.impl.Processor$$InternalSyntheticLambda$1$3354c334eae638a678a5f8f26330a80af9f2189a5e04c420370f770cb67bb301$1.f$1 -> f
    androidx.work.impl.WorkerWrapper androidx.work.impl.Processor$$InternalSyntheticLambda$1$3354c334eae638a678a5f8f26330a80af9f2189a5e04c420370f770cb67bb301$1.f$2 -> g
    1:1:void androidx.work.impl.Processor$$InternalSyntheticLambda$1$3354c334eae638a678a5f8f26330a80af9f2189a5e04c420370f770cb67bb301$1.<init>(androidx.work.impl.Processor,com.google.common.util.concurrent.ListenableFuture,androidx.work.impl.WorkerWrapper):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/u;Lo0/a;Landroidx/work/impl/v0;)V"}
    1:1:void androidx.work.impl.Processor$$InternalSyntheticLambda$1$3354c334eae638a678a5f8f26330a80af9f2189a5e04c420370f770cb67bb301$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.Processor$$ExternalSyntheticLambda2 -> androidx.work.impl.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.Processor androidx.work.impl.Processor$$InternalSyntheticLambda$2$8aa446955dd37d7290dc03ed5886c08971ceb3b003259b0ca7930eb1a3e8274b$0.f$0 -> e
    androidx.work.impl.model.WorkGenerationalId androidx.work.impl.Processor$$InternalSyntheticLambda$2$8aa446955dd37d7290dc03ed5886c08971ceb3b003259b0ca7930eb1a3e8274b$0.f$1 -> f
    boolean androidx.work.impl.Processor$$InternalSyntheticLambda$2$8aa446955dd37d7290dc03ed5886c08971ceb3b003259b0ca7930eb1a3e8274b$0.f$2 -> g
    1:1:void androidx.work.impl.Processor$$InternalSyntheticLambda$2$8aa446955dd37d7290dc03ed5886c08971ceb3b003259b0ca7930eb1a3e8274b$0.<init>(androidx.work.impl.Processor,androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/u;Lj0/n;Z)V"}
    1:1:void androidx.work.impl.Processor$$InternalSyntheticLambda$2$8aa446955dd37d7290dc03ed5886c08971ceb3b003259b0ca7930eb1a3e8274b$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.RescheduleMigration -> androidx.work.impl.v:
    android.content.Context mContext -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.Scheduler -> androidx.work.impl.w:
    void cancel(java.lang.String) -> a
    boolean hasLimitedSchedulingSlots() -> c
    void schedule(androidx.work.impl.model.WorkSpec[]) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/w;)V"}
androidx.work.impl.Schedulers -> androidx.work.impl.z:
    java.lang.String TAG -> a
    1:1:void $r8$lambda$PvobZ6lM-Np8ybM_6mQHUv3DnL4(java.util.concurrent.Executor,java.util.List,androidx.work.Configuration,androidx.work.impl.WorkDatabase,androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;Ljava/util/List;Landroidx/work/a;Landroidx/work/impl/WorkDatabase;Lj0/n;Z)V"}
    1:1:void $r8$lambda$dt3xCviGVAkq3RCy7yEy355t1j0(java.util.List,androidx.work.impl.model.WorkGenerationalId,androidx.work.Configuration,androidx.work.impl.WorkDatabase):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lj0/n;Landroidx/work/a;Landroidx/work/impl/WorkDatabase;)V"}
    1:1:androidx.work.impl.Scheduler createBestAvailableBackgroundScheduler(android.content.Context,androidx.work.impl.WorkDatabase,androidx.work.Configuration):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/impl/WorkDatabase;Landroidx/work/a;)Landroidx/work/impl/w;"}
    1:1:void lambda$registerRescheduling$0(java.util.List,androidx.work.impl.model.WorkGenerationalId,androidx.work.Configuration,androidx.work.impl.WorkDatabase):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lj0/n;Landroidx/work/a;Landroidx/work/impl/WorkDatabase;)V"}
    1:1:void lambda$registerRescheduling$1(java.util.concurrent.Executor,java.util.List,androidx.work.Configuration,androidx.work.impl.WorkDatabase,androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;Ljava/util/List;Landroidx/work/a;Landroidx/work/impl/WorkDatabase;Lj0/n;Z)V"}
    1:1:void markScheduled(androidx.work.impl.model.WorkSpecDao,androidx.work.Clock,java.util.List):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/x;Le0/b;Ljava/util/List;)V"}
    1:1:void registerRescheduling(java.util.List,androidx.work.impl.Processor,java.util.concurrent.Executor,androidx.work.impl.WorkDatabase,androidx.work.Configuration):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Landroidx/work/impl/u;Ljava/util/concurrent/Executor;Landroidx/work/impl/WorkDatabase;Landroidx/work/a;)V"}
    1:1:void schedule(androidx.work.Configuration,androidx.work.impl.WorkDatabase,java.util.List):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/a;Landroidx/work/impl/WorkDatabase;Ljava/util/List;)V"}
    1:1:androidx.work.impl.Scheduler tryCreateGcmBasedScheduler(android.content.Context,androidx.work.Clock):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Le0/b;)Landroidx/work/impl/w;"}
androidx.work.impl.Schedulers$$ExternalSyntheticLambda0 -> androidx.work.impl.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.Executor androidx.work.impl.Schedulers$$InternalSyntheticLambda$1$daca847f1f3ecd42125fe8deb6befc2e132e50af4ddaf23cfc6a9494df7b90e7$0.f$0 -> a
    java.util.List androidx.work.impl.Schedulers$$InternalSyntheticLambda$1$daca847f1f3ecd42125fe8deb6befc2e132e50af4ddaf23cfc6a9494df7b90e7$0.f$1 -> b
    androidx.work.Configuration androidx.work.impl.Schedulers$$InternalSyntheticLambda$1$daca847f1f3ecd42125fe8deb6befc2e132e50af4ddaf23cfc6a9494df7b90e7$0.f$2 -> c
    androidx.work.impl.WorkDatabase androidx.work.impl.Schedulers$$InternalSyntheticLambda$1$daca847f1f3ecd42125fe8deb6befc2e132e50af4ddaf23cfc6a9494df7b90e7$0.f$3 -> d
    1:1:void androidx.work.impl.Schedulers$$InternalSyntheticLambda$1$daca847f1f3ecd42125fe8deb6befc2e132e50af4ddaf23cfc6a9494df7b90e7$0.<init>(java.util.concurrent.Executor,java.util.List,androidx.work.Configuration,androidx.work.impl.WorkDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;Ljava/util/List;Landroidx/work/a;Landroidx/work/impl/WorkDatabase;)V"}
    1:1:void androidx.work.impl.Schedulers$$InternalSyntheticLambda$1$daca847f1f3ecd42125fe8deb6befc2e132e50af4ddaf23cfc6a9494df7b90e7$0.onExecuted(androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Z)V"}
androidx.work.impl.Schedulers$$ExternalSyntheticLambda1 -> androidx.work.impl.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List androidx.work.impl.Schedulers$$InternalSyntheticLambda$2$7bfa3ab799a4c29c90c867dac488dc61ff57225a508e20096a4b9d7cec31a064$0.f$0 -> e
    androidx.work.impl.model.WorkGenerationalId androidx.work.impl.Schedulers$$InternalSyntheticLambda$2$7bfa3ab799a4c29c90c867dac488dc61ff57225a508e20096a4b9d7cec31a064$0.f$1 -> f
    androidx.work.Configuration androidx.work.impl.Schedulers$$InternalSyntheticLambda$2$7bfa3ab799a4c29c90c867dac488dc61ff57225a508e20096a4b9d7cec31a064$0.f$2 -> g
    androidx.work.impl.WorkDatabase androidx.work.impl.Schedulers$$InternalSyntheticLambda$2$7bfa3ab799a4c29c90c867dac488dc61ff57225a508e20096a4b9d7cec31a064$0.f$3 -> h
    1:1:void androidx.work.impl.Schedulers$$InternalSyntheticLambda$2$7bfa3ab799a4c29c90c867dac488dc61ff57225a508e20096a4b9d7cec31a064$0.<init>(java.util.List,androidx.work.impl.model.WorkGenerationalId,androidx.work.Configuration,androidx.work.impl.WorkDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lj0/n;Landroidx/work/a;Landroidx/work/impl/WorkDatabase;)V"}
    1:1:void androidx.work.impl.Schedulers$$InternalSyntheticLambda$2$7bfa3ab799a4c29c90c867dac488dc61ff57225a508e20096a4b9d7cec31a064$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.StartStopToken -> androidx.work.impl.a0:
    androidx.work.impl.model.WorkGenerationalId id -> a
    1:1:void <init>(androidx.work.impl.model.WorkGenerationalId):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)V"}
    1:1:androidx.work.impl.model.WorkGenerationalId getId():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/n;"}
androidx.work.impl.StartStopTokens -> androidx.work.impl.b0:
    java.lang.Object lock -> a
    java.util.Map runs -> b
    1:1:boolean contains(androidx.work.impl.model.WorkGenerationalId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)Z"}
    1:1:androidx.work.impl.StartStopToken remove(androidx.work.impl.model.WorkGenerationalId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)Landroidx/work/impl/a0;"}
    1:1:java.util.List remove(java.lang.String):0:0 -> c
    1:1:androidx.work.impl.StartStopToken tokenFor(androidx.work.impl.model.WorkGenerationalId):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)Landroidx/work/impl/a0;"}
    1:1:androidx.work.impl.StartStopToken tokenFor(androidx.work.impl.model.WorkSpec):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Landroidx/work/impl/a0;"}
androidx.work.impl.WorkContinuationImpl -> androidx.work.impl.c0:
    androidx.work.impl.WorkManagerImpl mWorkManagerImpl -> a
    java.lang.String mName -> b
    androidx.work.ExistingWorkPolicy mExistingWorkPolicy -> c
    java.util.List mWork -> d
    java.util.List mIds -> e
    java.util.List mAllIds -> f
    java.util.List mParents -> g
    boolean mEnqueued -> h
    androidx.work.Operation mOperation -> i
    java.lang.String TAG -> j
    1:1:void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,androidx.work.ExistingWorkPolicy,java.util.List,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/r0;Ljava/lang/String;Le0/g;Ljava/util/List;Ljava/util/List;)V"}
    2:2:void <init>(androidx.work.impl.WorkManagerImpl,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/r0;Ljava/util/List;)V"}
    1:1:androidx.work.Operation enqueue():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/r;"}
    1:1:androidx.work.ExistingWorkPolicy getExistingWorkPolicy():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/g;"}
    1:1:java.util.List getIds():0:0 -> c
    1:1:java.lang.String getName():0:0 -> d
    1:1:java.util.List getParents():0:0 -> e
    1:1:java.util.List getWork():0:0 -> f
    1:1:androidx.work.impl.WorkManagerImpl getWorkManagerImpl():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/impl/r0;"}
    1:1:boolean hasCycles():0:0 -> h
    1:1:boolean hasCycles(androidx.work.impl.WorkContinuationImpl,java.util.Set):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/c0;Ljava/util/Set;)Z"}
    1:1:boolean isEnqueued():0:0 -> j
    1:1:void markEnqueued():0:0 -> k
    1:1:java.util.Set prerequisitesFor(androidx.work.impl.WorkContinuationImpl):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/c0;)Ljava/util/Set;"}
androidx.work.impl.WorkDatabase -> androidx.work.impl.WorkDatabase:
    androidx.work.impl.WorkDatabase$Companion Companion -> p
    androidx.work.impl.model.DependencyDao dependencyDao() -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/b;"}
    androidx.work.impl.model.PreferenceDao preferenceDao() -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/e;"}
    androidx.work.impl.model.SystemIdInfoDao systemIdInfoDao() -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/k;"}
    androidx.work.impl.model.WorkNameDao workNameDao() -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/p;"}
    androidx.work.impl.model.WorkProgressDao workProgressDao() -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/s;"}
    androidx.work.impl.model.WorkSpecDao workSpecDao() -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/x;"}
    androidx.work.impl.model.WorkTagDao workTagDao() -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/c0;"}
androidx.work.impl.WorkDatabase$Companion -> androidx.work.impl.WorkDatabase$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper $r8$lambda$ZkS5S0p_73DOI66Tm39UHOpqbt0(android.content.Context,androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lo/h$b;)Lo/h;"}
    1:1:androidx.work.impl.WorkDatabase create(android.content.Context,java.util.concurrent.Executor,androidx.work.Clock,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Le0/b;Z)Landroidx/work/impl/WorkDatabase;"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper create$lambda$0(android.content.Context,androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lo/h$b;)Lo/h;"}
androidx.work.impl.WorkDatabase$Companion$$ExternalSyntheticLambda0 -> androidx.work.impl.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.work.impl.WorkDatabase$Companion$$InternalSyntheticLambda$1$cc593127d1af8e908ddec17deb370faf483814cb1ed349be73be7aefa04e9e44$0.f$0 -> a
    1:1:void androidx.work.impl.WorkDatabase$Companion$$InternalSyntheticLambda$1$cc593127d1af8e908ddec17deb370faf483814cb1ed349be73be7aefa04e9e44$0.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper androidx.work.impl.WorkDatabase$Companion$$InternalSyntheticLambda$1$cc593127d1af8e908ddec17deb370faf483814cb1ed349be73be7aefa04e9e44$0.create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/h$b;)Lo/h;"}
androidx.work.impl.WorkDatabaseKt -> androidx.work.impl.e0:
    long PRUNE_THRESHOLD_MILLIS -> a
androidx.work.impl.WorkDatabasePathHelper -> androidx.work.impl.f0:
    androidx.work.impl.WorkDatabasePathHelper INSTANCE -> a
    1:1:java.io.File getDatabasePath(android.content.Context):0:0 -> a
    1:1:java.io.File getDefaultDatabasePath(android.content.Context):0:0 -> b
    1:1:java.io.File getNoBackupPath(android.content.Context):0:0 -> c
    1:1:void migrateDatabase(android.content.Context):0:0 -> d
    1:1:java.util.Map migrationPaths(android.content.Context):0:0 -> e
androidx.work.impl.WorkDatabasePathHelperKt -> androidx.work.impl.g0:
    java.lang.String TAG -> a
    java.lang.String[] DATABASE_EXTRA_FILES -> b
    1:1:java.lang.String[] access$getDATABASE_EXTRA_FILES$p():0:0 -> a
    1:1:java.lang.String access$getTAG$p():0:0 -> b
androidx.work.impl.WorkDatabase_AutoMigration_13_14_Impl -> androidx.work.impl.h0:
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.WorkDatabase_AutoMigration_14_15_Impl -> androidx.work.impl.i0:
    androidx.room.migration.AutoMigrationSpec callback -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.WorkDatabase_AutoMigration_16_17_Impl -> androidx.work.impl.j0:
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.WorkDatabase_AutoMigration_17_18_Impl -> androidx.work.impl.k0:
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.WorkDatabase_AutoMigration_18_19_Impl -> androidx.work.impl.l0:
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.WorkDatabase_AutoMigration_19_20_Impl -> androidx.work.impl.m0:
    androidx.room.migration.AutoMigrationSpec callback -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.WorkDatabase_Impl -> androidx.work.impl.WorkDatabase_Impl:
    androidx.work.impl.model.WorkSpecDao _workSpecDao -> q
    androidx.work.impl.model.DependencyDao _dependencyDao -> r
    androidx.work.impl.model.WorkTagDao _workTagDao -> s
    androidx.work.impl.model.SystemIdInfoDao _systemIdInfoDao -> t
    androidx.work.impl.model.WorkNameDao _workNameDao -> u
    androidx.work.impl.model.WorkProgressDao _workProgressDao -> v
    androidx.work.impl.model.PreferenceDao _preferenceDao -> w
    1:1:androidx.work.impl.model.DependencyDao dependencyDao():0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/b;"}
    1:1:androidx.work.impl.model.PreferenceDao preferenceDao():0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/e;"}
    1:1:androidx.work.impl.model.SystemIdInfoDao systemIdInfoDao():0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/k;"}
    1:1:androidx.work.impl.model.WorkNameDao workNameDao():0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/p;"}
    1:1:androidx.work.impl.model.WorkProgressDao workProgressDao():0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/s;"}
    1:1:androidx.work.impl.model.WorkSpecDao workSpecDao():0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/x;"}
    1:1:androidx.work.impl.model.WorkTagDao workTagDao():0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/c0;"}
    1:1:java.util.List access$000(androidx.work.impl.WorkDatabase_Impl):0:0 -> J
    1:1:java.util.List access$100(androidx.work.impl.WorkDatabase_Impl):0:0 -> K
    1:1:java.util.List access$1000(androidx.work.impl.WorkDatabase_Impl):0:0 -> L
    1:1:java.util.List access$200(androidx.work.impl.WorkDatabase_Impl):0:0 -> M
    1:1:java.util.List access$300(androidx.work.impl.WorkDatabase_Impl):0:0 -> N
    1:1:java.util.List access$400(androidx.work.impl.WorkDatabase_Impl):0:0 -> O
    1:1:java.util.List access$500(androidx.work.impl.WorkDatabase_Impl):0:0 -> P
    1:1:androidx.sqlite.db.SupportSQLiteDatabase access$602(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/WorkDatabase_Impl;Lo/g;)Lo/g;"}
    1:1:void access$700(androidx.work.impl.WorkDatabase_Impl,androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/WorkDatabase_Impl;Lo/g;)V"}
    1:1:java.util.List access$800(androidx.work.impl.WorkDatabase_Impl):0:0 -> S
    1:1:java.util.List access$900(androidx.work.impl.WorkDatabase_Impl):0:0 -> T
    1:1:androidx.room.InvalidationTracker createInvalidationTracker():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/m;"}
    1:1:androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/f;)Lo/h;"}
    1:1:java.util.List getAutoMigrations(java.util.Map):0:0 -> j
    1:1:java.util.Set getRequiredAutoMigrationSpecs():0:0 -> o
    1:1:java.util.Map getRequiredTypeConverters():0:0 -> p
androidx.work.impl.WorkDatabase_Impl$1 -> androidx.work.impl.WorkDatabase_Impl$a:
    androidx.work.impl.WorkDatabase_Impl this$0 -> b
    1:1:void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void onCreate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void onOpen(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ll/t$c;"}
androidx.work.impl.WorkLauncher -> androidx.work.impl.o0:
    void startWork(androidx.work.impl.StartStopToken,androidx.work.WorkerParameters$RuntimeExtras) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;Landroidx/work/WorkerParameters$a;)V"}
    void stopWorkWithReason(androidx.work.impl.StartStopToken,int) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;I)V"}
    void startWork(androidx.work.impl.StartStopToken) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;)V"}
    void stopWork(androidx.work.impl.StartStopToken,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;I)V"}
    void stopWork(androidx.work.impl.StartStopToken) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;)V"}
androidx.work.impl.WorkLauncher$-CC -> androidx.work.impl.n0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    3:10:void androidx.work.impl.WorkLauncher.startWork(androidx.work.impl.StartStopToken):0:0 -> a
    3:10:void $default$startWork(androidx.work.impl.WorkLauncher,androidx.work.impl.StartStopToken):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/o0;Landroidx/work/impl/a0;)V"}
    3:11:void androidx.work.impl.WorkLauncher.stopWork(androidx.work.impl.StartStopToken):0:0 -> b
    3:11:void $default$stopWork(androidx.work.impl.WorkLauncher,androidx.work.impl.StartStopToken):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/o0;Landroidx/work/impl/a0;)V"}
    3:9:void androidx.work.impl.WorkLauncher.stopWorkWithReason(androidx.work.impl.StartStopToken,int):0:0 -> c
    3:9:void $default$stopWorkWithReason(androidx.work.impl.WorkLauncher,androidx.work.impl.StartStopToken,int):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/o0;Landroidx/work/impl/a0;I)V"}
androidx.work.impl.WorkLauncherImpl -> androidx.work.impl.p0:
    androidx.work.impl.Processor processor -> a
    androidx.work.impl.utils.taskexecutor.TaskExecutor workTaskExecutor -> b
    1:1:void <init>(androidx.work.impl.Processor,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/u;Ll0/c;)V"}
    1:1:void startWork(androidx.work.impl.StartStopToken,androidx.work.WorkerParameters$RuntimeExtras):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;Landroidx/work/WorkerParameters$a;)V"}
    1:1:void stopWorkWithReason(androidx.work.impl.StartStopToken,int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;I)V"}
    1:1:void startWork(androidx.work.impl.StartStopToken):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;)V"}
    1:1:void stopWork(androidx.work.impl.StartStopToken,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;I)V"}
    1:1:void stopWork(androidx.work.impl.StartStopToken):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;)V"}
androidx.work.impl.WorkManagerImpl -> androidx.work.impl.r0:
    android.content.Context mContext -> a
    androidx.work.Configuration mConfiguration -> b
    androidx.work.impl.WorkDatabase mWorkDatabase -> c
    androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor -> d
    java.util.List mSchedulers -> e
    androidx.work.impl.Processor mProcessor -> f
    androidx.work.impl.utils.PreferenceUtils mPreferenceUtils -> g
    boolean mForceStopRunnableCompleted -> h
    android.content.BroadcastReceiver$PendingResult mRescheduleReceiverResult -> i
    androidx.work.impl.constraints.trackers.Trackers mTrackers -> j
    java.lang.String TAG -> k
    androidx.work.impl.WorkManagerImpl sDelegatedInstance -> l
    androidx.work.impl.WorkManagerImpl sDefaultInstance -> m
    java.lang.Object sLock -> n
    1:1:void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,java.util.List,androidx.work.impl.Processor,androidx.work.impl.constraints.trackers.Trackers):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;Ll0/c;Landroidx/work/impl/WorkDatabase;Ljava/util/List;Landroidx/work/impl/u;Li0/o;)V"}
    1:1:androidx.work.Operation cancelAllWorkByTag(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/r;"}
    1:1:androidx.work.Operation cancelWorkById(java.util.UUID):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;)Le0/r;"}
    1:1:androidx.work.Operation enqueue(java.util.List):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Le0/r;"}
    1:1:void initialize(android.content.Context,androidx.work.Configuration):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;)V"}
    1:1:android.content.Context getApplicationContext():0:0 -> g
    1:1:androidx.work.Configuration getConfiguration():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/a;"}
    1:1:androidx.work.impl.WorkManagerImpl getInstance():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/impl/r0;"}
    1:1:androidx.work.impl.WorkManagerImpl getInstance(android.content.Context):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/work/impl/r0;"}
    1:1:androidx.work.impl.utils.PreferenceUtils getPreferenceUtils():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/s;"}
    1:1:androidx.work.impl.Processor getProcessor():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/impl/u;"}
    1:1:java.util.List getSchedulers():0:0 -> m
    1:1:androidx.work.impl.constraints.trackers.Trackers getTrackers():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/o;"}
    1:1:androidx.work.impl.WorkDatabase getWorkDatabase():0:0 -> o
    1:1:androidx.work.impl.utils.taskexecutor.TaskExecutor getWorkTaskExecutor():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/c;"}
    1:1:void onForceStopRunnableCompleted():0:0 -> q
    1:1:void rescheduleEligibleWork():0:0 -> r
    1:1:void setReschedulePendingResult(android.content.BroadcastReceiver$PendingResult):0:0 -> s
    1:1:void stopForegroundWork(androidx.work.impl.model.WorkGenerationalId):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)V"}
androidx.work.impl.WorkManagerImpl$Api24Impl -> androidx.work.impl.r0$a:
    1:1:boolean isDeviceProtectedStorage(android.content.Context):0:0 -> a
androidx.work.impl.WorkManagerImpl$Api24Impl$$ExternalSyntheticApiModelOutline0 -> androidx.work.impl.q0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.work.impl.WorkManagerImpl$Api24Impl$$InternalSyntheticApiModelOutline$1$011b3fb5fc8df0adecf403986f23f97ed1b4a102a0a0c9bb86d02709e14981ec$0.m(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.WorkManagerImplExtKt -> androidx.work.impl.s0:
    1:1:java.util.List access$createSchedulers(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,androidx.work.impl.constraints.trackers.Trackers,androidx.work.impl.Processor):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;Ll0/c;Landroidx/work/impl/WorkDatabase;Li0/o;Landroidx/work/impl/u;)Ljava/util/List;"}
    1:1:java.util.List createSchedulers(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,androidx.work.impl.constraints.trackers.Trackers,androidx.work.impl.Processor):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;Ll0/c;Landroidx/work/impl/WorkDatabase;Li0/o;Landroidx/work/impl/u;)Ljava/util/List;"}
    1:1:androidx.work.impl.WorkManagerImpl createWorkManager(android.content.Context,androidx.work.Configuration):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;)Landroidx/work/impl/r0;"}
    1:1:androidx.work.impl.WorkManagerImpl createWorkManager(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,androidx.work.impl.constraints.trackers.Trackers,androidx.work.impl.Processor,kotlin.jvm.functions.Function6):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;Ll0/c;Landroidx/work/impl/WorkDatabase;Li0/o;Landroidx/work/impl/u;Lr1/t;)Landroidx/work/impl/r0;"}
    1:1:androidx.work.impl.WorkManagerImpl createWorkManager$default(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,androidx.work.impl.constraints.trackers.Trackers,androidx.work.impl.Processor,kotlin.jvm.functions.Function6,int,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;Ll0/c;Landroidx/work/impl/WorkDatabase;Li0/o;Landroidx/work/impl/u;Lr1/t;ILjava/lang/Object;)Landroidx/work/impl/r0;"}
androidx.work.impl.WorkManagerImplExtKt$WorkManagerImpl$1 -> androidx.work.impl.s0$a:
    androidx.work.impl.WorkManagerImplExtKt$WorkManagerImpl$1 INSTANCE -> n
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> g
    1:1:java.util.List invoke(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.WorkDatabase,androidx.work.impl.constraints.trackers.Trackers,androidx.work.impl.Processor):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;Ll0/c;Landroidx/work/impl/WorkDatabase;Li0/o;Landroidx/work/impl/u;)Ljava/util/List;"}
androidx.work.impl.WorkMigration9To10 -> androidx.work.impl.t0:
    android.content.Context context -> c
    1:1:void migrate(androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.work.impl.WorkerWrapper -> androidx.work.impl.v0:
    android.content.Context mAppContext -> e
    java.lang.String mWorkSpecId -> f
    androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras -> g
    androidx.work.impl.model.WorkSpec mWorkSpec -> h
    androidx.work.ListenableWorker mWorker -> i
    androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor -> j
    androidx.work.ListenableWorker$Result mResult -> k
    androidx.work.Configuration mConfiguration -> l
    androidx.work.Clock mClock -> m
    androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor -> n
    androidx.work.impl.WorkDatabase mWorkDatabase -> o
    androidx.work.impl.model.WorkSpecDao mWorkSpecDao -> p
    androidx.work.impl.model.DependencyDao mDependencyDao -> q
    java.util.List mTags -> r
    java.lang.String mWorkDescription -> s
    androidx.work.impl.utils.futures.SettableFuture mFuture -> t
    androidx.work.impl.utils.futures.SettableFuture mWorkerResultFuture -> u
    int mInterrupted -> v
    java.lang.String TAG -> w
    1:1:void $r8$lambda$kvXJJY1HDovvxFAySQ13T0sdA5Y(androidx.work.impl.WorkerWrapper,com.google.common.util.concurrent.ListenableFuture):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/v0;Lo0/a;)V"}
    1:1:java.lang.String createWorkDescription(java.util.List):0:0 -> b
    1:1:com.google.common.util.concurrent.ListenableFuture getFuture():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/a;"}
    1:1:androidx.work.impl.model.WorkGenerationalId getWorkGenerationalId():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/n;"}
    1:1:androidx.work.impl.model.WorkSpec getWorkSpec():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/w;"}
    1:1:void handleResult(androidx.work.ListenableWorker$Result):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/c$a;)V"}
    1:1:void interrupt(int):0:0 -> g
    1:1:void iterativelyFailWorkAndDependents(java.lang.String):0:0 -> h
    1:1:void lambda$runWorker$0(com.google.common.util.concurrent.ListenableFuture):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/a;)V"}
    1:1:void onWorkFinished():0:0 -> j
    1:1:void rescheduleAndResolve():0:0 -> k
    1:1:void resetPeriodicAndResolve():0:0 -> l
    1:1:void resolve(boolean):0:0 -> m
    1:1:void resolveIncorrectStatus():0:0 -> n
    1:1:void runWorker():0:0 -> o
    1:1:void setFailedAndResolve():0:0 -> p
    1:1:void setSucceededAndResolve():0:0 -> q
    1:1:boolean tryCheckForInterruptionAndResolve():0:0 -> r
    1:1:boolean trySetRunning():0:0 -> s
androidx.work.impl.WorkerWrapper$$ExternalSyntheticLambda0 -> androidx.work.impl.u0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.WorkerWrapper androidx.work.impl.WorkerWrapper$$InternalSyntheticLambda$2$3cde3d07cceec6e126d208b32ee28b40baeb2c71070ed30aa129d36388672cc8$0.f$0 -> e
    com.google.common.util.concurrent.ListenableFuture androidx.work.impl.WorkerWrapper$$InternalSyntheticLambda$2$3cde3d07cceec6e126d208b32ee28b40baeb2c71070ed30aa129d36388672cc8$0.f$1 -> f
    1:1:void androidx.work.impl.WorkerWrapper$$InternalSyntheticLambda$2$3cde3d07cceec6e126d208b32ee28b40baeb2c71070ed30aa129d36388672cc8$0.<init>(androidx.work.impl.WorkerWrapper,com.google.common.util.concurrent.ListenableFuture):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/v0;Lo0/a;)V"}
    1:1:void androidx.work.impl.WorkerWrapper$$InternalSyntheticLambda$2$3cde3d07cceec6e126d208b32ee28b40baeb2c71070ed30aa129d36388672cc8$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.WorkerWrapper$1 -> androidx.work.impl.v0$a:
    com.google.common.util.concurrent.ListenableFuture val$runExpedited -> e
    androidx.work.impl.WorkerWrapper this$0 -> f
    1:1:void <init>(androidx.work.impl.WorkerWrapper,com.google.common.util.concurrent.ListenableFuture):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/v0;Lo0/a;)V"}
androidx.work.impl.WorkerWrapper$2 -> androidx.work.impl.v0$b:
    java.lang.String val$workDescription -> e
    androidx.work.impl.WorkerWrapper this$0 -> f
androidx.work.impl.WorkerWrapper$Builder -> androidx.work.impl.v0$c:
    android.content.Context mAppContext -> a
    androidx.work.ListenableWorker mWorker -> b
    androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor -> c
    androidx.work.impl.utils.taskexecutor.TaskExecutor mWorkTaskExecutor -> d
    androidx.work.Configuration mConfiguration -> e
    androidx.work.impl.WorkDatabase mWorkDatabase -> f
    androidx.work.impl.model.WorkSpec mWorkSpec -> g
    java.util.List mTags -> h
    androidx.work.WorkerParameters$RuntimeExtras mRuntimeExtras -> i
    1:1:void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.foreground.ForegroundProcessor,androidx.work.impl.WorkDatabase,androidx.work.impl.model.WorkSpec,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;Ll0/c;Landroidx/work/impl/foreground/a;Landroidx/work/impl/WorkDatabase;Lj0/w;Ljava/util/List;)V"}
    1:1:java.util.List access$000(androidx.work.impl.WorkerWrapper$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/v0$c;)Ljava/util/List;"}
    1:1:androidx.work.impl.WorkerWrapper build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/impl/v0;"}
    1:1:androidx.work.impl.WorkerWrapper$Builder withRuntimeExtras(androidx.work.WorkerParameters$RuntimeExtras):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/WorkerParameters$a;)Landroidx/work/impl/v0$c;"}
androidx.work.impl.background.greedy.DelayedWorkTracker -> f0.a:
    androidx.work.impl.Scheduler mImmediateScheduler -> a
    androidx.work.RunnableScheduler mRunnableScheduler -> b
    androidx.work.Clock mClock -> c
    java.util.Map mRunnables -> d
    java.lang.String TAG -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.work.impl.Scheduler,androidx.work.RunnableScheduler,androidx.work.Clock):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/w;Le0/v;Le0/b;)V"}
    1:1:void schedule(androidx.work.impl.model.WorkSpec,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;J)V"}
    1:1:void unschedule(java.lang.String):0:0 -> b
androidx.work.impl.background.greedy.DelayedWorkTracker$1 -> f0.a$a:
    androidx.work.impl.model.WorkSpec val$workSpec -> e
    androidx.work.impl.background.greedy.DelayedWorkTracker this$0 -> f
    1:1:void <init>(androidx.work.impl.background.greedy.DelayedWorkTracker,androidx.work.impl.model.WorkSpec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;Lj0/w;)V"}
    1:1:void run():0:0 -> run
androidx.work.impl.background.greedy.GreedyScheduler -> f0.b:
    android.content.Context mContext -> a
    java.util.Map mConstrainedWorkSpecs -> b
    androidx.work.impl.background.greedy.DelayedWorkTracker mDelayedWorkTracker -> c
    boolean mRegisteredExecutionListener -> d
    java.lang.Object mLock -> e
    androidx.work.impl.StartStopTokens mStartStopTokens -> f
    androidx.work.impl.Processor mProcessor -> g
    androidx.work.impl.WorkLauncher mWorkLauncher -> h
    androidx.work.Configuration mConfiguration -> i
    java.util.Map mFirstRunAttempts -> j
    java.lang.Boolean mInDefaultProcess -> k
    androidx.work.impl.constraints.WorkConstraintsTracker mConstraintsTracker -> l
    androidx.work.impl.utils.taskexecutor.TaskExecutor mTaskExecutor -> m
    androidx.work.impl.background.greedy.TimeLimiter mTimeLimiter -> n
    java.lang.String TAG -> o
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,androidx.work.Configuration,androidx.work.impl.constraints.trackers.Trackers,androidx.work.impl.Processor,androidx.work.impl.WorkLauncher,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;Li0/o;Landroidx/work/impl/u;Landroidx/work/impl/o0;Ll0/c;)V"}
    1:1:void cancel(java.lang.String):0:0 -> a
    1:1:void onExecuted(androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Z)V"}
    1:1:boolean hasLimitedSchedulingSlots():0:0 -> c
    1:1:void onConstraintsStateChanged(androidx.work.impl.model.WorkSpec,androidx.work.impl.constraints.ConstraintsState):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;Lg0/b;)V"}
    1:1:void schedule(androidx.work.impl.model.WorkSpec[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/w;)V"}
    1:1:void checkDefaultProcess():0:0 -> f
    1:1:void registerExecutionListenerIfNeeded():0:0 -> g
    1:1:void removeConstraintTrackingFor(androidx.work.impl.model.WorkGenerationalId):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)V"}
    1:1:long throttleIfNeeded(androidx.work.impl.model.WorkSpec):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)J"}
androidx.work.impl.background.greedy.GreedyScheduler$1 -> f0.b$a:
androidx.work.impl.background.greedy.GreedyScheduler$AttemptData -> f0.b$b:
    int mRunAttemptCount -> a
    long mTimeStamp -> b
    1:1:void <init>(int,long):0:0 -> <init>
    2:2:void <init>(int,long,androidx.work.impl.background.greedy.GreedyScheduler$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJLf0/b$a;)V"}
androidx.work.impl.background.greedy.TimeLimiter -> f0.d:
    androidx.work.RunnableScheduler runnableScheduler -> a
    androidx.work.impl.WorkLauncher launcher -> b
    long timeoutMs -> c
    java.lang.Object lock -> d
    java.util.Map tracked -> e
    1:1:void <init>(androidx.work.RunnableScheduler,androidx.work.impl.WorkLauncher):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/v;Landroidx/work/impl/o0;)V"}
    2:2:void <init>(androidx.work.RunnableScheduler,androidx.work.impl.WorkLauncher,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/v;Landroidx/work/impl/o0;J)V"}
    3:3:void <init>(androidx.work.RunnableScheduler,androidx.work.impl.WorkLauncher,long,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/v;Landroidx/work/impl/o0;JILs1/g;)V"}
    1:1:void $r8$lambda$-vpfYFCUMjLBVsa47nEhUzlZ9xY(androidx.work.impl.background.greedy.TimeLimiter,androidx.work.impl.StartStopToken):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/d;Landroidx/work/impl/a0;)V"}
    1:1:void cancel(androidx.work.impl.StartStopToken):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;)V"}
    1:1:void track(androidx.work.impl.StartStopToken):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/a0;)V"}
    1:1:void track$lambda$0(androidx.work.impl.background.greedy.TimeLimiter,androidx.work.impl.StartStopToken):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/d;Landroidx/work/impl/a0;)V"}
androidx.work.impl.background.greedy.TimeLimiter$$ExternalSyntheticLambda0 -> f0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.background.greedy.TimeLimiter androidx.work.impl.background.greedy.TimeLimiter$$InternalSyntheticLambda$1$44a6598e17e61a5bcd8f90e80b449f0815e3b4e354187ea189a66b131b06a7d8$0.f$0 -> e
    androidx.work.impl.StartStopToken androidx.work.impl.background.greedy.TimeLimiter$$InternalSyntheticLambda$1$44a6598e17e61a5bcd8f90e80b449f0815e3b4e354187ea189a66b131b06a7d8$0.f$1 -> f
    1:1:void androidx.work.impl.background.greedy.TimeLimiter$$InternalSyntheticLambda$1$44a6598e17e61a5bcd8f90e80b449f0815e3b4e354187ea189a66b131b06a7d8$0.<init>(androidx.work.impl.background.greedy.TimeLimiter,androidx.work.impl.StartStopToken):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/d;Landroidx/work/impl/a0;)V"}
    1:1:void androidx.work.impl.background.greedy.TimeLimiter$$InternalSyntheticLambda$1$44a6598e17e61a5bcd8f90e80b449f0815e3b4e354187ea189a66b131b06a7d8$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemalarm.Alarms -> androidx.work.impl.background.systemalarm.a:
    java.lang.String TAG -> a
    1:1:void cancelAlarm(android.content.Context,androidx.work.impl.WorkDatabase,androidx.work.impl.model.WorkGenerationalId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/impl/WorkDatabase;Lj0/n;)V"}
    1:1:void cancelExactAlarm(android.content.Context,androidx.work.impl.model.WorkGenerationalId,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj0/n;I)V"}
    1:1:void setAlarm(android.content.Context,androidx.work.impl.WorkDatabase,androidx.work.impl.model.WorkGenerationalId,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/impl/WorkDatabase;Lj0/n;J)V"}
    1:1:void setExactAlarm(android.content.Context,androidx.work.impl.model.WorkGenerationalId,int,long):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj0/n;IJ)V"}
androidx.work.impl.background.systemalarm.Alarms$Api19Impl -> androidx.work.impl.background.systemalarm.a$a:
    1:1:void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent):0:0 -> a
androidx.work.impl.background.systemalarm.CommandHandler -> androidx.work.impl.background.systemalarm.b:
    android.content.Context mContext -> a
    java.util.Map mPendingDelayMet -> b
    java.lang.Object mLock -> c
    androidx.work.Clock mClock -> d
    androidx.work.impl.StartStopTokens mStartStopTokens -> e
    java.lang.String TAG -> f
    1:1:void <init>(android.content.Context,androidx.work.Clock,androidx.work.impl.StartStopTokens):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Le0/b;Landroidx/work/impl/b0;)V"}
    1:1:android.content.Intent createConstraintsChangedIntent(android.content.Context):0:0 -> a
    1:1:void onExecuted(androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Z)V"}
    1:1:android.content.Intent createDelayMetIntent(android.content.Context,androidx.work.impl.model.WorkGenerationalId):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj0/n;)Landroid/content/Intent;"}
    1:1:android.content.Intent createExecutionCompletedIntent(android.content.Context,androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj0/n;Z)Landroid/content/Intent;"}
    1:1:android.content.Intent createRescheduleIntent(android.content.Context):0:0 -> e
    1:1:android.content.Intent createScheduleWorkIntent(android.content.Context,androidx.work.impl.model.WorkGenerationalId):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj0/n;)Landroid/content/Intent;"}
    1:1:android.content.Intent createStopWorkIntent(android.content.Context,androidx.work.impl.model.WorkGenerationalId):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj0/n;)Landroid/content/Intent;"}
    1:1:android.content.Intent createStopWorkIntent(android.content.Context,java.lang.String):0:0 -> h
    1:1:void handleConstraintsChanged(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;ILandroidx/work/impl/background/systemalarm/g;)V"}
    1:1:void handleDelayMet(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;ILandroidx/work/impl/background/systemalarm/g;)V"}
    1:1:void handleExecutionCompleted(android.content.Intent,int):0:0 -> k
    1:1:void handleReschedule(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;ILandroidx/work/impl/background/systemalarm/g;)V"}
    1:1:void handleScheduleWorkIntent(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;ILandroidx/work/impl/background/systemalarm/g;)V"}
    1:1:void handleStopWork(android.content.Intent,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;Landroidx/work/impl/background/systemalarm/g;)V"}
    1:1:boolean hasKeys(android.os.Bundle,java.lang.String[]):0:0 -> o
    1:1:boolean hasPendingCommands():0:0 -> p
    1:1:void onHandleIntent(android.content.Intent,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;ILandroidx/work/impl/background/systemalarm/g;)V"}
    1:1:androidx.work.impl.model.WorkGenerationalId readWorkGenerationalId(android.content.Intent):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;)Lj0/n;"}
    1:1:android.content.Intent writeWorkGenerationalId(android.content.Intent,androidx.work.impl.model.WorkGenerationalId):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;Lj0/n;)Landroid/content/Intent;"}
androidx.work.impl.background.systemalarm.ConstraintProxy -> androidx.work.impl.background.systemalarm.ConstraintProxy:
    java.lang.String TAG -> a
    1:1:void updateAll(android.content.Context,java.util.List):0:0 -> a
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver -> androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver:
    java.lang.String TAG -> a
    1:1:android.content.Intent newConstraintProxyUpdateIntent(android.content.Context,boolean,boolean,boolean,boolean):0:0 -> a
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver$1 -> androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver$a:
    android.content.Intent val$intent -> e
    android.content.Context val$context -> f
    android.content.BroadcastReceiver$PendingResult val$pendingResult -> g
    androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver this$0 -> h
androidx.work.impl.background.systemalarm.ConstraintsCommandHandler -> androidx.work.impl.background.systemalarm.c:
    android.content.Context mContext -> a
    androidx.work.Clock mClock -> b
    int mStartId -> c
    androidx.work.impl.background.systemalarm.SystemAlarmDispatcher mDispatcher -> d
    androidx.work.impl.constraints.WorkConstraintsTracker mWorkConstraintsTracker -> e
    java.lang.String TAG -> f
    1:1:void <init>(android.content.Context,androidx.work.Clock,int,androidx.work.impl.background.systemalarm.SystemAlarmDispatcher):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Le0/b;ILandroidx/work/impl/background/systemalarm/g;)V"}
    1:1:void handleConstraintsChanged():0:0 -> a
androidx.work.impl.background.systemalarm.DelayMetCommandHandler -> androidx.work.impl.background.systemalarm.f:
    android.content.Context mContext -> a
    int mStartId -> b
    androidx.work.impl.model.WorkGenerationalId mWorkGenerationalId -> c
    androidx.work.impl.background.systemalarm.SystemAlarmDispatcher mDispatcher -> d
    androidx.work.impl.constraints.WorkConstraintsTracker mWorkConstraintsTracker -> e
    java.lang.Object mLock -> f
    int mCurrentState -> g
    java.util.concurrent.Executor mSerialExecutor -> h
    java.util.concurrent.Executor mMainThreadExecutor -> i
    android.os.PowerManager$WakeLock mWakeLock -> j
    boolean mHasConstraints -> k
    androidx.work.impl.StartStopToken mToken -> l
    kotlinx.coroutines.CoroutineDispatcher mCoroutineDispatcher -> m
    kotlinx.coroutines.Job mJob -> n
    java.lang.String TAG -> o
    1:1:void onTimeLimitExceeded(androidx.work.impl.model.WorkGenerationalId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)V"}
    1:1:void $r8$lambda$eO2qKQGv6m2bOk3OWPYOjoDKq0o(androidx.work.impl.background.systemalarm.DelayMetCommandHandler):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/background/systemalarm/f;)V"}
    1:1:void $r8$lambda$zaVpSTkR_s413bgOQo09yONkKkY(androidx.work.impl.background.systemalarm.DelayMetCommandHandler):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/background/systemalarm/f;)V"}
    1:1:void onConstraintsStateChanged(androidx.work.impl.model.WorkSpec,androidx.work.impl.constraints.ConstraintsState):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;Lg0/b;)V"}
    1:1:void cleanUp():0:0 -> e
    1:1:void handleProcessWork():0:0 -> f
    1:1:void onExecuted(boolean):0:0 -> g
    1:1:void startWork():0:0 -> h
    1:1:void stopWork():0:0 -> i
androidx.work.impl.background.systemalarm.DelayMetCommandHandler$$ExternalSyntheticLambda0 -> androidx.work.impl.background.systemalarm.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.background.systemalarm.DelayMetCommandHandler androidx.work.impl.background.systemalarm.DelayMetCommandHandler$$InternalSyntheticLambda$1$c7e2d2e648586bd62375f3a1df5e959c0e8e301efcb9e0b95e3b234b51109bbf$0.f$0 -> e
    1:1:void androidx.work.impl.background.systemalarm.DelayMetCommandHandler$$InternalSyntheticLambda$1$c7e2d2e648586bd62375f3a1df5e959c0e8e301efcb9e0b95e3b234b51109bbf$0.<init>(androidx.work.impl.background.systemalarm.DelayMetCommandHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/background/systemalarm/f;)V"}
    1:1:void androidx.work.impl.background.systemalarm.DelayMetCommandHandler$$InternalSyntheticLambda$1$c7e2d2e648586bd62375f3a1df5e959c0e8e301efcb9e0b95e3b234b51109bbf$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemalarm.DelayMetCommandHandler$$ExternalSyntheticLambda1 -> androidx.work.impl.background.systemalarm.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.background.systemalarm.DelayMetCommandHandler androidx.work.impl.background.systemalarm.DelayMetCommandHandler$$InternalSyntheticLambda$1$c7e2d2e648586bd62375f3a1df5e959c0e8e301efcb9e0b95e3b234b51109bbf$1.f$0 -> e
    1:1:void androidx.work.impl.background.systemalarm.DelayMetCommandHandler$$InternalSyntheticLambda$1$c7e2d2e648586bd62375f3a1df5e959c0e8e301efcb9e0b95e3b234b51109bbf$1.<init>(androidx.work.impl.background.systemalarm.DelayMetCommandHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/background/systemalarm/f;)V"}
    1:1:void androidx.work.impl.background.systemalarm.DelayMetCommandHandler$$InternalSyntheticLambda$1$c7e2d2e648586bd62375f3a1df5e959c0e8e301efcb9e0b95e3b234b51109bbf$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemalarm.RescheduleReceiver -> androidx.work.impl.background.systemalarm.RescheduleReceiver:
    java.lang.String TAG -> a
androidx.work.impl.background.systemalarm.SystemAlarmDispatcher -> androidx.work.impl.background.systemalarm.g:
    android.content.Context mContext -> a
    androidx.work.impl.utils.taskexecutor.TaskExecutor mTaskExecutor -> b
    androidx.work.impl.utils.WorkTimer mWorkTimer -> c
    androidx.work.impl.Processor mProcessor -> d
    androidx.work.impl.WorkManagerImpl mWorkManager -> e
    androidx.work.impl.background.systemalarm.CommandHandler mCommandHandler -> f
    java.util.List mIntents -> g
    android.content.Intent mCurrentIntent -> h
    androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$CommandsCompletedListener mCompletedListener -> i
    androidx.work.impl.StartStopTokens mStartStopTokens -> j
    androidx.work.impl.WorkLauncher mWorkLauncher -> k
    java.lang.String TAG -> l
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,androidx.work.impl.Processor,androidx.work.impl.WorkManagerImpl,androidx.work.impl.WorkLauncher):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/impl/u;Landroidx/work/impl/r0;Landroidx/work/impl/o0;)V"}
    1:1:boolean add(android.content.Intent,int):0:0 -> a
    1:1:void onExecuted(androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Z)V"}
    1:1:void assertMainThread():0:0 -> c
    1:1:void dequeueAndCheckForCompletion():0:0 -> d
    1:1:androidx.work.impl.Processor getProcessor():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/impl/u;"}
    1:1:androidx.work.impl.utils.taskexecutor.TaskExecutor getTaskExecutor():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/c;"}
    1:1:androidx.work.impl.WorkManagerImpl getWorkManager():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/impl/r0;"}
    1:1:androidx.work.impl.utils.WorkTimer getWorkTimer():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/e0;"}
    1:1:androidx.work.impl.WorkLauncher getWorkerLauncher():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/impl/o0;"}
    1:1:boolean hasIntentWithAction(java.lang.String):0:0 -> j
    1:1:void onDestroy():0:0 -> k
    1:1:void processCommand():0:0 -> l
    1:1:void setCompletedListener(androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$CommandsCompletedListener):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/background/systemalarm/g$c;)V"}
androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$1 -> androidx.work.impl.background.systemalarm.g$a:
    androidx.work.impl.background.systemalarm.SystemAlarmDispatcher this$0 -> e
androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$AddRunnable -> androidx.work.impl.background.systemalarm.g$b:
    androidx.work.impl.background.systemalarm.SystemAlarmDispatcher mDispatcher -> e
    android.content.Intent mIntent -> f
    int mStartId -> g
androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$CommandsCompletedListener -> androidx.work.impl.background.systemalarm.g$c:
    void onAllCommandsCompleted() -> c
androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$DequeueAndCheckForCompletion -> androidx.work.impl.background.systemalarm.g$d:
    androidx.work.impl.background.systemalarm.SystemAlarmDispatcher mDispatcher -> e
androidx.work.impl.background.systemalarm.SystemAlarmScheduler -> androidx.work.impl.background.systemalarm.h:
    android.content.Context mContext -> a
    java.lang.String TAG -> b
    1:1:void cancel(java.lang.String):0:0 -> a
    1:1:void scheduleWorkSpec(androidx.work.impl.model.WorkSpec):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)V"}
    1:1:boolean hasLimitedSchedulingSlots():0:0 -> c
    1:1:void schedule(androidx.work.impl.model.WorkSpec[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/w;)V"}
androidx.work.impl.background.systemalarm.SystemAlarmService -> androidx.work.impl.background.systemalarm.SystemAlarmService:
    androidx.work.impl.background.systemalarm.SystemAlarmDispatcher mDispatcher -> b
    boolean mIsShutdown -> c
    java.lang.String TAG -> d
    1:1:void onAllCommandsCompleted():0:0 -> c
    1:1:void initializeDispatcher():0:0 -> f
androidx.work.impl.background.systemjob.SystemJobInfoConverter -> androidx.work.impl.background.systemjob.l:
    android.content.ComponentName mWorkServiceComponent -> a
    androidx.work.Clock mClock -> b
    java.lang.String TAG -> c
    1:1:void <init>(android.content.Context,androidx.work.Clock):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Le0/b;)V"}
    1:1:android.app.job.JobInfo convert(androidx.work.impl.model.WorkSpec,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;I)Landroid/app/job/JobInfo;"}
    1:1:android.app.job.JobInfo$TriggerContentUri convertContentUriTrigger(androidx.work.Constraints$ContentUriTrigger):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/d$c;)Landroid/app/job/JobInfo$TriggerContentUri;"}
    1:1:int convertNetworkType(androidx.work.NetworkType):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/o;)I"}
    1:1:void setRequiredNetwork(android.app.job.JobInfo$Builder,androidx.work.NetworkType):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/job/JobInfo$Builder;Le0/o;)V"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline0 -> androidx.work.impl.background.systemjob.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$1$aac06cf5d07a8ca1f4e256404bbd2673d9c9016de407d915c908678eadbaded7$0.m(android.os.PersistableBundle,java.lang.String,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline1 -> androidx.work.impl.background.systemjob.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.job.JobInfo$Builder androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$1$aac06cf5d07a8ca1f4e256404bbd2673d9c9016de407d915c908678eadbaded7$1.m(android.app.job.JobInfo$Builder,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline10 -> androidx.work.impl.background.systemjob.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$7$019a8051d93ac3d1c1997f51c5316a82da5bae524b24d150c85a1289cf2e1722$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline2 -> androidx.work.impl.background.systemjob.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.job.JobInfo$Builder androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$1$aac06cf5d07a8ca1f4e256404bbd2673d9c9016de407d915c908678eadbaded7$2.m(android.app.job.JobInfo$Builder,android.app.job.JobInfo$TriggerContentUri):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline3 -> androidx.work.impl.background.systemjob.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.job.JobInfo$Builder androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$1$aac06cf5d07a8ca1f4e256404bbd2673d9c9016de407d915c908678eadbaded7$3.m(android.app.job.JobInfo$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline4 -> androidx.work.impl.background.systemjob.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.job.JobInfo$Builder androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$1$aac06cf5d07a8ca1f4e256404bbd2673d9c9016de407d915c908678eadbaded7$4.m(android.app.job.JobInfo$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline5 -> androidx.work.impl.background.systemjob.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.job.JobInfo$Builder androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$1$aac06cf5d07a8ca1f4e256404bbd2673d9c9016de407d915c908678eadbaded7$5.m(android.app.job.JobInfo$Builder,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline6 -> androidx.work.impl.background.systemjob.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.job.JobInfo$Builder androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$1$aac06cf5d07a8ca1f4e256404bbd2673d9c9016de407d915c908678eadbaded7$6.m(android.app.job.JobInfo$Builder,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline7 -> androidx.work.impl.background.systemjob.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.job.JobInfo$Builder androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$1$aac06cf5d07a8ca1f4e256404bbd2673d9c9016de407d915c908678eadbaded7$7.m(android.app.job.JobInfo$Builder,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline8 -> androidx.work.impl.background.systemjob.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.job.JobInfo$Builder androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$2$0ad0383d98e514700545b9694b88b746efe3c39f79cd6eb9761f90255c2a6bf6$0.m(android.app.job.JobInfo$Builder,android.net.NetworkRequest):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$$ExternalSyntheticApiModelOutline9 -> androidx.work.impl.background.systemjob.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.job.JobInfo$TriggerContentUri androidx.work.impl.background.systemjob.SystemJobInfoConverter$$InternalSyntheticApiModelOutline$7$019a8051d93ac3d1c1997f51c5316a82da5bae524b24d150c85a1289cf2e1722$0.m(android.net.Uri,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.background.systemjob.SystemJobInfoConverter$1 -> androidx.work.impl.background.systemjob.l$a:
    int[] $SwitchMap$androidx$work$NetworkType -> a
androidx.work.impl.background.systemjob.SystemJobScheduler -> androidx.work.impl.background.systemjob.m:
    android.content.Context mContext -> a
    android.app.job.JobScheduler mJobScheduler -> b
    androidx.work.impl.background.systemjob.SystemJobInfoConverter mSystemJobInfoConverter -> c
    androidx.work.impl.WorkDatabase mWorkDatabase -> d
    androidx.work.Configuration mConfiguration -> e
    java.lang.String TAG -> f
    1:1:void <init>(android.content.Context,androidx.work.impl.WorkDatabase,androidx.work.Configuration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/impl/WorkDatabase;Landroidx/work/a;)V"}
    2:2:void <init>(android.content.Context,androidx.work.impl.WorkDatabase,androidx.work.Configuration,android.app.job.JobScheduler,androidx.work.impl.background.systemjob.SystemJobInfoConverter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/impl/WorkDatabase;Landroidx/work/a;Landroid/app/job/JobScheduler;Landroidx/work/impl/background/systemjob/l;)V"}
    1:1:void cancel(java.lang.String):0:0 -> a
    1:1:void cancelAll(android.content.Context):0:0 -> b
    1:1:boolean hasLimitedSchedulingSlots():0:0 -> c
    1:1:void cancelJobById(android.app.job.JobScheduler,int):0:0 -> d
    1:1:void schedule(androidx.work.impl.model.WorkSpec[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/w;)V"}
    1:1:java.util.List getPendingJobIds(android.content.Context,android.app.job.JobScheduler,java.lang.String):0:0 -> f
    1:1:java.util.List getPendingJobs(android.content.Context,android.app.job.JobScheduler):0:0 -> g
    1:1:androidx.work.impl.model.WorkGenerationalId getWorkGenerationalIdFromJobInfo(android.app.job.JobInfo):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/job/JobInfo;)Lj0/n;"}
    1:1:boolean reconcileJobs(android.content.Context,androidx.work.impl.WorkDatabase):0:0 -> i
    1:1:void scheduleInternal(androidx.work.impl.model.WorkSpec,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;I)V"}
androidx.work.impl.background.systemjob.SystemJobService -> androidx.work.impl.background.systemjob.SystemJobService:
    androidx.work.impl.WorkManagerImpl mWorkManagerImpl -> a
    java.util.Map mJobParameters -> b
    androidx.work.impl.StartStopTokens mStartStopTokens -> c
    androidx.work.impl.WorkLauncher mWorkLauncher -> d
    java.lang.String TAG -> e
    1:1:int stopReason(int):0:0 -> a
    1:1:void onExecuted(androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Z)V"}
    1:1:androidx.work.impl.model.WorkGenerationalId workGenerationalIdFromJobParameters(android.app.job.JobParameters):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/job/JobParameters;)Lj0/n;"}
androidx.work.impl.background.systemjob.SystemJobService$Api24Impl -> androidx.work.impl.background.systemjob.SystemJobService$a:
    1:1:java.lang.String[] getTriggeredContentAuthorities(android.app.job.JobParameters):0:0 -> a
    1:1:android.net.Uri[] getTriggeredContentUris(android.app.job.JobParameters):0:0 -> b
androidx.work.impl.background.systemjob.SystemJobService$Api28Impl -> androidx.work.impl.background.systemjob.SystemJobService$b:
    1:1:android.net.Network getNetwork(android.app.job.JobParameters):0:0 -> a
androidx.work.impl.background.systemjob.SystemJobService$Api31Impl -> androidx.work.impl.background.systemjob.SystemJobService$c:
    1:1:int getStopReason(android.app.job.JobParameters):0:0 -> a
androidx.work.impl.constraints.ConstraintListener -> g0.a:
    void onConstraintChanged(java.lang.Object) -> a
androidx.work.impl.constraints.ConstraintsState -> g0.b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.work.impl.constraints.ConstraintsState$ConstraintsMet -> g0.b$a:
    androidx.work.impl.constraints.ConstraintsState$ConstraintsMet INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
androidx.work.impl.constraints.ConstraintsState$ConstraintsNotMet -> g0.b$b:
    int reason -> a
    1:1:void <init>(int):0:0 -> <init>
    1:1:int getReason():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.impl.constraints.NetworkState -> g0.c:
    boolean isConnected -> a
    boolean isValidated -> b
    boolean isMetered -> c
    boolean isNotRoaming -> d
    1:1:void <init>(boolean,boolean,boolean,boolean):0:0 -> <init>
    1:1:boolean isConnected():0:0 -> a
    1:1:boolean isMetered():0:0 -> b
    1:1:boolean isNotRoaming():0:0 -> c
    1:1:boolean isValidated():0:0 -> d
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.impl.constraints.OnConstraintsStateChangedListener -> g0.d:
    void onConstraintsStateChanged(androidx.work.impl.model.WorkSpec,androidx.work.impl.constraints.ConstraintsState) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;Lg0/b;)V"}
androidx.work.impl.constraints.WorkConstraintsTracker -> g0.e:
    java.util.List controllers -> a
    1:1:void <init>(androidx.work.impl.constraints.trackers.Trackers):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/o;)V"}
    2:2:void <init>(java.util.List):0:0 -> <init>
    1:1:boolean areAllConstraintsMet(androidx.work.impl.model.WorkSpec):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Z"}
    1:1:kotlinx.coroutines.flow.Flow track(androidx.work.impl.model.WorkSpec):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Lc2/d;"}
androidx.work.impl.constraints.WorkConstraintsTracker$areAllConstraintsMet$1 -> g0.e$a:
    androidx.work.impl.constraints.WorkConstraintsTracker$areAllConstraintsMet$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.CharSequence invoke(androidx.work.impl.constraints.controllers.ConstraintController):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/c;)Ljava/lang/CharSequence;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
androidx.work.impl.constraints.WorkConstraintsTracker$track$$inlined$combine$1 -> g0.e$b:
    kotlinx.coroutines.flow.Flow[] $flowArray$inlined -> a
    1:1:void <init>(kotlinx.coroutines.flow.Flow[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lc2/d;)V"}
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/d;)Ljava/lang/Object;"}
androidx.work.impl.constraints.WorkConstraintsTracker$track$$inlined$combine$1$2 -> g0.e$b$a:
    kotlinx.coroutines.flow.Flow[] $flowArray -> f
    1:1:void <init>(kotlinx.coroutines.flow.Flow[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lc2/d;)V"}
    1:1:java.lang.Object[] invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> b
androidx.work.impl.constraints.WorkConstraintsTracker$track$$inlined$combine$1$3 -> g0.e$b$b:
    int label -> i
    java.lang.Object L$0 -> j
    java.lang.Object L$1 -> k
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)V"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> i
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Object[],kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;[Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
androidx.work.impl.constraints.WorkConstraintsTrackerKt -> g0.f:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String access$getTAG$p():0:0 -> a
    1:1:kotlinx.coroutines.Job listen(androidx.work.impl.constraints.WorkConstraintsTracker,androidx.work.impl.model.WorkSpec,kotlinx.coroutines.CoroutineDispatcher,androidx.work.impl.constraints.OnConstraintsStateChangedListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/e;Lj0/w;Lz1/a0;Lg0/d;)Lz1/e1;"}
androidx.work.impl.constraints.WorkConstraintsTrackerKt$listen$1 -> g0.f$a:
    int label -> i
    androidx.work.impl.constraints.WorkConstraintsTracker $this_listen -> j
    androidx.work.impl.model.WorkSpec $spec -> k
    androidx.work.impl.constraints.OnConstraintsStateChangedListener $listener -> l
    1:1:void <init>(androidx.work.impl.constraints.WorkConstraintsTracker,androidx.work.impl.model.WorkSpec,androidx.work.impl.constraints.OnConstraintsStateChangedListener,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/e;Lj0/w;Lg0/d;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/d;)Ljava/lang/Object;"}
androidx.work.impl.constraints.WorkConstraintsTrackerKt$listen$1$1 -> g0.f$a$a:
    androidx.work.impl.constraints.OnConstraintsStateChangedListener $listener -> a
    androidx.work.impl.model.WorkSpec $spec -> b
    1:1:void <init>(androidx.work.impl.constraints.OnConstraintsStateChangedListener,androidx.work.impl.model.WorkSpec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/d;Lj0/w;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object emit(androidx.work.impl.constraints.ConstraintsState,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/b;Li1/d;)Ljava/lang/Object;"}
androidx.work.impl.constraints.controllers.BatteryChargingController -> h0.a:
    int reason -> b
    1:1:void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/h;)V"}
    1:1:int getReason():0:0 -> b
    1:1:boolean hasConstraint(androidx.work.impl.model.WorkSpec):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Z"}
    1:1:boolean isConstrained(java.lang.Object):0:0 -> e
    1:1:boolean isConstrained(boolean):0:0 -> g
androidx.work.impl.constraints.controllers.BatteryNotLowController -> h0.b:
    int reason -> b
    1:1:void <init>(androidx.work.impl.constraints.trackers.BatteryNotLowTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/c;)V"}
    1:1:int getReason():0:0 -> b
    1:1:boolean hasConstraint(androidx.work.impl.model.WorkSpec):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Z"}
    1:1:boolean isConstrained(java.lang.Object):0:0 -> e
    1:1:boolean isConstrained(boolean):0:0 -> g
androidx.work.impl.constraints.controllers.ConstraintController -> h0.c:
    androidx.work.impl.constraints.trackers.ConstraintTracker tracker -> a
    1:1:void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/h;)V"}
    1:1:androidx.work.impl.constraints.trackers.ConstraintTracker access$getTracker$p(androidx.work.impl.constraints.controllers.ConstraintController):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/c;)Li0/h;"}
    int getReason() -> b
    boolean hasConstraint(androidx.work.impl.model.WorkSpec) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Z"}
    1:1:boolean isConstrained(androidx.work.impl.model.WorkSpec):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Z"}
    boolean isConstrained(java.lang.Object) -> e
    1:1:kotlinx.coroutines.flow.Flow track():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc2/d;"}
androidx.work.impl.constraints.controllers.ConstraintController$track$1 -> h0.c$a:
    int label -> i
    java.lang.Object L$0 -> j
    androidx.work.impl.constraints.controllers.ConstraintController this$0 -> k
    1:1:void <init>(androidx.work.impl.constraints.controllers.ConstraintController,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/c;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;Li1/d;)Ljava/lang/Object;"}
androidx.work.impl.constraints.controllers.ConstraintController$track$1$1 -> h0.c$a$a:
    androidx.work.impl.constraints.controllers.ConstraintController this$0 -> f
    androidx.work.impl.constraints.controllers.ConstraintController$track$1$listener$1 $listener -> g
    1:1:void <init>(androidx.work.impl.constraints.controllers.ConstraintController,androidx.work.impl.constraints.controllers.ConstraintController$track$1$listener$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/c;Lh0/c$a$b;)V"}
    1:1:void invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> b
androidx.work.impl.constraints.controllers.ConstraintController$track$1$listener$1 -> h0.c$a$b:
    androidx.work.impl.constraints.controllers.ConstraintController this$0 -> a
    kotlinx.coroutines.channels.ProducerScope $$this$callbackFlow -> b
    1:1:void <init>(androidx.work.impl.constraints.controllers.ConstraintController,kotlinx.coroutines.channels.ProducerScope):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/c;Lb2/r;)V"}
    1:1:void onConstraintChanged(java.lang.Object):0:0 -> a
androidx.work.impl.constraints.controllers.NetworkConnectedController -> h0.d:
    int reason -> b
    1:1:void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/h;)V"}
    1:1:int getReason():0:0 -> b
    1:1:boolean hasConstraint(androidx.work.impl.model.WorkSpec):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Z"}
    1:1:boolean isConstrained(java.lang.Object):0:0 -> e
    1:1:boolean isConstrained(androidx.work.impl.constraints.NetworkState):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c;)Z"}
androidx.work.impl.constraints.controllers.NetworkMeteredController -> h0.e:
    int reason -> b
    androidx.work.impl.constraints.controllers.NetworkMeteredController$Companion Companion -> c
    java.lang.String TAG -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/h;)V"}
    1:1:int getReason():0:0 -> b
    1:1:boolean hasConstraint(androidx.work.impl.model.WorkSpec):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Z"}
    1:1:boolean isConstrained(java.lang.Object):0:0 -> e
    1:1:boolean isConstrained(androidx.work.impl.constraints.NetworkState):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c;)Z"}
androidx.work.impl.constraints.controllers.NetworkMeteredController$Companion -> h0.e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.work.impl.constraints.controllers.NetworkNotRoamingController -> h0.f:
    int reason -> b
    androidx.work.impl.constraints.controllers.NetworkNotRoamingController$Companion Companion -> c
    java.lang.String TAG -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/h;)V"}
    1:1:int getReason():0:0 -> b
    1:1:boolean hasConstraint(androidx.work.impl.model.WorkSpec):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Z"}
    1:1:boolean isConstrained(java.lang.Object):0:0 -> e
    1:1:boolean isConstrained(androidx.work.impl.constraints.NetworkState):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c;)Z"}
androidx.work.impl.constraints.controllers.NetworkNotRoamingController$Companion -> h0.f$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
androidx.work.impl.constraints.controllers.NetworkUnmeteredController -> h0.g:
    int reason -> b
    1:1:void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/h;)V"}
    1:1:int getReason():0:0 -> b
    1:1:boolean hasConstraint(androidx.work.impl.model.WorkSpec):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Z"}
    1:1:boolean isConstrained(java.lang.Object):0:0 -> e
    1:1:boolean isConstrained(androidx.work.impl.constraints.NetworkState):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c;)Z"}
androidx.work.impl.constraints.controllers.StorageNotLowController -> h0.h:
    int reason -> b
    1:1:void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/h;)V"}
    1:1:int getReason():0:0 -> b
    1:1:boolean hasConstraint(androidx.work.impl.model.WorkSpec):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Z"}
    1:1:boolean isConstrained(java.lang.Object):0:0 -> e
    1:1:boolean isConstrained(boolean):0:0 -> g
androidx.work.impl.constraints.trackers.BatteryChargingTracker -> i0.a:
    1:1:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/c;)V"}
    1:1:java.lang.Object readSystemState():0:0 -> e
    1:1:android.content.IntentFilter getIntentFilter():0:0 -> j
    1:1:void onBroadcastReceive(android.content.Intent):0:0 -> k
    1:1:boolean isBatteryChangedIntentCharging(android.content.Intent):0:0 -> l
    1:1:java.lang.Boolean readSystemState():0:0 -> m
androidx.work.impl.constraints.trackers.BatteryChargingTrackerKt -> i0.b:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String access$getTAG$p():0:0 -> a
androidx.work.impl.constraints.trackers.BatteryNotLowTracker -> i0.c:
    1:1:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/c;)V"}
    1:1:java.lang.Object readSystemState():0:0 -> e
    1:1:android.content.IntentFilter getIntentFilter():0:0 -> j
    1:1:void onBroadcastReceive(android.content.Intent):0:0 -> k
    1:1:java.lang.Boolean readSystemState():0:0 -> l
androidx.work.impl.constraints.trackers.BatteryNotLowTrackerKt -> i0.d:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String access$getTAG$p():0:0 -> a
androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker -> i0.e:
    android.content.BroadcastReceiver broadcastReceiver -> f
    1:1:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/c;)V"}
    1:1:void startTracking():0:0 -> h
    1:1:void stopTracking():0:0 -> i
    android.content.IntentFilter getIntentFilter() -> j
    void onBroadcastReceive(android.content.Intent) -> k
androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker$broadcastReceiver$1 -> i0.e$a:
    androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker this$0 -> a
    1:1:void <init>(androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/e;)V"}
    1:1:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
androidx.work.impl.constraints.trackers.BroadcastReceiverConstraintTrackerKt -> i0.f:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String access$getTAG$p():0:0 -> a
androidx.work.impl.constraints.trackers.ConstraintTracker -> i0.h:
    androidx.work.impl.utils.taskexecutor.TaskExecutor taskExecutor -> a
    android.content.Context appContext -> b
    java.lang.Object lock -> c
    java.util.LinkedHashSet listeners -> d
    java.lang.Object currentState -> e
    1:1:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/c;)V"}
    1:1:void $r8$lambda$RK0TULesrSgb2ZBnJ6LX6irCfZ4(java.util.List,androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Li0/h;)V"}
    1:1:void _set_state_$lambda$4$lambda$3(java.util.List,androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Li0/h;)V"}
    1:1:void addListener(androidx.work.impl.constraints.ConstraintListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/a;)V"}
    1:1:android.content.Context getAppContext():0:0 -> d
    java.lang.Object readSystemState() -> e
    1:1:void removeListener(androidx.work.impl.constraints.ConstraintListener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/a;)V"}
    1:1:void setState(java.lang.Object):0:0 -> g
    void startTracking() -> h
    void stopTracking() -> i
androidx.work.impl.constraints.trackers.ConstraintTracker$$ExternalSyntheticLambda0 -> i0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List androidx.work.impl.constraints.trackers.ConstraintTracker$$InternalSyntheticLambda$1$3800152df119a01e353e396719223f43da50b1e60d6097c9a2d96105174d0fbf$0.f$0 -> e
    androidx.work.impl.constraints.trackers.ConstraintTracker androidx.work.impl.constraints.trackers.ConstraintTracker$$InternalSyntheticLambda$1$3800152df119a01e353e396719223f43da50b1e60d6097c9a2d96105174d0fbf$0.f$1 -> f
    1:1:void androidx.work.impl.constraints.trackers.ConstraintTracker$$InternalSyntheticLambda$1$3800152df119a01e353e396719223f43da50b1e60d6097c9a2d96105174d0fbf$0.<init>(java.util.List,androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Li0/h;)V"}
    1:1:void androidx.work.impl.constraints.trackers.ConstraintTracker$$InternalSyntheticLambda$1$3800152df119a01e353e396719223f43da50b1e60d6097c9a2d96105174d0fbf$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.constraints.trackers.ConstraintTrackerKt -> i0.i:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String access$getTAG$p():0:0 -> a
androidx.work.impl.constraints.trackers.NetworkStateTracker24 -> i0.j:
    android.net.ConnectivityManager connectivityManager -> f
    androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 networkCallback -> g
    1:1:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/c;)V"}
    1:1:java.lang.Object readSystemState():0:0 -> e
    1:1:void startTracking():0:0 -> h
    1:1:void stopTracking():0:0 -> i
    1:1:android.net.ConnectivityManager access$getConnectivityManager$p(androidx.work.impl.constraints.trackers.NetworkStateTracker24):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/j;)Landroid/net/ConnectivityManager;"}
    1:1:androidx.work.impl.constraints.NetworkState readSystemState():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/c;"}
androidx.work.impl.constraints.trackers.NetworkStateTracker24$networkCallback$1 -> i0.j$a:
    androidx.work.impl.constraints.trackers.NetworkStateTracker24 this$0 -> a
    1:1:void <init>(androidx.work.impl.constraints.trackers.NetworkStateTracker24):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/j;)V"}
    1:1:void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities):0:0 -> onCapabilitiesChanged
    1:1:void onLost(android.net.Network):0:0 -> onLost
androidx.work.impl.constraints.trackers.NetworkStateTrackerKt -> i0.k:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:androidx.work.impl.constraints.trackers.ConstraintTracker NetworkStateTracker(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/c;)Li0/h;"}
    1:1:java.lang.String access$getTAG$p():0:0 -> b
    1:1:androidx.work.impl.constraints.NetworkState getActiveNetworkState(android.net.ConnectivityManager):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/ConnectivityManager;)Lg0/c;"}
    1:1:boolean isActiveNetworkValidated(android.net.ConnectivityManager):0:0 -> d
androidx.work.impl.constraints.trackers.NetworkStateTrackerPre24 -> i0.l:
    android.net.ConnectivityManager connectivityManager -> g
    1:1:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/c;)V"}
    1:1:java.lang.Object readSystemState():0:0 -> e
    1:1:android.content.IntentFilter getIntentFilter():0:0 -> j
    1:1:void onBroadcastReceive(android.content.Intent):0:0 -> k
    1:1:androidx.work.impl.constraints.NetworkState readSystemState():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/c;"}
androidx.work.impl.constraints.trackers.StorageNotLowTracker -> i0.m:
    1:1:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/c;)V"}
    1:1:java.lang.Object readSystemState():0:0 -> e
    1:1:android.content.IntentFilter getIntentFilter():0:0 -> j
    1:1:void onBroadcastReceive(android.content.Intent):0:0 -> k
    1:1:java.lang.Boolean readSystemState():0:0 -> l
androidx.work.impl.constraints.trackers.StorageNotLowTrackerKt -> i0.n:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String access$getTAG$p():0:0 -> a
androidx.work.impl.constraints.trackers.Trackers -> i0.o:
    androidx.work.impl.constraints.trackers.ConstraintTracker batteryChargingTracker -> a
    androidx.work.impl.constraints.trackers.BatteryNotLowTracker batteryNotLowTracker -> b
    androidx.work.impl.constraints.trackers.ConstraintTracker networkStateTracker -> c
    androidx.work.impl.constraints.trackers.ConstraintTracker storageNotLowTracker -> d
    1:1:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.constraints.trackers.ConstraintTracker,androidx.work.impl.constraints.trackers.BatteryNotLowTracker,androidx.work.impl.constraints.trackers.ConstraintTracker,androidx.work.impl.constraints.trackers.ConstraintTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/c;Li0/h;Li0/c;Li0/h;Li0/h;)V"}
    2:2:void <init>(android.content.Context,androidx.work.impl.utils.taskexecutor.TaskExecutor,androidx.work.impl.constraints.trackers.ConstraintTracker,androidx.work.impl.constraints.trackers.BatteryNotLowTracker,androidx.work.impl.constraints.trackers.ConstraintTracker,androidx.work.impl.constraints.trackers.ConstraintTracker,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ll0/c;Li0/h;Li0/c;Li0/h;Li0/h;ILs1/g;)V"}
    1:1:androidx.work.impl.constraints.trackers.ConstraintTracker getBatteryChargingTracker():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/h;"}
    1:1:androidx.work.impl.constraints.trackers.BatteryNotLowTracker getBatteryNotLowTracker():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/c;"}
    1:1:androidx.work.impl.constraints.trackers.ConstraintTracker getNetworkStateTracker():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/h;"}
    1:1:androidx.work.impl.constraints.trackers.ConstraintTracker getStorageNotLowTracker():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li0/h;"}
androidx.work.impl.diagnostics.DiagnosticsReceiver -> androidx.work.impl.diagnostics.DiagnosticsReceiver:
    java.lang.String TAG -> a
androidx.work.impl.foreground.ForegroundProcessor -> androidx.work.impl.foreground.a:
    void startForeground(java.lang.String,androidx.work.ForegroundInfo) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Le0/h;)V"}
androidx.work.impl.foreground.SystemForegroundDispatcher -> androidx.work.impl.foreground.b:
    android.content.Context mContext -> a
    androidx.work.impl.WorkManagerImpl mWorkManagerImpl -> b
    androidx.work.impl.utils.taskexecutor.TaskExecutor mTaskExecutor -> c
    java.lang.Object mLock -> d
    androidx.work.impl.model.WorkGenerationalId mCurrentForegroundId -> e
    java.util.Map mForegroundInfoById -> f
    java.util.Map mWorkSpecById -> g
    java.util.Map mTrackedWorkSpecs -> h
    androidx.work.impl.constraints.WorkConstraintsTracker mConstraintsTracker -> i
    androidx.work.impl.foreground.SystemForegroundDispatcher$Callback mCallback -> j
    java.lang.String TAG -> k
    1:1:androidx.work.impl.WorkManagerImpl access$000(androidx.work.impl.foreground.SystemForegroundDispatcher):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/foreground/b;)Landroidx/work/impl/r0;"}
    1:1:void onExecuted(androidx.work.impl.model.WorkGenerationalId,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Z)V"}
    1:1:androidx.work.impl.utils.taskexecutor.TaskExecutor access$100(androidx.work.impl.foreground.SystemForegroundDispatcher):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/foreground/b;)Ll0/c;"}
    1:1:void onConstraintsStateChanged(androidx.work.impl.model.WorkSpec,androidx.work.impl.constraints.ConstraintsState):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;Lg0/b;)V"}
    1:1:android.content.Intent createNotifyIntent(android.content.Context,androidx.work.impl.model.WorkGenerationalId,androidx.work.ForegroundInfo):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj0/n;Le0/h;)Landroid/content/Intent;"}
    1:1:android.content.Intent createStartForegroundIntent(android.content.Context,androidx.work.impl.model.WorkGenerationalId,androidx.work.ForegroundInfo):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj0/n;Le0/h;)Landroid/content/Intent;"}
    1:1:android.content.Intent createStopForegroundIntent(android.content.Context):0:0 -> g
    1:1:void handleCancelWork(android.content.Intent):0:0 -> h
    1:1:void handleNotify(android.content.Intent):0:0 -> i
    1:1:void handleStartForeground(android.content.Intent):0:0 -> j
    1:1:void handleStop(android.content.Intent):0:0 -> k
    1:1:void onDestroy():0:0 -> l
    1:1:void onStartCommand(android.content.Intent):0:0 -> m
    1:1:void setCallback(androidx.work.impl.foreground.SystemForegroundDispatcher$Callback):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/foreground/b$b;)V"}
androidx.work.impl.foreground.SystemForegroundDispatcher$1 -> androidx.work.impl.foreground.b$a:
    java.lang.String val$workSpecId -> e
    androidx.work.impl.foreground.SystemForegroundDispatcher this$0 -> f
androidx.work.impl.foreground.SystemForegroundDispatcher$Callback -> androidx.work.impl.foreground.b$b:
    void cancelNotification(int) -> a
    void stop() -> b
    void startForeground(int,int,android.app.Notification) -> d
    void notify(int,android.app.Notification) -> e
androidx.work.impl.foreground.SystemForegroundService -> androidx.work.impl.foreground.SystemForegroundService:
    android.os.Handler mHandler -> b
    boolean mIsShutdown -> c
    androidx.work.impl.foreground.SystemForegroundDispatcher mDispatcher -> d
    android.app.NotificationManager mNotificationManager -> e
    java.lang.String TAG -> f
    androidx.work.impl.foreground.SystemForegroundService sForegroundService -> g
    1:1:void cancelNotification(int):0:0 -> a
    1:1:void stop():0:0 -> b
    1:1:void startForeground(int,int,android.app.Notification):0:0 -> d
    1:1:void notify(int,android.app.Notification):0:0 -> e
    1:1:java.lang.String access$000():0:0 -> f
    1:1:void initializeDispatcher():0:0 -> g
androidx.work.impl.foreground.SystemForegroundService$1 -> androidx.work.impl.foreground.SystemForegroundService$a:
    int val$notificationId -> e
    android.app.Notification val$notification -> f
    int val$notificationType -> g
    androidx.work.impl.foreground.SystemForegroundService this$0 -> h
androidx.work.impl.foreground.SystemForegroundService$2 -> androidx.work.impl.foreground.SystemForegroundService$b:
    int val$notificationId -> e
    android.app.Notification val$notification -> f
    androidx.work.impl.foreground.SystemForegroundService this$0 -> g
androidx.work.impl.foreground.SystemForegroundService$3 -> androidx.work.impl.foreground.SystemForegroundService$c:
    int val$notificationId -> e
    androidx.work.impl.foreground.SystemForegroundService this$0 -> f
androidx.work.impl.foreground.SystemForegroundService$Api29Impl -> androidx.work.impl.foreground.SystemForegroundService$d:
    1:1:void startForeground(android.app.Service,int,android.app.Notification,int):0:0 -> a
androidx.work.impl.foreground.SystemForegroundService$Api31Impl -> androidx.work.impl.foreground.SystemForegroundService$e:
    1:1:void startForeground(android.app.Service,int,android.app.Notification,int):0:0 -> a
androidx.work.impl.model.Dependency -> j0.a:
    java.lang.String workSpecId -> a
    java.lang.String prerequisiteId -> b
    1:1:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
    1:1:java.lang.String getPrerequisiteId():0:0 -> a
    1:1:java.lang.String getWorkSpecId():0:0 -> b
androidx.work.impl.model.DependencyDao -> j0.b:
    boolean hasCompletedAllPrerequisites(java.lang.String) -> a
    java.util.List getDependentWorkIds(java.lang.String) -> b
    void insertDependency(androidx.work.impl.model.Dependency) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a;)V"}
    boolean hasDependents(java.lang.String) -> d
androidx.work.impl.model.DependencyDao_Impl -> j0.c:
    androidx.room.RoomDatabase __db -> a
    androidx.room.EntityInsertionAdapter __insertionAdapterOfDependency -> b
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:boolean hasCompletedAllPrerequisites(java.lang.String):0:0 -> a
    1:1:java.util.List getDependentWorkIds(java.lang.String):0:0 -> b
    1:1:void insertDependency(androidx.work.impl.model.Dependency):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a;)V"}
    1:1:boolean hasDependents(java.lang.String):0:0 -> d
    1:1:java.util.List getRequiredConverters():0:0 -> e
androidx.work.impl.model.DependencyDao_Impl$1 -> j0.c$a:
    androidx.work.impl.model.DependencyDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.DependencyDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/c;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Ljava/lang/Object;)V"}
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.Dependency):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Lj0/a;)V"}
androidx.work.impl.model.Preference -> j0.d:
    java.lang.String key -> a
    java.lang.Long value -> b
    1:1:void <init>(java.lang.String,java.lang.Long):0:0 -> <init>
    2:2:void <init>(java.lang.String,boolean):0:0 -> <init>
    1:1:java.lang.String getKey():0:0 -> a
    1:1:java.lang.Long getValue():0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.impl.model.PreferenceDao -> j0.e:
    java.lang.Long getLongValue(java.lang.String) -> a
    void insertPreference(androidx.work.impl.model.Preference) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/d;)V"}
androidx.work.impl.model.PreferenceDao_Impl -> j0.f:
    androidx.room.RoomDatabase __db -> a
    androidx.room.EntityInsertionAdapter __insertionAdapterOfPreference -> b
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:java.lang.Long getLongValue(java.lang.String):0:0 -> a
    1:1:void insertPreference(androidx.work.impl.model.Preference):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/d;)V"}
    1:1:java.util.List getRequiredConverters():0:0 -> c
androidx.work.impl.model.PreferenceDao_Impl$1 -> j0.f$a:
    androidx.work.impl.model.PreferenceDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.PreferenceDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/f;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Ljava/lang/Object;)V"}
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.Preference):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Lj0/d;)V"}
androidx.work.impl.model.RawWorkInfoDao -> j0.g:
androidx.work.impl.model.RawWorkInfoDao_Impl -> j0.h:
    1:1:java.util.List getRequiredConverters():0:0 -> a
androidx.work.impl.model.SystemIdInfo -> j0.i:
    java.lang.String workSpecId -> a
    int generation -> b
    int systemId -> c
    1:1:void <init>(java.lang.String,int,int):0:0 -> <init>
    1:1:int getGeneration():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.impl.model.SystemIdInfoDao -> j0.k:
    void insertSystemIdInfo(androidx.work.impl.model.SystemIdInfo) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/i;)V"}
    void removeSystemIdInfo(androidx.work.impl.model.WorkGenerationalId) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)V"}
    void removeSystemIdInfo(java.lang.String,int) -> c
    java.util.List getWorkSpecIds() -> d
    void removeSystemIdInfo(java.lang.String) -> e
    androidx.work.impl.model.SystemIdInfo getSystemIdInfo(androidx.work.impl.model.WorkGenerationalId) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)Lj0/i;"}
    androidx.work.impl.model.SystemIdInfo getSystemIdInfo(java.lang.String,int) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;I)Lj0/i;"}
androidx.work.impl.model.SystemIdInfoDao$-CC -> j0.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    3:18:androidx.work.impl.model.SystemIdInfo androidx.work.impl.model.SystemIdInfoDao.getSystemIdInfo(androidx.work.impl.model.WorkGenerationalId):0:0 -> a
    3:18:androidx.work.impl.model.SystemIdInfo $default$getSystemIdInfo(androidx.work.impl.model.SystemIdInfoDao,androidx.work.impl.model.WorkGenerationalId):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/k;Lj0/n;)Lj0/i;"}
    3:17:void androidx.work.impl.model.SystemIdInfoDao.removeSystemIdInfo(androidx.work.impl.model.WorkGenerationalId):0:0 -> b
    3:17:void $default$removeSystemIdInfo(androidx.work.impl.model.SystemIdInfoDao,androidx.work.impl.model.WorkGenerationalId):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/k;Lj0/n;)V"}
    1:5:androidx.work.impl.model.SystemIdInfo androidx.work.impl.model.SystemIdInfoDao.access$getSystemIdInfo$jd(androidx.work.impl.model.SystemIdInfoDao,androidx.work.impl.model.WorkGenerationalId):0:0 -> c
    1:5:androidx.work.impl.model.SystemIdInfo access$getSystemIdInfo$jd(androidx.work.impl.model.SystemIdInfoDao,androidx.work.impl.model.WorkGenerationalId):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/k;Lj0/n;)Lj0/i;"}
    1:4:void androidx.work.impl.model.SystemIdInfoDao.access$removeSystemIdInfo$jd(androidx.work.impl.model.SystemIdInfoDao,androidx.work.impl.model.WorkGenerationalId):0:0 -> d
    1:4:void access$removeSystemIdInfo$jd(androidx.work.impl.model.SystemIdInfoDao,androidx.work.impl.model.WorkGenerationalId):0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/k;Lj0/n;)V"}
androidx.work.impl.model.SystemIdInfoDao$DefaultImpls -> j0.k$a:
    1:1:androidx.work.impl.model.SystemIdInfo getSystemIdInfo(androidx.work.impl.model.SystemIdInfoDao,androidx.work.impl.model.WorkGenerationalId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/k;Lj0/n;)Lj0/i;"}
    1:1:void removeSystemIdInfo(androidx.work.impl.model.SystemIdInfoDao,androidx.work.impl.model.WorkGenerationalId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/k;Lj0/n;)V"}
androidx.work.impl.model.SystemIdInfoDao_Impl -> j0.l:
    androidx.room.RoomDatabase __db -> a
    androidx.room.EntityInsertionAdapter __insertionAdapterOfSystemIdInfo -> b
    androidx.room.SharedSQLiteStatement __preparedStmtOfRemoveSystemIdInfo -> c
    androidx.room.SharedSQLiteStatement __preparedStmtOfRemoveSystemIdInfo_1 -> d
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:void insertSystemIdInfo(androidx.work.impl.model.SystemIdInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/i;)V"}
    1:1:void removeSystemIdInfo(androidx.work.impl.model.WorkGenerationalId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)V"}
    1:1:void removeSystemIdInfo(java.lang.String,int):0:0 -> c
    1:1:java.util.List getWorkSpecIds():0:0 -> d
    1:1:void removeSystemIdInfo(java.lang.String):0:0 -> e
    1:1:androidx.work.impl.model.SystemIdInfo getSystemIdInfo(androidx.work.impl.model.WorkGenerationalId):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)Lj0/i;"}
    1:1:androidx.work.impl.model.SystemIdInfo getSystemIdInfo(java.lang.String,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;I)Lj0/i;"}
    1:1:java.util.List getRequiredConverters():0:0 -> h
androidx.work.impl.model.SystemIdInfoDao_Impl$1 -> j0.l$a:
    androidx.work.impl.model.SystemIdInfoDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.SystemIdInfoDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/l;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Ljava/lang/Object;)V"}
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.SystemIdInfo):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Lj0/i;)V"}
androidx.work.impl.model.SystemIdInfoDao_Impl$2 -> j0.l$b:
    androidx.work.impl.model.SystemIdInfoDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.SystemIdInfoDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/l;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.SystemIdInfoDao_Impl$3 -> j0.l$c:
    androidx.work.impl.model.SystemIdInfoDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.SystemIdInfoDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/l;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.SystemIdInfoKt -> j0.m:
    1:1:androidx.work.impl.model.SystemIdInfo systemIdInfo(androidx.work.impl.model.WorkGenerationalId,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;I)Lj0/i;"}
androidx.work.impl.model.WorkGenerationalId -> j0.n:
    java.lang.String workSpecId -> a
    int generation -> b
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:int getGeneration():0:0 -> a
    1:1:java.lang.String getWorkSpecId():0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.impl.model.WorkName -> j0.o:
    java.lang.String name -> a
    java.lang.String workSpecId -> b
    1:1:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
    1:1:java.lang.String getName():0:0 -> a
    1:1:java.lang.String getWorkSpecId():0:0 -> b
androidx.work.impl.model.WorkNameDao -> j0.p:
    void insert(androidx.work.impl.model.WorkName) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/o;)V"}
    java.util.List getNamesForWorkSpecId(java.lang.String) -> b
androidx.work.impl.model.WorkNameDao_Impl -> j0.q:
    androidx.room.RoomDatabase __db -> a
    androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkName -> b
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:void insert(androidx.work.impl.model.WorkName):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/o;)V"}
    1:1:java.util.List getNamesForWorkSpecId(java.lang.String):0:0 -> b
    1:1:java.util.List getRequiredConverters():0:0 -> c
androidx.work.impl.model.WorkNameDao_Impl$1 -> j0.q$a:
    androidx.work.impl.model.WorkNameDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkNameDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/q;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Ljava/lang/Object;)V"}
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkName):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Lj0/o;)V"}
androidx.work.impl.model.WorkProgress -> j0.r:
androidx.work.impl.model.WorkProgressDao -> j0.s:
    void delete(java.lang.String) -> a
    void deleteAll() -> b
androidx.work.impl.model.WorkProgressDao_Impl -> j0.t:
    androidx.room.RoomDatabase __db -> a
    androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkProgress -> b
    androidx.room.SharedSQLiteStatement __preparedStmtOfDelete -> c
    androidx.room.SharedSQLiteStatement __preparedStmtOfDeleteAll -> d
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:void delete(java.lang.String):0:0 -> a
    1:1:void deleteAll():0:0 -> b
    1:1:java.util.List getRequiredConverters():0:0 -> c
androidx.work.impl.model.WorkProgressDao_Impl$1 -> j0.t$a:
    androidx.work.impl.model.WorkProgressDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkProgressDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/t;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Ljava/lang/Object;)V"}
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkProgress):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Lj0/r;)V"}
androidx.work.impl.model.WorkProgressDao_Impl$2 -> j0.t$b:
    androidx.work.impl.model.WorkProgressDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkProgressDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/t;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkProgressDao_Impl$3 -> j0.t$c:
    androidx.work.impl.model.WorkProgressDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkProgressDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/t;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpec -> j0.w:
    java.lang.String id -> a
    androidx.work.WorkInfo$State state -> b
    java.lang.String workerClassName -> c
    java.lang.String inputMergerClassName -> d
    androidx.work.Data input -> e
    androidx.work.Data output -> f
    long initialDelay -> g
    long intervalDuration -> h
    long flexDuration -> i
    androidx.work.Constraints constraints -> j
    int runAttemptCount -> k
    androidx.work.BackoffPolicy backoffPolicy -> l
    long backoffDelayDuration -> m
    long lastEnqueueTime -> n
    long minimumRetentionDuration -> o
    long scheduleRequestedAt -> p
    boolean expedited -> q
    androidx.work.OutOfQuotaPolicy outOfQuotaPolicy -> r
    int periodCount -> s
    int generation -> t
    long nextScheduleTimeOverride -> u
    int nextScheduleTimeOverrideGeneration -> v
    int stopReason -> w
    androidx.work.impl.model.WorkSpec$Companion Companion -> x
    java.lang.String TAG -> y
    androidx.arch.core.util.Function WORK_INFO_MAPPER -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,androidx.work.WorkInfo$State,java.lang.String,java.lang.String,androidx.work.Data,androidx.work.Data,long,long,long,androidx.work.Constraints,int,androidx.work.BackoffPolicy,long,long,long,long,boolean,androidx.work.OutOfQuotaPolicy,int,int,long,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Le0/y;Ljava/lang/String;Ljava/lang/String;Landroidx/work/b;Landroidx/work/b;JJJLe0/d;ILe0/a;JJJJZLe0/s;IIJII)V"}
    2:2:void <init>(java.lang.String,androidx.work.WorkInfo$State,java.lang.String,java.lang.String,androidx.work.Data,androidx.work.Data,long,long,long,androidx.work.Constraints,int,androidx.work.BackoffPolicy,long,long,long,long,boolean,androidx.work.OutOfQuotaPolicy,int,int,long,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Le0/y;Ljava/lang/String;Ljava/lang/String;Landroidx/work/b;Landroidx/work/b;JJJLe0/d;ILe0/a;JJJJZLe0/s;IIJIIILs1/g;)V"}
    3:3:void <init>(java.lang.String,androidx.work.impl.model.WorkSpec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lj0/w;)V"}
    4:4:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
    1:1:long calculateNextRunTime():0:0 -> a
    1:1:androidx.work.impl.model.WorkSpec copy(java.lang.String,androidx.work.WorkInfo$State,java.lang.String,java.lang.String,androidx.work.Data,androidx.work.Data,long,long,long,androidx.work.Constraints,int,androidx.work.BackoffPolicy,long,long,long,long,boolean,androidx.work.OutOfQuotaPolicy,int,int,long,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Le0/y;Ljava/lang/String;Ljava/lang/String;Landroidx/work/b;Landroidx/work/b;JJJLe0/d;ILe0/a;JJJJZLe0/s;IIJII)Lj0/w;"}
    1:1:androidx.work.impl.model.WorkSpec copy$default(androidx.work.impl.model.WorkSpec,java.lang.String,androidx.work.WorkInfo$State,java.lang.String,java.lang.String,androidx.work.Data,androidx.work.Data,long,long,long,androidx.work.Constraints,int,androidx.work.BackoffPolicy,long,long,long,long,boolean,androidx.work.OutOfQuotaPolicy,int,int,long,int,int,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;Ljava/lang/String;Le0/y;Ljava/lang/String;Ljava/lang/String;Landroidx/work/b;Landroidx/work/b;JJJLe0/d;ILe0/a;JJJJZLe0/s;IIJIIILjava/lang/Object;)Lj0/w;"}
    1:1:int getGeneration():0:0 -> d
    1:1:long getNextScheduleTimeOverride():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int getNextScheduleTimeOverrideGeneration():0:0 -> f
    1:1:int getPeriodCount():0:0 -> g
    1:1:int getStopReason():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean hasConstraints():0:0 -> i
    1:1:boolean isBackedOff():0:0 -> j
    1:1:boolean isPeriodic():0:0 -> k
    1:1:void setBackoffDelayDuration(long):0:0 -> l
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.impl.model.WorkSpec$$ExternalSyntheticBackport0 -> j0.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.work.impl.model.WorkSpec$$InternalSyntheticBackport$1$980c9536804cffbc09f5dc6aa31f0dd49bb138c9972e15ac6118ba7011f80a58$0.m(long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.model.WorkSpec$$ExternalSyntheticLambda1 -> j0.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.work.impl.model.WorkSpec$$InternalSyntheticLambda$1$c5c1909c34ddff15555b030d10162c44e93b8bd5b37f585446489564e4810384$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.model.WorkSpec$Companion -> j0.w$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:long calculateNextRunTime(boolean,int,androidx.work.BackoffPolicy,long,long,int,boolean,long,long,long,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZILe0/a;JJIZJJJJ)J"}
androidx.work.impl.model.WorkSpec$IdAndState -> j0.w$b:
    java.lang.String id -> a
    androidx.work.WorkInfo$State state -> b
    1:1:void <init>(java.lang.String,androidx.work.WorkInfo$State):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Le0/y;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.work.impl.model.WorkSpecDao -> j0.x:
    java.util.List getRecentlyCompletedWork(long) -> A
    void delete(java.lang.String) -> a
    androidx.work.WorkInfo$State getState(java.lang.String) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/y;"}
    void insertWorkSpec(androidx.work.impl.model.WorkSpec) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)V"}
    int setState(androidx.work.WorkInfo$State,java.lang.String) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/y;Ljava/lang/String;)I"}
    java.util.List getEligibleWorkForScheduling(int) -> e
    androidx.work.impl.model.WorkSpec getWorkSpec(java.lang.String) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj0/w;"}
    void setStopReason(java.lang.String,int) -> g
    int resetWorkSpecRunAttemptCount(java.lang.String) -> h
    void setLastEnqueueTime(java.lang.String,long) -> i
    java.util.List getRunningWork() -> j
    int setCancelledState(java.lang.String) -> k
    java.util.List getUnfinishedWorkWithTag(java.lang.String) -> l
    java.util.List getInputsFromPrerequisites(java.lang.String) -> m
    int incrementWorkSpecRunAttemptCount(java.lang.String) -> n
    void incrementPeriodCount(java.lang.String) -> o
    boolean hasUnfinishedWork() -> p
    int countNonFinishedContentUriTriggerWorkers() -> q
    int markWorkSpecScheduled(java.lang.String,long) -> r
    void resetWorkSpecNextScheduleTimeOverride(java.lang.String,int) -> s
    java.util.List getScheduledWork() -> t
    java.util.List getAllEligibleWorkSpecsForScheduling(int) -> u
    void setOutput(java.lang.String,androidx.work.Data) -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/work/b;)V"}
    java.util.List getUnfinishedWorkWithName(java.lang.String) -> w
    int resetScheduledState() -> x
    java.util.List getWorkSpecIdAndStatesForName(java.lang.String) -> y
    java.util.List getEligibleWorkForSchedulingWithContentUris() -> z
androidx.work.impl.model.WorkSpecDao_Impl -> j0.y:
    androidx.room.RoomDatabase __db -> a
    androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkSpec -> b
    androidx.room.EntityDeletionOrUpdateAdapter __updateAdapterOfWorkSpec -> c
    androidx.room.SharedSQLiteStatement __preparedStmtOfDelete -> d
    androidx.room.SharedSQLiteStatement __preparedStmtOfSetState -> e
    androidx.room.SharedSQLiteStatement __preparedStmtOfSetCancelledState -> f
    androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementPeriodCount -> g
    androidx.room.SharedSQLiteStatement __preparedStmtOfSetOutput -> h
    androidx.room.SharedSQLiteStatement __preparedStmtOfSetLastEnqueueTime -> i
    androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementWorkSpecRunAttemptCount -> j
    androidx.room.SharedSQLiteStatement __preparedStmtOfResetWorkSpecRunAttemptCount -> k
    androidx.room.SharedSQLiteStatement __preparedStmtOfSetNextScheduleTimeOverride -> l
    androidx.room.SharedSQLiteStatement __preparedStmtOfResetWorkSpecNextScheduleTimeOverride -> m
    androidx.room.SharedSQLiteStatement __preparedStmtOfMarkWorkSpecScheduled -> n
    androidx.room.SharedSQLiteStatement __preparedStmtOfResetScheduledState -> o
    androidx.room.SharedSQLiteStatement __preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast -> p
    androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementGeneration -> q
    androidx.room.SharedSQLiteStatement __preparedStmtOfSetStopReason -> r
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:java.util.List getRecentlyCompletedWork(long):0:0 -> A
    1:1:java.util.List getRequiredConverters():0:0 -> B
    1:1:void delete(java.lang.String):0:0 -> a
    1:1:androidx.work.WorkInfo$State getState(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le0/y;"}
    1:1:void insertWorkSpec(androidx.work.impl.model.WorkSpec):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)V"}
    1:1:int setState(androidx.work.WorkInfo$State,java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/y;Ljava/lang/String;)I"}
    1:1:java.util.List getEligibleWorkForScheduling(int):0:0 -> e
    1:1:androidx.work.impl.model.WorkSpec getWorkSpec(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj0/w;"}
    1:1:void setStopReason(java.lang.String,int):0:0 -> g
    1:1:int resetWorkSpecRunAttemptCount(java.lang.String):0:0 -> h
    1:1:void setLastEnqueueTime(java.lang.String,long):0:0 -> i
    1:1:java.util.List getRunningWork():0:0 -> j
    1:1:int setCancelledState(java.lang.String):0:0 -> k
    1:1:java.util.List getUnfinishedWorkWithTag(java.lang.String):0:0 -> l
    1:1:java.util.List getInputsFromPrerequisites(java.lang.String):0:0 -> m
    1:1:int incrementWorkSpecRunAttemptCount(java.lang.String):0:0 -> n
    1:1:void incrementPeriodCount(java.lang.String):0:0 -> o
    1:1:boolean hasUnfinishedWork():0:0 -> p
    1:1:int countNonFinishedContentUriTriggerWorkers():0:0 -> q
    1:1:int markWorkSpecScheduled(java.lang.String,long):0:0 -> r
    1:1:void resetWorkSpecNextScheduleTimeOverride(java.lang.String,int):0:0 -> s
    1:1:java.util.List getScheduledWork():0:0 -> t
    1:1:java.util.List getAllEligibleWorkSpecsForScheduling(int):0:0 -> u
    1:1:void setOutput(java.lang.String,androidx.work.Data):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/work/b;)V"}
    1:1:java.util.List getUnfinishedWorkWithName(java.lang.String):0:0 -> w
    1:1:int resetScheduledState():0:0 -> x
    1:1:java.util.List getWorkSpecIdAndStatesForName(java.lang.String):0:0 -> y
    1:1:java.util.List getEligibleWorkForSchedulingWithContentUris():0:0 -> z
androidx.work.impl.model.WorkSpecDao_Impl$1 -> j0.y$i:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Ljava/lang/Object;)V"}
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkSpec):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Lj0/w;)V"}
androidx.work.impl.model.WorkSpecDao_Impl$10 -> j0.y$a:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$11 -> j0.y$b:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$12 -> j0.y$c:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$13 -> j0.y$d:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$14 -> j0.y$e:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$15 -> j0.y$f:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$16 -> j0.y$g:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$17 -> j0.y$h:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$2 -> j0.y$j:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$3 -> j0.y$k:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$4 -> j0.y$l:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$5 -> j0.y$m:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$6 -> j0.y$n:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$7 -> j0.y$o:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$8 -> j0.y$p:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecDao_Impl$9 -> j0.y$q:
    androidx.work.impl.model.WorkSpecDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkSpecDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkSpecKt -> j0.z:
    1:1:androidx.work.impl.model.WorkGenerationalId generationalId(androidx.work.impl.model.WorkSpec):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Lj0/n;"}
androidx.work.impl.model.WorkTag -> j0.a0:
    java.lang.String tag -> a
    java.lang.String workSpecId -> b
    1:1:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
    1:1:java.lang.String getTag():0:0 -> a
    1:1:java.lang.String getWorkSpecId():0:0 -> b
androidx.work.impl.model.WorkTagDao -> j0.c0:
    void insert(androidx.work.impl.model.WorkTag) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0;)V"}
    void insertTags(java.lang.String,java.util.Set) -> b
    java.util.List getTagsForWorkSpecId(java.lang.String) -> c
androidx.work.impl.model.WorkTagDao$-CC -> j0.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    3:36:void androidx.work.impl.model.WorkTagDao.insertTags(java.lang.String,java.util.Set):0:0 -> a
    3:36:void $default$insertTags(androidx.work.impl.model.WorkTagDao,java.lang.String,java.util.Set):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/c0;Ljava/lang/String;Ljava/util/Set;)V"}
    1:4:void androidx.work.impl.model.WorkTagDao.access$insertTags$jd(androidx.work.impl.model.WorkTagDao,java.lang.String,java.util.Set):0:0 -> b
    1:4:void access$insertTags$jd(androidx.work.impl.model.WorkTagDao,java.lang.String,java.util.Set):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/c0;Ljava/lang/String;Ljava/util/Set;)V"}
androidx.work.impl.model.WorkTagDao$DefaultImpls -> j0.c0$a:
    1:1:void insertTags(androidx.work.impl.model.WorkTagDao,java.lang.String,java.util.Set):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/c0;Ljava/lang/String;Ljava/util/Set;)V"}
androidx.work.impl.model.WorkTagDao_Impl -> j0.d0:
    androidx.room.RoomDatabase __db -> a
    androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkTag -> b
    androidx.room.SharedSQLiteStatement __preparedStmtOfDeleteByWorkSpecId -> c
    1:1:void <init>(androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/r;)V"}
    1:1:void insert(androidx.work.impl.model.WorkTag):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0;)V"}
    1:1:void insertTags(java.lang.String,java.util.Set):0:0 -> b
    1:1:java.util.List getTagsForWorkSpecId(java.lang.String):0:0 -> c
    1:1:java.util.List getRequiredConverters():0:0 -> d
androidx.work.impl.model.WorkTagDao_Impl$1 -> j0.d0$a:
    androidx.work.impl.model.WorkTagDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkTagDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/d0;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Ljava/lang/Object;)V"}
    1:1:void bind(androidx.sqlite.db.SupportSQLiteStatement,androidx.work.impl.model.WorkTag):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Lj0/a0;)V"}
androidx.work.impl.model.WorkTagDao_Impl$2 -> j0.d0$b:
    androidx.work.impl.model.WorkTagDao_Impl this$0 -> d
    1:1:void <init>(androidx.work.impl.model.WorkTagDao_Impl,androidx.room.RoomDatabase):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/d0;Ll/r;)V"}
    1:1:java.lang.String createQuery():0:0 -> e
androidx.work.impl.model.WorkTypeConverters -> j0.e0:
    androidx.work.impl.model.WorkTypeConverters INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int backoffPolicyToInt(androidx.work.BackoffPolicy):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/a;)I"}
    1:1:java.util.Set byteArrayToSetOfTriggers(byte[]):0:0 -> b
    1:1:androidx.work.BackoffPolicy intToBackoffPolicy(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Le0/a;"}
    1:1:androidx.work.NetworkType intToNetworkType(int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Le0/o;"}
    1:1:androidx.work.OutOfQuotaPolicy intToOutOfQuotaPolicy(int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Le0/s;"}
    1:1:androidx.work.WorkInfo$State intToState(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Le0/y;"}
    1:1:int networkTypeToInt(androidx.work.NetworkType):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/o;)I"}
    1:1:int outOfQuotaPolicyToInt(androidx.work.OutOfQuotaPolicy):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/s;)I"}
    1:1:byte[] setOfTriggersToByteArray(java.util.Set):0:0 -> i
    1:1:int stateToInt(androidx.work.WorkInfo$State):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/y;)I"}
androidx.work.impl.model.WorkTypeConverters$WhenMappings -> j0.e0$a:
    int[] $EnumSwitchMapping$0 -> a
    int[] $EnumSwitchMapping$1 -> b
    int[] $EnumSwitchMapping$2 -> c
    int[] $EnumSwitchMapping$3 -> d
    1:1:void <clinit>():0:0 -> <clinit>
androidx.work.impl.utils.Api28Impl -> k0.a:
    androidx.work.impl.utils.Api28Impl INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.String getProcessName():0:0 -> a
androidx.work.impl.utils.CancelWorkRunnable -> k0.b:
    androidx.work.impl.OperationImpl mOperation -> e
    1:1:void <init>():0:0 -> <init>
    1:1:void cancel(androidx.work.impl.WorkManagerImpl,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/r0;Ljava/lang/String;)V"}
    1:1:androidx.work.impl.utils.CancelWorkRunnable forId(java.util.UUID,androidx.work.impl.WorkManagerImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Landroidx/work/impl/r0;)Lk0/b;"}
    1:1:androidx.work.impl.utils.CancelWorkRunnable forName(java.lang.String,androidx.work.impl.WorkManagerImpl,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/work/impl/r0;Z)Lk0/b;"}
    1:1:androidx.work.impl.utils.CancelWorkRunnable forTag(java.lang.String,androidx.work.impl.WorkManagerImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/work/impl/r0;)Lk0/b;"}
    1:1:androidx.work.Operation getOperation():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/r;"}
    1:1:void iterativelyCancelWorkAndDependents(androidx.work.impl.WorkDatabase,java.lang.String):0:0 -> f
    1:1:void reschedulePendingWorkers(androidx.work.impl.WorkManagerImpl):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/r0;)V"}
    void runInternal() -> h
    1:1:void run():0:0 -> run
androidx.work.impl.utils.CancelWorkRunnable$1 -> k0.b$a:
    androidx.work.impl.WorkManagerImpl val$workManagerImpl -> f
    java.util.UUID val$id -> g
    1:1:void <init>(androidx.work.impl.WorkManagerImpl,java.util.UUID):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/r0;Ljava/util/UUID;)V"}
    1:1:void runInternal():0:0 -> h
androidx.work.impl.utils.CancelWorkRunnable$2 -> k0.b$b:
    androidx.work.impl.WorkManagerImpl val$workManagerImpl -> f
    java.lang.String val$tag -> g
    1:1:void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/r0;Ljava/lang/String;)V"}
    1:1:void runInternal():0:0 -> h
androidx.work.impl.utils.CancelWorkRunnable$3 -> k0.b$c:
    androidx.work.impl.WorkManagerImpl val$workManagerImpl -> f
    java.lang.String val$name -> g
    boolean val$allowReschedule -> h
    1:1:void <init>(androidx.work.impl.WorkManagerImpl,java.lang.String,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/r0;Ljava/lang/String;Z)V"}
    1:1:void runInternal():0:0 -> h
androidx.work.impl.utils.EnqueueRunnable -> k0.c:
    androidx.work.impl.WorkContinuationImpl mWorkContinuation -> e
    androidx.work.impl.OperationImpl mOperation -> f
    java.lang.String TAG -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.work.impl.WorkContinuationImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/c0;)V"}
    2:2:void <init>(androidx.work.impl.WorkContinuationImpl,androidx.work.impl.OperationImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/c0;Landroidx/work/impl/q;)V"}
    1:1:boolean addToDatabase():0:0 -> a
    1:1:boolean enqueueContinuation(androidx.work.impl.WorkContinuationImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/c0;)Z"}
    1:1:boolean enqueueWorkWithPrerequisites(androidx.work.impl.WorkManagerImpl,java.util.List,java.lang.String[],java.lang.String,androidx.work.ExistingWorkPolicy):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/r0;Ljava/util/List;[Ljava/lang/String;Ljava/lang/String;Le0/g;)Z"}
    1:1:androidx.work.Operation getOperation():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le0/r;"}
    1:1:boolean processContinuation(androidx.work.impl.WorkContinuationImpl):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/c0;)Z"}
    1:1:void scheduleWorkInBackground():0:0 -> f
    1:1:void run():0:0 -> run
androidx.work.impl.utils.EnqueueUtilsKt -> k0.d:
    1:1:void checkContentUriTriggerWorkerLimits(androidx.work.impl.WorkDatabase,androidx.work.Configuration,androidx.work.impl.WorkContinuationImpl):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/WorkDatabase;Landroidx/work/a;Landroidx/work/impl/c0;)V"}
    1:1:androidx.work.impl.model.WorkSpec tryDelegateConstrainedWorkSpec(androidx.work.impl.model.WorkSpec):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;)Lj0/w;"}
    1:1:boolean usesScheduler(java.util.List,java.lang.String):0:0 -> c
    1:1:androidx.work.impl.model.WorkSpec wrapInConstraintTrackingWorkerIfNeeded(java.util.List,androidx.work.impl.model.WorkSpec):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lj0/w;)Lj0/w;"}
androidx.work.impl.utils.ForceStopRunnable -> androidx.work.impl.utils.ForceStopRunnable:
    android.content.Context mContext -> e
    androidx.work.impl.WorkManagerImpl mWorkManager -> f
    androidx.work.impl.utils.PreferenceUtils mPreferenceUtils -> g
    int mRetryCount -> h
    java.lang.String TAG -> i
    long TEN_YEARS -> j
    1:1:boolean cleanUp():0:0 -> a
    1:1:void forceStopRunnable():0:0 -> b
    1:1:android.content.Intent getIntent(android.content.Context):0:0 -> c
    1:1:android.app.PendingIntent getPendingIntent(android.content.Context,int):0:0 -> d
    1:1:boolean isForceStopped():0:0 -> e
    1:1:boolean multiProcessChecks():0:0 -> f
    1:1:void setAlarm(android.content.Context):0:0 -> g
    1:1:boolean shouldRescheduleWorkers():0:0 -> h
    1:1:void sleep(long):0:0 -> i
androidx.work.impl.utils.ForceStopRunnable$$ExternalSyntheticApiModelOutline0 -> k0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List androidx.work.impl.utils.ForceStopRunnable$$InternalSyntheticApiModelOutline$1$0414b5c07651c9264cadd0eec0f37a5627aabd662969b4e61a90ce70a66b8590$0.m(android.app.ActivityManager,java.lang.String,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.utils.ForceStopRunnable$$ExternalSyntheticApiModelOutline1 -> k0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.ApplicationExitInfo androidx.work.impl.utils.ForceStopRunnable$$InternalSyntheticApiModelOutline$1$0414b5c07651c9264cadd0eec0f37a5627aabd662969b4e61a90ce70a66b8590$1.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.utils.ForceStopRunnable$$ExternalSyntheticApiModelOutline2 -> k0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.work.impl.utils.ForceStopRunnable$$InternalSyntheticApiModelOutline$1$0414b5c07651c9264cadd0eec0f37a5627aabd662969b4e61a90ce70a66b8590$2.m(android.app.ApplicationExitInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.utils.ForceStopRunnable$$ExternalSyntheticApiModelOutline3 -> k0.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:long androidx.work.impl.utils.ForceStopRunnable$$InternalSyntheticApiModelOutline$1$0414b5c07651c9264cadd0eec0f37a5627aabd662969b4e61a90ce70a66b8590$3.m(android.app.ApplicationExitInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver -> androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver:
    java.lang.String TAG -> a
androidx.work.impl.utils.IdGenerator -> k0.k:
    androidx.work.impl.WorkDatabase workDatabase -> a
    1:1:void <init>(androidx.work.impl.WorkDatabase):0:0 -> <init>
    1:1:java.lang.Integer $r8$lambda$LyUC9fmKDw6AhARQq6V7VCdkafU(androidx.work.impl.utils.IdGenerator,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/k;II)Ljava/lang/Integer;"}
    1:1:java.lang.Integer $r8$lambda$fIl4yTd4RSvtLPTyoZbhi4q3Rnk(androidx.work.impl.utils.IdGenerator):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/k;)Ljava/lang/Integer;"}
    1:1:int nextAlarmManagerId():0:0 -> c
    1:1:java.lang.Integer nextAlarmManagerId$lambda$1(androidx.work.impl.utils.IdGenerator):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/k;)Ljava/lang/Integer;"}
    1:1:int nextJobSchedulerIdWithRange(int,int):0:0 -> e
    1:1:java.lang.Integer nextJobSchedulerIdWithRange$lambda$0(androidx.work.impl.utils.IdGenerator,int,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/k;II)Ljava/lang/Integer;"}
androidx.work.impl.utils.IdGenerator$$ExternalSyntheticLambda0 -> k0.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.utils.IdGenerator androidx.work.impl.utils.IdGenerator$$InternalSyntheticLambda$1$4697abe6ea2587c61e2e77dc9bd5c9c3868df1a8713825b3708b4daef84f1217$0.f$0 -> a
    1:1:void androidx.work.impl.utils.IdGenerator$$InternalSyntheticLambda$1$4697abe6ea2587c61e2e77dc9bd5c9c3868df1a8713825b3708b4daef84f1217$0.<init>(androidx.work.impl.utils.IdGenerator):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/k;)V"}
    1:1:java.lang.Object androidx.work.impl.utils.IdGenerator$$InternalSyntheticLambda$1$4697abe6ea2587c61e2e77dc9bd5c9c3868df1a8713825b3708b4daef84f1217$0.call():0:0 -> call
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.utils.IdGenerator$$ExternalSyntheticLambda1 -> k0.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.utils.IdGenerator androidx.work.impl.utils.IdGenerator$$InternalSyntheticLambda$1$ee0cb170e4ff8065b92bbd2adb02dcffe1ea4633a92cf68365c9c7ae39dc61d7$0.f$0 -> a
    int androidx.work.impl.utils.IdGenerator$$InternalSyntheticLambda$1$ee0cb170e4ff8065b92bbd2adb02dcffe1ea4633a92cf68365c9c7ae39dc61d7$0.f$1 -> b
    int androidx.work.impl.utils.IdGenerator$$InternalSyntheticLambda$1$ee0cb170e4ff8065b92bbd2adb02dcffe1ea4633a92cf68365c9c7ae39dc61d7$0.f$2 -> c
    1:1:void androidx.work.impl.utils.IdGenerator$$InternalSyntheticLambda$1$ee0cb170e4ff8065b92bbd2adb02dcffe1ea4633a92cf68365c9c7ae39dc61d7$0.<init>(androidx.work.impl.utils.IdGenerator,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/k;II)V"}
    1:1:java.lang.Object androidx.work.impl.utils.IdGenerator$$InternalSyntheticLambda$1$ee0cb170e4ff8065b92bbd2adb02dcffe1ea4633a92cf68365c9c7ae39dc61d7$0.call():0:0 -> call
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.utils.IdGeneratorKt -> k0.l:
    1:1:int access$nextId(androidx.work.impl.WorkDatabase,java.lang.String):0:0 -> a
    1:1:void access$updatePreference(androidx.work.impl.WorkDatabase,java.lang.String,int):0:0 -> b
    1:1:void migrateLegacyIdGenerator(android.content.Context,androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lo/g;)V"}
    1:1:int nextId(androidx.work.impl.WorkDatabase,java.lang.String):0:0 -> d
    1:1:void updatePreference(androidx.work.impl.WorkDatabase,java.lang.String,int):0:0 -> e
androidx.work.impl.utils.NetworkApi21 -> k0.m:
    1:1:android.net.NetworkCapabilities getNetworkCapabilitiesCompat(android.net.ConnectivityManager,android.net.Network):0:0 -> a
    1:1:boolean hasCapabilityCompat(android.net.NetworkCapabilities,int):0:0 -> b
    1:1:void unregisterNetworkCallbackCompat(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback):0:0 -> c
androidx.work.impl.utils.NetworkApi23 -> k0.o:
    1:1:android.net.Network getActiveNetworkCompat(android.net.ConnectivityManager):0:0 -> a
androidx.work.impl.utils.NetworkApi23$$ExternalSyntheticApiModelOutline0 -> k0.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.net.Network androidx.work.impl.utils.NetworkApi23$$InternalSyntheticApiModelOutline$1$68764ac05c613523a20357114da83c6f8f7586a528ed8f792df40b270cf9d4a5$0.m(android.net.ConnectivityManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.utils.NetworkApi24 -> k0.q:
    1:1:void registerDefaultNetworkCallbackCompat(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback):0:0 -> a
androidx.work.impl.utils.NetworkApi24$$ExternalSyntheticApiModelOutline0 -> k0.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.work.impl.utils.NetworkApi24$$InternalSyntheticApiModelOutline$1$b3ef9f3d2fbc9b3a406e8ea634377da0822b79656f4acbd533d46bb5acf2fd9e$0.m(android.net.ConnectivityManager,android.net.ConnectivityManager$NetworkCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.utils.PackageManagerHelper -> k0.r:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int getComponentEnabledSetting(android.content.Context,java.lang.String):0:0 -> a
    1:1:boolean isComponentEnabled(int,boolean):0:0 -> b
    1:1:void setComponentEnabled(android.content.Context,java.lang.Class,boolean):0:0 -> c
androidx.work.impl.utils.PreferenceUtils -> k0.s:
    androidx.work.impl.WorkDatabase mWorkDatabase -> a
    1:1:void <init>(androidx.work.impl.WorkDatabase):0:0 -> <init>
    1:1:long getLastForceStopEventMillis():0:0 -> a
    1:1:boolean getNeedsReschedule():0:0 -> b
    1:1:void migrateLegacyPreferences(android.content.Context,androidx.sqlite.db.SupportSQLiteDatabase):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lo/g;)V"}
    1:1:void setLastForceStopEventMillis(long):0:0 -> d
    1:1:void setNeedsReschedule(boolean):0:0 -> e
androidx.work.impl.utils.ProcessUtils -> k0.t:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String getProcessName(android.content.Context):0:0 -> a
    1:1:boolean isDefaultProcess(android.content.Context,androidx.work.Configuration):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/work/a;)Z"}
androidx.work.impl.utils.SerialExecutorImpl -> k0.u:
    java.util.ArrayDeque mTasks -> e
    java.util.concurrent.Executor mExecutor -> f
    java.lang.Runnable mActive -> g
    java.lang.Object mLock -> h
    1:1:void <init>(java.util.concurrent.Executor):0:0 -> <init>
    1:1:boolean hasPendingTasks():0:0 -> K
    1:1:void scheduleNext():0:0 -> a
    1:1:void execute(java.lang.Runnable):0:0 -> execute
androidx.work.impl.utils.SerialExecutorImpl$Task -> k0.u$a:
    androidx.work.impl.utils.SerialExecutorImpl mSerialExecutor -> e
    java.lang.Runnable mRunnable -> f
    1:1:void <init>(androidx.work.impl.utils.SerialExecutorImpl,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/u;Ljava/lang/Runnable;)V"}
    1:1:void run():0:0 -> run
androidx.work.impl.utils.StartWorkRunnable -> k0.v:
    androidx.work.impl.Processor processor -> e
    androidx.work.impl.StartStopToken startStopToken -> f
    androidx.work.WorkerParameters$RuntimeExtras runtimeExtras -> g
    1:1:void <init>(androidx.work.impl.Processor,androidx.work.impl.StartStopToken,androidx.work.WorkerParameters$RuntimeExtras):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/u;Landroidx/work/impl/a0;Landroidx/work/WorkerParameters$a;)V"}
    1:1:void run():0:0 -> run
androidx.work.impl.utils.StopWorkRunnable -> k0.w:
    androidx.work.impl.Processor processor -> e
    androidx.work.impl.StartStopToken token -> f
    boolean stopInForeground -> g
    int reason -> h
    1:1:void <init>(androidx.work.impl.Processor,androidx.work.impl.StartStopToken,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/u;Landroidx/work/impl/a0;Z)V"}
    2:2:void <init>(androidx.work.impl.Processor,androidx.work.impl.StartStopToken,boolean,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/u;Landroidx/work/impl/a0;ZI)V"}
    1:1:void run():0:0 -> run
androidx.work.impl.utils.SynchronousExecutor -> k0.x:
    void <init>() -> <init>
    1:1:void execute(java.lang.Runnable):0:0 -> execute
androidx.work.impl.utils.WakeLocks -> k0.y:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void checkWakeLocks():0:0 -> a
    1:1:android.os.PowerManager$WakeLock newWakeLock(android.content.Context,java.lang.String):0:0 -> b
androidx.work.impl.utils.WakeLocksHolder -> k0.z:
    androidx.work.impl.utils.WakeLocksHolder INSTANCE -> a
    java.util.WeakHashMap wakeLocks -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.util.WeakHashMap getWakeLocks():0:0 -> a
androidx.work.impl.utils.WorkForegroundRunnable -> k0.b0:
    androidx.work.impl.utils.futures.SettableFuture mFuture -> e
    android.content.Context mContext -> f
    androidx.work.impl.model.WorkSpec mWorkSpec -> g
    androidx.work.ListenableWorker mWorker -> h
    androidx.work.ForegroundUpdater mForegroundUpdater -> i
    androidx.work.impl.utils.taskexecutor.TaskExecutor mTaskExecutor -> j
    java.lang.String TAG -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,androidx.work.impl.model.WorkSpec,androidx.work.ListenableWorker,androidx.work.ForegroundUpdater,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj0/w;Landroidx/work/c;Le0/i;Ll0/c;)V"}
    1:1:void $r8$lambda$x6ZBXcndBxIn8qTmHwgquxDmWno(androidx.work.impl.utils.WorkForegroundRunnable,androidx.work.impl.utils.futures.SettableFuture):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b0;Landroidx/work/impl/utils/futures/c;)V"}
    1:1:com.google.common.util.concurrent.ListenableFuture getFuture():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/a;"}
    1:1:void lambda$run$0(androidx.work.impl.utils.futures.SettableFuture):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/c;)V"}
    1:1:void run():0:0 -> run
androidx.work.impl.utils.WorkForegroundRunnable$$ExternalSyntheticLambda0 -> k0.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.utils.WorkForegroundRunnable androidx.work.impl.utils.WorkForegroundRunnable$$InternalSyntheticLambda$3$a7ff6500ca419e5516c148ebebff3c8a1fc2a06493a4cf0f052075417cb5d0cb$0.f$0 -> e
    androidx.work.impl.utils.futures.SettableFuture androidx.work.impl.utils.WorkForegroundRunnable$$InternalSyntheticLambda$3$a7ff6500ca419e5516c148ebebff3c8a1fc2a06493a4cf0f052075417cb5d0cb$0.f$1 -> f
    1:1:void androidx.work.impl.utils.WorkForegroundRunnable$$InternalSyntheticLambda$3$a7ff6500ca419e5516c148ebebff3c8a1fc2a06493a4cf0f052075417cb5d0cb$0.<init>(androidx.work.impl.utils.WorkForegroundRunnable,androidx.work.impl.utils.futures.SettableFuture):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b0;Landroidx/work/impl/utils/futures/c;)V"}
    1:1:void androidx.work.impl.utils.WorkForegroundRunnable$$InternalSyntheticLambda$3$a7ff6500ca419e5516c148ebebff3c8a1fc2a06493a4cf0f052075417cb5d0cb$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.utils.WorkForegroundRunnable$1 -> k0.b0$a:
    androidx.work.impl.utils.futures.SettableFuture val$foregroundFuture -> e
    androidx.work.impl.utils.WorkForegroundRunnable this$0 -> f
    1:1:void <init>(androidx.work.impl.utils.WorkForegroundRunnable,androidx.work.impl.utils.futures.SettableFuture):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b0;Landroidx/work/impl/utils/futures/c;)V"}
    1:1:void run():0:0 -> run
androidx.work.impl.utils.WorkForegroundUpdater -> k0.c0:
    androidx.work.impl.utils.taskexecutor.TaskExecutor mTaskExecutor -> a
    androidx.work.impl.foreground.ForegroundProcessor mForegroundProcessor -> b
    androidx.work.impl.model.WorkSpecDao mWorkSpecDao -> c
    java.lang.String TAG -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.work.impl.WorkDatabase,androidx.work.impl.foreground.ForegroundProcessor,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/WorkDatabase;Landroidx/work/impl/foreground/a;Ll0/c;)V"}
    1:1:com.google.common.util.concurrent.ListenableFuture setForegroundAsync(android.content.Context,java.util.UUID,androidx.work.ForegroundInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/UUID;Le0/h;)Lo0/a;"}
androidx.work.impl.utils.WorkForegroundUpdater$1 -> k0.c0$a:
    androidx.work.impl.utils.futures.SettableFuture val$future -> e
    java.util.UUID val$id -> f
    androidx.work.ForegroundInfo val$foregroundInfo -> g
    android.content.Context val$context -> h
    androidx.work.impl.utils.WorkForegroundUpdater this$0 -> i
    1:1:void <init>(androidx.work.impl.utils.WorkForegroundUpdater,androidx.work.impl.utils.futures.SettableFuture,java.util.UUID,androidx.work.ForegroundInfo,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/c0;Landroidx/work/impl/utils/futures/c;Ljava/util/UUID;Le0/h;Landroid/content/Context;)V"}
    1:1:void run():0:0 -> run
androidx.work.impl.utils.WorkProgressUpdater -> k0.d0:
    androidx.work.impl.WorkDatabase mWorkDatabase -> a
    androidx.work.impl.utils.taskexecutor.TaskExecutor mTaskExecutor -> b
    java.lang.String TAG -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.work.impl.WorkDatabase,androidx.work.impl.utils.taskexecutor.TaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/WorkDatabase;Ll0/c;)V"}
androidx.work.impl.utils.WorkTimer -> k0.e0:
    androidx.work.RunnableScheduler mRunnableScheduler -> a
    java.util.Map mTimerMap -> b
    java.util.Map mListeners -> c
    java.lang.Object mLock -> d
    java.lang.String TAG -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.work.RunnableScheduler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le0/v;)V"}
    1:1:void startTimer(androidx.work.impl.model.WorkGenerationalId,long,androidx.work.impl.utils.WorkTimer$TimeLimitExceededListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;JLk0/e0$a;)V"}
    1:1:void stopTimer(androidx.work.impl.model.WorkGenerationalId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)V"}
androidx.work.impl.utils.WorkTimer$TimeLimitExceededListener -> k0.e0$a:
    void onTimeLimitExceeded(androidx.work.impl.model.WorkGenerationalId) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)V"}
androidx.work.impl.utils.WorkTimer$WorkTimerRunnable -> k0.e0$b:
    androidx.work.impl.utils.WorkTimer mWorkTimer -> e
    androidx.work.impl.model.WorkGenerationalId mWorkGenerationalId -> f
    1:1:void <init>(androidx.work.impl.utils.WorkTimer,androidx.work.impl.model.WorkGenerationalId):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e0;Lj0/n;)V"}
    1:1:void run():0:0 -> run
androidx.work.impl.utils.futures.AbstractFuture -> androidx.work.impl.utils.futures.a:
    java.lang.Object value -> a
    androidx.work.impl.utils.futures.AbstractFuture$Listener listeners -> b
    androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters -> c
    boolean GENERATE_CANCELLATION_CAUSES -> d
    java.util.logging.Logger log -> e
    androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper ATOMIC_HELPER -> f
    java.lang.Object NULL -> g
    1:1:void addListener(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> a
    1:1:void addDoneString(java.lang.StringBuilder):0:0 -> b
    1:1:void afterDone():0:0 -> c
    1:1:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable):0:0 -> d
    1:1:java.lang.Object checkNotNull(java.lang.Object):0:0 -> e
    1:1:androidx.work.impl.utils.futures.AbstractFuture$Listener clearListeners(androidx.work.impl.utils.futures.AbstractFuture$Listener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a$e;)Landroidx/work/impl/utils/futures/a$e;"}
    1:1:void complete(androidx.work.impl.utils.futures.AbstractFuture):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;)V"}
    1:1:java.lang.Object get():0:0 -> get
    2:2:java.lang.Object get(long,java.util.concurrent.TimeUnit):0:0 -> get
    1:1:void executeListener(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> h
    1:1:java.lang.Object getDoneValue(java.lang.Object):0:0 -> i
    1:1:java.lang.Object getFutureValue(com.google.common.util.concurrent.ListenableFuture):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/a;)Ljava/lang/Object;"}
    1:1:java.lang.Object getUninterruptibly(java.util.concurrent.Future):0:0 -> k
    1:1:void interruptTask():0:0 -> l
    1:1:java.lang.String pendingToString():0:0 -> m
    1:1:void releaseWaiters():0:0 -> n
    1:1:void removeWaiter(androidx.work.impl.utils.futures.AbstractFuture$Waiter):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a$i;)V"}
    1:1:boolean set(java.lang.Object):0:0 -> p
    1:1:boolean setException(java.lang.Throwable):0:0 -> q
    1:1:boolean setFuture(com.google.common.util.concurrent.ListenableFuture):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/a;)Z"}
    1:1:java.lang.String userObjectToString(java.lang.Object):0:0 -> s
androidx.work.impl.utils.futures.AbstractFuture$1 -> androidx.work.impl.utils.futures.a$a:
androidx.work.impl.utils.futures.AbstractFuture$AtomicHelper -> androidx.work.impl.utils.futures.a$b:
    void <init>() -> <init>
    1:1:void <init>(androidx.work.impl.utils.futures.AbstractFuture$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a$a;)V"}
    boolean casListeners(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Listener,androidx.work.impl.utils.futures.AbstractFuture$Listener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;Landroidx/work/impl/utils/futures/a$e;Landroidx/work/impl/utils/futures/a$e;)Z"}
    boolean casValue(androidx.work.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    boolean casWaiters(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;Landroidx/work/impl/utils/futures/a$i;Landroidx/work/impl/utils/futures/a$i;)Z"}
    void putNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a$i;Landroidx/work/impl/utils/futures/a$i;)V"}
    void putThread(androidx.work.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a$i;Ljava/lang/Thread;)V"}
androidx.work.impl.utils.futures.AbstractFuture$Cancellation -> androidx.work.impl.utils.futures.a$c:
    boolean wasInterrupted -> a
    java.lang.Throwable cause -> b
    androidx.work.impl.utils.futures.AbstractFuture$Cancellation CAUSELESS_INTERRUPTED -> c
    androidx.work.impl.utils.futures.AbstractFuture$Cancellation CAUSELESS_CANCELLED -> d
androidx.work.impl.utils.futures.AbstractFuture$Failure -> androidx.work.impl.utils.futures.a$d:
    java.lang.Throwable exception -> a
    androidx.work.impl.utils.futures.AbstractFuture$Failure FALLBACK_INSTANCE -> b
androidx.work.impl.utils.futures.AbstractFuture$Failure$1 -> androidx.work.impl.utils.futures.a$d$a:
androidx.work.impl.utils.futures.AbstractFuture$Listener -> androidx.work.impl.utils.futures.a$e:
    java.lang.Runnable task -> a
    java.util.concurrent.Executor executor -> b
    androidx.work.impl.utils.futures.AbstractFuture$Listener next -> c
    androidx.work.impl.utils.futures.AbstractFuture$Listener TOMBSTONE -> d
androidx.work.impl.utils.futures.AbstractFuture$SafeAtomicHelper -> androidx.work.impl.utils.futures.a$f:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater -> a
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater -> c
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater -> e
    1:1:boolean casListeners(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Listener,androidx.work.impl.utils.futures.AbstractFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;Landroidx/work/impl/utils/futures/a$e;Landroidx/work/impl/utils/futures/a$e;)Z"}
    1:1:boolean casValue(androidx.work.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;Landroidx/work/impl/utils/futures/a$i;Landroidx/work/impl/utils/futures/a$i;)Z"}
    1:1:void putNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a$i;Landroidx/work/impl/utils/futures/a$i;)V"}
    1:1:void putThread(androidx.work.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a$i;Ljava/lang/Thread;)V"}
androidx.work.impl.utils.futures.AbstractFuture$SetFuture -> androidx.work.impl.utils.futures.a$g:
    androidx.work.impl.utils.futures.AbstractFuture owner -> e
    com.google.common.util.concurrent.ListenableFuture future -> f
    1:1:void <init>(androidx.work.impl.utils.futures.AbstractFuture,com.google.common.util.concurrent.ListenableFuture):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;Lo0/a;)V"}
androidx.work.impl.utils.futures.AbstractFuture$SynchronizedHelper -> androidx.work.impl.utils.futures.a$h:
    1:1:boolean casListeners(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Listener,androidx.work.impl.utils.futures.AbstractFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;Landroidx/work/impl/utils/futures/a$e;Landroidx/work/impl/utils/futures/a$e;)Z"}
    1:1:boolean casValue(androidx.work.impl.utils.futures.AbstractFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.work.impl.utils.futures.AbstractFuture,androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a;Landroidx/work/impl/utils/futures/a$i;Landroidx/work/impl/utils/futures/a$i;)Z"}
    1:1:void putNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter,androidx.work.impl.utils.futures.AbstractFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a$i;Landroidx/work/impl/utils/futures/a$i;)V"}
    1:1:void putThread(androidx.work.impl.utils.futures.AbstractFuture$Waiter,java.lang.Thread):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a$i;Ljava/lang/Thread;)V"}
androidx.work.impl.utils.futures.AbstractFuture$Waiter -> androidx.work.impl.utils.futures.a$i:
    java.lang.Thread thread -> a
    androidx.work.impl.utils.futures.AbstractFuture$Waiter next -> b
    androidx.work.impl.utils.futures.AbstractFuture$Waiter TOMBSTONE -> c
    1:1:void <init>():0:0 -> <init>
    void <init>(boolean) -> <init>
    1:1:void setNext(androidx.work.impl.utils.futures.AbstractFuture$Waiter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/a$i;)V"}
    1:1:void unpark():0:0 -> b
androidx.work.impl.utils.futures.DirectExecutor -> androidx.work.impl.utils.futures.b:
    androidx.work.impl.utils.futures.DirectExecutor INSTANCE -> e
    androidx.work.impl.utils.futures.DirectExecutor[] $VALUES -> f
    1:1:androidx.work.impl.utils.futures.DirectExecutor[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Landroidx/work/impl/utils/futures/b;"}
androidx.work.impl.utils.futures.SettableFuture -> androidx.work.impl.utils.futures.c:
    1:1:boolean set(java.lang.Object):0:0 -> p
    1:1:boolean setException(java.lang.Throwable):0:0 -> q
    1:1:boolean setFuture(com.google.common.util.concurrent.ListenableFuture):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/a;)Z"}
    1:1:androidx.work.impl.utils.futures.SettableFuture create():0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/impl/utils/futures/c;"}
androidx.work.impl.utils.taskexecutor.SerialExecutor -> l0.a:
    boolean hasPendingTasks() -> K
androidx.work.impl.utils.taskexecutor.TaskExecutor -> l0.c:
    void executeOnTaskThread(java.lang.Runnable) -> a
    java.util.concurrent.Executor getMainThreadExecutor() -> b
    androidx.work.impl.utils.taskexecutor.SerialExecutor getSerialTaskExecutor() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/a;"}
    kotlinx.coroutines.CoroutineDispatcher getTaskCoroutineDispatcher() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/a0;"}
androidx.work.impl.utils.taskexecutor.TaskExecutor$-CC -> l0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:8:void androidx.work.impl.utils.taskexecutor.TaskExecutor.executeOnTaskThread(java.lang.Runnable):0:0 -> a
    1:8:void $default$executeOnTaskThread(androidx.work.impl.utils.taskexecutor.TaskExecutor,java.lang.Runnable):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/c;Ljava/lang/Runnable;)V"}
androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor -> l0.d:
    androidx.work.impl.utils.SerialExecutorImpl mBackgroundExecutor -> a
    kotlinx.coroutines.CoroutineDispatcher mTaskDispatcher -> b
    android.os.Handler mMainThreadHandler -> c
    java.util.concurrent.Executor mMainThreadExecutor -> d
    1:1:void <init>(java.util.concurrent.Executor):0:0 -> <init>
    1:1:void executeOnTaskThread(java.lang.Runnable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.concurrent.Executor getMainThreadExecutor():0:0 -> b
    1:1:androidx.work.impl.utils.taskexecutor.SerialExecutor getSerialTaskExecutor():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll0/a;"}
    1:1:kotlinx.coroutines.CoroutineDispatcher getTaskCoroutineDispatcher():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/a0;"}
    1:1:androidx.work.impl.utils.SerialExecutorImpl getSerialTaskExecutor():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/u;"}
androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor$1 -> l0.d$a:
    androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor this$0 -> e
    1:1:void <init>(androidx.work.impl.utils.taskexecutor.WorkManagerTaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/d;)V"}
    1:1:void execute(java.lang.Runnable):0:0 -> execute
androidx.work.impl.workers.CombineContinuationsWorker -> androidx.work.impl.workers.CombineContinuationsWorker:
    1:1:androidx.work.ListenableWorker$Result doWork():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/c$a;"}
androidx.work.impl.workers.ConstraintTrackingWorker -> androidx.work.impl.workers.ConstraintTrackingWorker:
    androidx.work.WorkerParameters workerParameters -> e
    java.lang.Object lock -> f
    boolean areConstraintsUnmet -> g
    androidx.work.impl.utils.futures.SettableFuture future -> h
    androidx.work.ListenableWorker delegate -> i
    1:1:void onConstraintsStateChanged(androidx.work.impl.model.WorkSpec,androidx.work.impl.constraints.ConstraintsState):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;Lg0/b;)V"}
    1:1:void onStopped():0:0 -> m
    1:1:com.google.common.util.concurrent.ListenableFuture startWork():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/a;"}
    1:1:void $r8$lambda$8l9einNrCv7f87OtAovLYk3Kx6Y(kotlinx.coroutines.Job):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;)V"}
    1:1:void $r8$lambda$RTKLpcwRu-iaj_5GXB0ZJoqSLng(androidx.work.impl.workers.ConstraintTrackingWorker,com.google.common.util.concurrent.ListenableFuture):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/workers/ConstraintTrackingWorker;Lo0/a;)V"}
    1:1:void $r8$lambda$wxwWb1SPyd6YmyhjXwGT_lgVTZk(androidx.work.impl.workers.ConstraintTrackingWorker):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void setupAndRunConstraintTrackingWork():0:0 -> t
    1:1:void setupAndRunConstraintTrackingWork$lambda$1(kotlinx.coroutines.Job):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;)V"}
    1:1:void setupAndRunConstraintTrackingWork$lambda$3(androidx.work.impl.workers.ConstraintTrackingWorker,com.google.common.util.concurrent.ListenableFuture):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/workers/ConstraintTrackingWorker;Lo0/a;)V"}
    1:1:void startWork$lambda$0(androidx.work.impl.workers.ConstraintTrackingWorker):0:0 -> w
androidx.work.impl.workers.ConstraintTrackingWorker$$ExternalSyntheticLambda0 -> m0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.workers.ConstraintTrackingWorker androidx.work.impl.workers.ConstraintTrackingWorker$$InternalSyntheticLambda$3$777a6927b410c2826e6c5a5b30d91a0a93875858656c44d5f7a9228c42d88207$0.f$0 -> e
    1:1:void androidx.work.impl.workers.ConstraintTrackingWorker$$InternalSyntheticLambda$3$777a6927b410c2826e6c5a5b30d91a0a93875858656c44d5f7a9228c42d88207$0.<init>(androidx.work.impl.workers.ConstraintTrackingWorker):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.work.impl.workers.ConstraintTrackingWorker$$InternalSyntheticLambda$3$777a6927b410c2826e6c5a5b30d91a0a93875858656c44d5f7a9228c42d88207$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.workers.ConstraintTrackingWorker$$ExternalSyntheticLambda1 -> m0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlinx.coroutines.Job androidx.work.impl.workers.ConstraintTrackingWorker$$InternalSyntheticLambda$4$8d12d4e3d607c622be407a47c0d3a2bc949f15a04bbdf98e656a3246f7f77acc$0.f$0 -> e
    1:1:void androidx.work.impl.workers.ConstraintTrackingWorker$$InternalSyntheticLambda$4$8d12d4e3d607c622be407a47c0d3a2bc949f15a04bbdf98e656a3246f7f77acc$0.<init>(kotlinx.coroutines.Job):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;)V"}
    1:1:void androidx.work.impl.workers.ConstraintTrackingWorker$$InternalSyntheticLambda$4$8d12d4e3d607c622be407a47c0d3a2bc949f15a04bbdf98e656a3246f7f77acc$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.workers.ConstraintTrackingWorker$$ExternalSyntheticLambda2 -> m0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.work.impl.workers.ConstraintTrackingWorker androidx.work.impl.workers.ConstraintTrackingWorker$$InternalSyntheticLambda$4$8d12d4e3d607c622be407a47c0d3a2bc949f15a04bbdf98e656a3246f7f77acc$1.f$0 -> e
    com.google.common.util.concurrent.ListenableFuture androidx.work.impl.workers.ConstraintTrackingWorker$$InternalSyntheticLambda$4$8d12d4e3d607c622be407a47c0d3a2bc949f15a04bbdf98e656a3246f7f77acc$1.f$1 -> f
    1:1:void androidx.work.impl.workers.ConstraintTrackingWorker$$InternalSyntheticLambda$4$8d12d4e3d607c622be407a47c0d3a2bc949f15a04bbdf98e656a3246f7f77acc$1.<init>(androidx.work.impl.workers.ConstraintTrackingWorker,com.google.common.util.concurrent.ListenableFuture):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/workers/ConstraintTrackingWorker;Lo0/a;)V"}
    1:1:void androidx.work.impl.workers.ConstraintTrackingWorker$$InternalSyntheticLambda$4$8d12d4e3d607c622be407a47c0d3a2bc949f15a04bbdf98e656a3246f7f77acc$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.work.impl.workers.ConstraintTrackingWorkerKt -> m0.d:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String access$getTAG$p():0:0 -> a
    1:1:boolean access$setFailed(androidx.work.impl.utils.futures.SettableFuture):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/c;)Z"}
    1:1:boolean access$setRetry(androidx.work.impl.utils.futures.SettableFuture):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/c;)Z"}
    1:1:boolean setFailed(androidx.work.impl.utils.futures.SettableFuture):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/c;)Z"}
    1:1:boolean setRetry(androidx.work.impl.utils.futures.SettableFuture):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/work/impl/utils/futures/c;)Z"}
androidx.work.impl.workers.DiagnosticsWorker -> androidx.work.impl.workers.DiagnosticsWorker:
    1:1:androidx.work.ListenableWorker$Result doWork():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/c$a;"}
androidx.work.impl.workers.DiagnosticsWorkerKt -> m0.e:
    java.lang.String TAG -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String access$getTAG$p():0:0 -> a
    1:1:java.lang.String access$workSpecRows(androidx.work.impl.model.WorkNameDao,androidx.work.impl.model.WorkTagDao,androidx.work.impl.model.SystemIdInfoDao,java.util.List):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/p;Lj0/c0;Lj0/k;Ljava/util/List;)Ljava/lang/String;"}
    1:1:java.lang.String workSpecRow(androidx.work.impl.model.WorkSpec,java.lang.String,java.lang.Integer,java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/w;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:java.lang.String workSpecRows(androidx.work.impl.model.WorkNameDao,androidx.work.impl.model.WorkTagDao,androidx.work.impl.model.SystemIdInfoDao,java.util.List):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/p;Lj0/c0;Lj0/k;Ljava/util/List;)Ljava/lang/String;"}
androidx.work.multiprocess.IListenableWorkerImpl -> androidx.work.multiprocess.IListenableWorkerImpl:
    java.lang.String DESCRIPTOR -> l
    void interrupt(byte[],androidx.work.multiprocess.IWorkManagerImplCallback) -> r
    void startWork(byte[],androidx.work.multiprocess.IWorkManagerImplCallback) -> w
androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy -> androidx.work.multiprocess.IListenableWorkerImpl$Stub$a:
    android.os.IBinder mRemote -> o
androidx.work.multiprocess.IWorkManagerImpl -> androidx.work.multiprocess.IWorkManagerImpl:
    java.lang.String DESCRIPTOR -> m
    void cancelWorkById(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback) -> C
    void cancelAllWorkByTag(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback) -> E
    void enqueueWorkRequests(byte[],androidx.work.multiprocess.IWorkManagerImplCallback) -> I
    void cancelAllWork(androidx.work.multiprocess.IWorkManagerImplCallback) -> Q
    void queryWorkInfo(byte[],androidx.work.multiprocess.IWorkManagerImplCallback) -> X
    void setForegroundAsync(byte[],androidx.work.multiprocess.IWorkManagerImplCallback) -> e
    void setProgress(byte[],androidx.work.multiprocess.IWorkManagerImplCallback) -> e0
    void enqueueContinuation(byte[],androidx.work.multiprocess.IWorkManagerImplCallback) -> i0
    void updateUniquePeriodicWorkRequest(java.lang.String,byte[],androidx.work.multiprocess.IWorkManagerImplCallback) -> n
    void cancelUniqueWork(java.lang.String,androidx.work.multiprocess.IWorkManagerImplCallback) -> v
androidx.work.multiprocess.IWorkManagerImpl$Stub$Proxy -> androidx.work.multiprocess.IWorkManagerImpl$Stub$a:
    android.os.IBinder mRemote -> o
androidx.work.multiprocess.IWorkManagerImplCallback -> androidx.work.multiprocess.IWorkManagerImplCallback:
    java.lang.String DESCRIPTOR -> n
    void onFailure(java.lang.String) -> U
    void onSuccess(byte[]) -> g
androidx.work.multiprocess.IWorkManagerImplCallback$Stub$Proxy -> androidx.work.multiprocess.IWorkManagerImplCallback$Stub$a:
    android.os.IBinder mRemote -> o
com.baseflow.permissionhandler.AppSettingsManager -> n0.a:
    void <init>() -> <init>
    1:1:void openAppSettings(android.content.Context,com.baseflow.permissionhandler.AppSettingsManager$OpenAppSettingsSuccessCallback,com.baseflow.permissionhandler.ErrorCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ln0/a$a;Ln0/b;)V"}
com.baseflow.permissionhandler.AppSettingsManager$OpenAppSettingsSuccessCallback -> n0.a$a:
    void onSuccess(boolean) -> a
com.baseflow.permissionhandler.ErrorCallback -> n0.b:
    void onError(java.lang.String,java.lang.String) -> a
com.baseflow.permissionhandler.MethodCallHandlerImpl -> n0.l:
    android.content.Context applicationContext -> a
    com.baseflow.permissionhandler.AppSettingsManager appSettingsManager -> b
    com.baseflow.permissionhandler.PermissionManager permissionManager -> c
    com.baseflow.permissionhandler.ServiceManager serviceManager -> d
    1:1:void <init>(android.content.Context,com.baseflow.permissionhandler.AppSettingsManager,com.baseflow.permissionhandler.PermissionManager,com.baseflow.permissionhandler.ServiceManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ln0/a;Ln0/u;Ln0/c0;)V"}
    1:1:void $r8$lambda$AaygE11VixcKoKxi2oierHUCg_U(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void $r8$lambda$lk5T7z9CZr_kRsdWPJdSt_kHRsU(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void $r8$lambda$q7Tl8y0r1dZ06shK3VJv08xkMY8(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void $r8$lambda$z-5Y05bp5oQnzz_VynnxR9WkAQM(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void lambda$onMethodCall$0(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void lambda$onMethodCall$1(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void lambda$onMethodCall$2(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void lambda$onMethodCall$3(io.flutter.plugin.common.MethodChannel$Result,java.lang.String,java.lang.String):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
com.baseflow.permissionhandler.MethodCallHandlerImpl$$ExternalSyntheticLambda0 -> n0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$0.f$0 -> a
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$0.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$0.onSuccess(int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.MethodCallHandlerImpl$$ExternalSyntheticLambda1 -> n0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$1.f$0 -> a
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$1.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$1.onError(java.lang.String,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.MethodCallHandlerImpl$$ExternalSyntheticLambda2 -> n0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$2.f$0 -> a
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$2.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$2.onSuccess(int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.MethodCallHandlerImpl$$ExternalSyntheticLambda3 -> n0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$3.f$0 -> a
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$3.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$3.onSuccess(java.util.Map):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.MethodCallHandlerImpl$$ExternalSyntheticLambda4 -> n0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$4.f$0 -> a
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$4.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$4.onError(java.lang.String,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.MethodCallHandlerImpl$$ExternalSyntheticLambda5 -> n0.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$5.f$0 -> a
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$5.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$5.onSuccess(boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.MethodCallHandlerImpl$$ExternalSyntheticLambda6 -> n0.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$6.f$0 -> a
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$6.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$6.onError(java.lang.String,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.MethodCallHandlerImpl$$ExternalSyntheticLambda7 -> n0.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$7.f$0 -> a
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$7.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$7.onSuccess(boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.MethodCallHandlerImpl$$ExternalSyntheticLambda8 -> n0.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$8.f$0 -> a
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$8.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void com.baseflow.permissionhandler.MethodCallHandlerImpl$$InternalSyntheticLambda$2$7449e28ed4fd7c67ffdc9c62498df061a71f950da20c040a72ac26e9fe19e1a4$8.onError(java.lang.String,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.PermissionHandlerPlugin -> n0.m:
    com.baseflow.permissionhandler.PermissionManager permissionManager -> a
    io.flutter.plugin.common.MethodChannel methodChannel -> b
    io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding pluginBinding -> c
    com.baseflow.permissionhandler.MethodCallHandlerImpl methodCallHandler -> d
    void <init>() -> <init>
    1:1:void deregisterListeners():0:0 -> a
    1:1:void registerListeners():0:0 -> b
    1:1:void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/c;)V"}
    1:1:void startListening(android.content.Context,io.flutter.plugin.common.BinaryMessenger):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lz0/b;)V"}
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    1:1:void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/c;)V"}
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    1:1:void onDetachedFromActivity():0:0 -> h
    1:1:void startListeningToActivity(android.app.Activity):0:0 -> i
    1:1:void onDetachedFromActivityForConfigChanges():0:0 -> j
    1:1:void stopListening():0:0 -> k
    1:1:void stopListeningToActivity():0:0 -> l
com.baseflow.permissionhandler.PermissionManager -> n0.u:
    android.content.Context context -> a
    com.baseflow.permissionhandler.PermissionManager$RequestPermissionsSuccessCallback successCallback -> b
    android.app.Activity activity -> c
    int pendingRequestCount -> d
    java.util.Map requestResults -> e
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> a
    1:1:int checkBluetoothPermissionStatus():0:0 -> b
    1:1:boolean onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> c
    1:1:int checkNotificationPermissionStatus():0:0 -> d
    1:1:void checkPermissionStatus(int,com.baseflow.permissionhandler.PermissionManager$CheckPermissionsSuccessCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILn0/u$a;)V"}
    1:1:int determinePermissionStatus(int):0:0 -> f
    1:1:boolean isValidManifestForCalendarFullAccess():0:0 -> g
    1:1:void launchSpecialPermission(java.lang.String,int):0:0 -> h
    1:1:void requestPermissions(java.util.List,com.baseflow.permissionhandler.PermissionManager$RequestPermissionsSuccessCallback,com.baseflow.permissionhandler.ErrorCallback):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ln0/u$b;Ln0/b;)V"}
    1:1:void setActivity(android.app.Activity):0:0 -> j
    1:1:void shouldShowRequestPermissionRationale(int,com.baseflow.permissionhandler.PermissionManager$ShouldShowRequestPermissionRationaleSuccessCallback,com.baseflow.permissionhandler.ErrorCallback):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILn0/u$c;Ln0/b;)V"}
com.baseflow.permissionhandler.PermissionManager$$ExternalSyntheticApiModelOutline0 -> n0.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.baseflow.permissionhandler.PermissionManager$$InternalSyntheticApiModelOutline$1$48a46addaa29079568d372026fc7d0342d923776a767bbbf8d07b39414984b25$0.m(android.os.PowerManager,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.PermissionManager$$ExternalSyntheticApiModelOutline1 -> n0.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.baseflow.permissionhandler.PermissionManager$$InternalSyntheticApiModelOutline$1$48a46addaa29079568d372026fc7d0342d923776a767bbbf8d07b39414984b25$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.PermissionManager$$ExternalSyntheticApiModelOutline2 -> n0.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.baseflow.permissionhandler.PermissionManager$$InternalSyntheticApiModelOutline$1$48a46addaa29079568d372026fc7d0342d923776a767bbbf8d07b39414984b25$2.m(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.PermissionManager$$ExternalSyntheticApiModelOutline3 -> n0.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.baseflow.permissionhandler.PermissionManager$$InternalSyntheticApiModelOutline$1$48a46addaa29079568d372026fc7d0342d923776a767bbbf8d07b39414984b25$3.m(android.content.pm.PackageManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.PermissionManager$$ExternalSyntheticApiModelOutline4 -> n0.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.baseflow.permissionhandler.PermissionManager$$InternalSyntheticApiModelOutline$1$48a46addaa29079568d372026fc7d0342d923776a767bbbf8d07b39414984b25$4.m(android.app.NotificationManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.PermissionManager$$ExternalSyntheticApiModelOutline5 -> n0.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.baseflow.permissionhandler.PermissionManager$$InternalSyntheticApiModelOutline$1$48a46addaa29079568d372026fc7d0342d923776a767bbbf8d07b39414984b25$5.m(android.app.AlarmManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.PermissionManager$$ExternalSyntheticApiModelOutline6 -> n0.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int com.baseflow.permissionhandler.PermissionManager$$InternalSyntheticApiModelOutline$2$5dbb27cd3ff8763f0873bcadc8c022a0fb2e0ce557c737e7481bb51ebc42ad39$0.m(android.content.Context,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.PermissionManager$CheckPermissionsSuccessCallback -> n0.u$a:
    void onSuccess(int) -> a
com.baseflow.permissionhandler.PermissionManager$RequestPermissionsSuccessCallback -> n0.u$b:
    void onSuccess(java.util.Map) -> a
com.baseflow.permissionhandler.PermissionManager$ShouldShowRequestPermissionRationaleSuccessCallback -> n0.u$c:
    void onSuccess(boolean) -> a
com.baseflow.permissionhandler.PermissionUtils -> n0.y:
    1:1:java.lang.String determineBluetoothPermission(android.content.Context,java.lang.String):0:0 -> a
    1:1:int determineDeniedVariant(android.app.Activity,java.lang.String):0:0 -> b
    1:1:java.util.List getManifestNames(android.content.Context,int):0:0 -> c
    1:1:android.content.pm.PackageInfo getPackageInfo(android.content.Context):0:0 -> d
    1:1:boolean hasPermissionInManifest(android.content.Context,java.util.ArrayList,java.lang.String):0:0 -> e
    1:1:boolean isNeverAskAgainSelected(android.app.Activity,java.lang.String):0:0 -> f
    1:1:int parseManifestName(java.lang.String):0:0 -> g
    1:1:void setPermissionDenied(android.content.Context,java.lang.String):0:0 -> h
    1:1:java.lang.Integer strictestStatus(java.lang.Integer,java.lang.Integer):0:0 -> i
    1:1:java.lang.Integer strictestStatus(java.util.Collection):0:0 -> j
    1:1:int toPermissionStatus(android.app.Activity,java.lang.String,int):0:0 -> k
    1:1:boolean wasPermissionDeniedBefore(android.content.Context,java.lang.String):0:0 -> l
com.baseflow.permissionhandler.PermissionUtils$$ExternalSyntheticApiModelOutline0 -> n0.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.baseflow.permissionhandler.PermissionUtils$$InternalSyntheticApiModelOutline$2$c6074040a824abdf3697a73176c7069547acc75cc5b1a4d1461e738675fe7eb0$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.PermissionUtils$$ExternalSyntheticApiModelOutline1 -> n0.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.PackageManager$PackageInfoFlags com.baseflow.permissionhandler.PermissionUtils$$InternalSyntheticApiModelOutline$3$b58ad4ba4cce2629bd4556726ae6fe822d30c53bddd882e357988d94f0983a53$0.m(long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.PermissionUtils$$ExternalSyntheticApiModelOutline2 -> n0.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.PackageInfo com.baseflow.permissionhandler.PermissionUtils$$InternalSyntheticApiModelOutline$3$b58ad4ba4cce2629bd4556726ae6fe822d30c53bddd882e357988d94f0983a53$1.m(android.content.pm.PackageManager,java.lang.String,android.content.pm.PackageManager$PackageInfoFlags):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.ServiceManager -> n0.c0:
    void <init>() -> <init>
    1:1:void checkServiceStatus(int,android.content.Context,com.baseflow.permissionhandler.ServiceManager$SuccessCallback,com.baseflow.permissionhandler.ErrorCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroid/content/Context;Ln0/c0$a;Ln0/b;)V"}
    1:1:java.util.List getCallAppsList(android.content.pm.PackageManager):0:0 -> b
    1:1:boolean isBluetoothServiceEnabled(android.content.Context):0:0 -> c
    1:1:boolean isLocationServiceEnabled(android.content.Context):0:0 -> d
    1:1:boolean isLocationServiceEnabledKitKat(android.content.Context):0:0 -> e
com.baseflow.permissionhandler.ServiceManager$$ExternalSyntheticApiModelOutline0 -> n0.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean com.baseflow.permissionhandler.ServiceManager$$InternalSyntheticApiModelOutline$3$a822de6843e5023ef8ed4f974984d746882076d7b00fd4c40e04d00ac14e352d$1.m(android.location.LocationManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.ServiceManager$$ExternalSyntheticApiModelOutline1 -> n0.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.PackageManager$ResolveInfoFlags com.baseflow.permissionhandler.ServiceManager$$InternalSyntheticApiModelOutline$3$f1c900f5815ac94f8862664df169e991f2888a9acace12cfa60110ed05d044f5$0.m(long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.ServiceManager$$ExternalSyntheticApiModelOutline2 -> n0.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List com.baseflow.permissionhandler.ServiceManager$$InternalSyntheticApiModelOutline$3$f1c900f5815ac94f8862664df169e991f2888a9acace12cfa60110ed05d044f5$1.m(android.content.pm.PackageManager,android.content.Intent,android.content.pm.PackageManager$ResolveInfoFlags):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
com.baseflow.permissionhandler.ServiceManager$SuccessCallback -> n0.c0$a:
    void onSuccess(int) -> a
com.google.common.util.concurrent.ListenableFuture -> o0.a:
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> a
com.llfbandit.app_links.AppLinksHelper -> p0.a:
    1:1:java.lang.String getDeepLinkFromIntent(android.content.Intent):0:0 -> a
    1:1:java.lang.String getShortDeepLink(android.content.Intent):0:0 -> b
    1:1:java.lang.String getUrl(android.content.Intent):0:0 -> c
com.llfbandit.app_links.AppLinksPlugin -> p0.b:
    io.flutter.plugin.common.MethodChannel methodChannel -> a
    io.flutter.plugin.common.EventChannel eventChannel -> b
    io.flutter.plugin.common.EventChannel$EventSink eventSink -> c
    io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding binding -> d
    java.lang.String initialLink -> e
    boolean initialLinkSent -> f
    java.lang.String latestLink -> g
    1:1:void <init>():0:0 -> <init>
    1:1:void onCancel(java.lang.Object):0:0 -> a
    1:1:boolean onNewIntent(android.content.Intent):0:0 -> b
    1:1:void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/c;)V"}
    1:1:void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/c$b;)V"}
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    1:1:void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/c;)V"}
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    1:1:void onDetachedFromActivity():0:0 -> h
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void onDetachedFromActivityForConfigChanges():0:0 -> j
    1:1:boolean handleIntent(android.content.Intent):0:0 -> k
io.flutter.FlutterInjector -> q0.a:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory -> b
    java.util.concurrent.ExecutorService executorService -> c
    io.flutter.FlutterInjector instance -> d
    boolean accessed -> e
    1:1:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d;Ls0/a;Lio/flutter/embedding/engine/FlutterJNI$c;Ljava/util/concurrent/ExecutorService;)V"}
    2:2:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService,io.flutter.FlutterInjector$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d;Ls0/a;Lio/flutter/embedding/engine/FlutterJNI$c;Ljava/util/concurrent/ExecutorService;Lq0/a$a;)V"}
    1:1:io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls0/a;"}
    1:1:java.util.concurrent.ExecutorService executorService():0:0 -> b
    1:1:io.flutter.embedding.engine.loader.FlutterLoader flutterLoader():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt0/d;"}
    1:1:io.flutter.embedding.engine.FlutterJNI$Factory getFlutterJNIFactory():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/FlutterJNI$c;"}
    1:1:io.flutter.FlutterInjector instance():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq0/a;"}
io.flutter.FlutterInjector$1 -> q0.a$a:
io.flutter.FlutterInjector$Builder -> q0.a$b:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory -> b
    java.util.concurrent.ExecutorService executorService -> c
    void <init>() -> <init>
    1:1:io.flutter.FlutterInjector build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq0/a;"}
    1:1:void fillDefaults():0:0 -> b
io.flutter.FlutterInjector$Builder$NamedThreadFactory -> q0.a$b$a:
    int threadId -> a
    io.flutter.FlutterInjector$Builder this$0 -> b
    1:1:void <init>(io.flutter.FlutterInjector$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/a$b;)V"}
    2:2:void <init>(io.flutter.FlutterInjector$Builder,io.flutter.FlutterInjector$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/a$b;Lq0/a$a;)V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
io.flutter.Log -> q0.b:
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void d(java.lang.String,java.lang.String):0:0 -> a
    1:1:void e(java.lang.String,java.lang.String):0:0 -> b
    1:1:void e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> c
    1:1:java.lang.String getStackTraceString(java.lang.Throwable):0:0 -> d
    1:1:void i(java.lang.String,java.lang.String):0:0 -> e
    1:1:void v(java.lang.String,java.lang.String):0:0 -> f
    1:1:void w(java.lang.String,java.lang.String):0:0 -> g
    1:1:void w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> h
io.flutter.embedding.android.AndroidTouchProcessor -> io.flutter.embedding.android.c:
    io.flutter.embedding.engine.renderer.FlutterRenderer renderer -> a
    io.flutter.embedding.android.MotionEventTracker motionEventTracker -> b
    boolean trackMotionEvents -> c
    java.util.Map ongoingPans -> d
    int cachedVerticalScrollFactor -> e
    android.graphics.Matrix IDENTITY_TRANSFORM -> f
    1:1:void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer):0:0 -> a
    1:1:void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer,android.content.Context):0:0 -> b
    1:1:float getHorizontalScrollFactor(android.content.Context):0:0 -> c
    1:1:int getPointerChangeForAction(int):0:0 -> d
    1:1:int getPointerChangeForPanZoom(int):0:0 -> e
    1:1:int getPointerDeviceTypeForToolType(int):0:0 -> f
    1:1:float getVerticalScrollFactor(android.content.Context):0:0 -> g
    1:1:float getVerticalScrollFactorAbove26(android.content.Context):0:0 -> h
    1:1:int getVerticalScrollFactorPre26(android.content.Context):0:0 -> i
    1:1:boolean onGenericMotionEvent(android.view.MotionEvent,android.content.Context):0:0 -> j
    1:1:boolean onTouchEvent(android.view.MotionEvent):0:0 -> k
    1:1:boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix):0:0 -> l
io.flutter.embedding.android.AndroidTouchProcessor$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.android.AndroidTouchProcessor$$InternalSyntheticApiModelOutline$1$40d1bdd3d9a4ae6292f4999315675ea20ec0780bb2ad4da275be9f3530c5b86d$0.m(android.view.ViewConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.AndroidTouchProcessor$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.android.AndroidTouchProcessor$$InternalSyntheticApiModelOutline$1$6235febe81a466ec2127c50ba238fb0c515d3798be5ce3f658a4f9d1e01cc5e1$0.m(android.view.ViewConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.ExclusiveAppComponent -> io.flutter.embedding.android.d:
    void detachFromFlutterEngine() -> e
    java.lang.Object getAppComponent() -> f
io.flutter.embedding.android.FlutterActivity -> io.flutter.embedding.android.i:
    boolean hasRegisteredBackCallback -> a
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate -> b
    androidx.lifecycle.LifecycleRegistry lifecycle -> c
    android.window.OnBackInvokedCallback onBackInvokedCallback -> d
    int FLUTTER_VIEW_ID -> e
    1:1:boolean shouldHandleDeeplinking():0:0 -> A
    1:1:io.flutter.embedding.android.TransparencyMode getTransparencyMode():0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/q0;"}
    1:1:void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)V"}
    1:1:void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    1:1:void cancelBackGesture():0:0 -> E
    1:1:void commitBackGesture():0:0 -> F
    1:1:void configureStatusBarForFullscreenFlutterExperience():0:0 -> G
    1:1:void configureWindowForTransparency():0:0 -> H
    1:1:android.view.View createFlutterView():0:0 -> I
    1:1:android.window.OnBackInvokedCallback createOnBackInvokedCallback():0:0 -> J
    1:1:io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode():0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/k;"}
    1:1:io.flutter.embedding.engine.FlutterEngine getFlutterEngine():0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/a;"}
    1:1:android.os.Bundle getMetaData():0:0 -> M
    1:1:boolean isDebuggable():0:0 -> N
    1:1:void registerOnBackInvokedCallback():0:0 -> O
    1:1:void release():0:0 -> P
    1:1:void startBackGesture(android.window.BackEvent):0:0 -> Q
    1:1:boolean stillAttachedForEvent(java.lang.String):0:0 -> R
    1:1:void switchLaunchThemeForNormalTheme():0:0 -> S
    1:1:void unregisterOnBackInvokedCallback():0:0 -> T
    1:1:void updateBackGestureProgress(android.window.BackEvent):0:0 -> U
    1:1:boolean popSystemNavigator():0:0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:android.content.Context getContext():0:0 -> c
    1:1:android.app.Activity getActivity():0:0 -> d
    1:1:void detachFromFlutterEngine():0:0 -> e
    1:1:void onFlutterUiDisplayed():0:0 -> f
    1:1:void setFrameworkHandlesBack(boolean):0:0 -> g
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h;"}
    1:1:java.lang.String getCachedEngineGroupId():0:0 -> i
    1:1:java.lang.String getInitialRoute():0:0 -> j
    1:1:io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/l;"}
    1:1:java.util.List getDartEntrypointArgs():0:0 -> l
    1:1:boolean shouldAttachEngineToActivity():0:0 -> m
    1:1:io.flutter.embedding.android.RenderMode getRenderMode():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/p0;"}
    1:1:boolean shouldDestroyEngineWithHost():0:0 -> o
    1:1:boolean attachToEngineAutomatically():0:0 -> p
    1:1:boolean shouldDispatchAppLifecycleState():0:0 -> q
    1:1:java.lang.String getCachedEngineId():0:0 -> r
    1:1:boolean shouldRestoreAndSaveState():0:0 -> s
    1:1:java.lang.String getDartEntrypointFunctionName():0:0 -> t
    1:1:void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    1:1:java.lang.String getDartEntrypointLibraryUri():0:0 -> v
    1:1:io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lio/flutter/embedding/engine/a;)Lio/flutter/plugin/platform/h;"}
    1:1:void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)V"}
    1:1:java.lang.String getAppBundlePath():0:0 -> y
    1:1:io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lio/flutter/embedding/engine/a;"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.window.OnBackInvokedDispatcher io.flutter.embedding.android.FlutterActivity$$InternalSyntheticApiModelOutline$1$4a058921c8974a8c38611995d69c484b95f39d7f62bb539ba29e4b33e9e4bf7a$0.m(io.flutter.embedding.android.FlutterActivity):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/i;)Landroid/window/OnBackInvokedDispatcher;"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticApiModelOutline$1$4a058921c8974a8c38611995d69c484b95f39d7f62bb539ba29e4b33e9e4bf7a$1.m(android.window.OnBackInvokedDispatcher,android.window.OnBackInvokedCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.android.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticApiModelOutline$2$f6c463170a20e77c9917833bf47b4562ef9256679b78d93960abaa6bddcdbcef$1.m(android.window.OnBackInvokedDispatcher,int,android.window.OnBackInvokedCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticLambda3 -> io.flutter.embedding.android.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.FlutterActivity io.flutter.embedding.android.FlutterActivity$$InternalSyntheticLambda$1$543e0c1115ba3b1c026cffac3390e7ede24b8c07ebd0da6764a7a37076b68952$0.f$0 -> a
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticLambda$1$543e0c1115ba3b1c026cffac3390e7ede24b8c07ebd0da6764a7a37076b68952$0.<init>(io.flutter.embedding.android.FlutterActivity):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/i;)V"}
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticLambda$1$543e0c1115ba3b1c026cffac3390e7ede24b8c07ebd0da6764a7a37076b68952$0.onBackInvoked():0:0 -> onBackInvoked
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterActivity$1 -> io.flutter.embedding.android.i$a:
    io.flutter.embedding.android.FlutterActivity this$0 -> a
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate -> io.flutter.embedding.android.j:
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host -> a
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    io.flutter.embedding.android.FlutterView flutterView -> c
    io.flutter.plugin.platform.PlatformPlugin platformPlugin -> d
    android.view.ViewTreeObserver$OnPreDrawListener activePreDrawListener -> e
    boolean isFlutterEngineFromHost -> f
    boolean isFlutterUiDisplayed -> g
    boolean isFirstFrameRendered -> h
    boolean isAttached -> i
    java.lang.Integer previousVisibility -> j
    io.flutter.embedding.engine.FlutterEngineGroup engineGroup -> k
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> l
    1:1:void <init>(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j$c;)V"}
    2:2:void <init>(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j$c;Lio/flutter/embedding/engine/d;)V"}
    1:1:void onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> A
    1:1:void onRestoreInstanceState(android.os.Bundle):0:0 -> B
    1:1:void onResume():0:0 -> C
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> D
    1:1:void onStart():0:0 -> E
    1:1:void onStop():0:0 -> F
    1:1:void onTrimMemory(int):0:0 -> G
    1:1:void onUserLeaveHint():0:0 -> H
    1:1:void onWindowFocusChanged(boolean):0:0 -> I
    1:1:void release():0:0 -> J
    1:1:void setUpFlutterEngine():0:0 -> K
    1:1:void startBackGesture(android.window.BackEvent):0:0 -> L
    1:1:void updateBackGestureProgress(android.window.BackEvent):0:0 -> M
    1:1:void updateSystemUiOverlays():0:0 -> N
    1:1:io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;)Lio/flutter/embedding/android/j$c;"}
    1:1:boolean access$100(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;)Z"}
    1:1:boolean access$102(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;Z)Z"}
    1:1:boolean access$202(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;Z)Z"}
    1:1:void detachFromFlutterEngine():0:0 -> e
    1:1:java.lang.Object getAppComponent():0:0 -> f
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options addEntrypointOptions(io.flutter.embedding.engine.FlutterEngineGroup$Options):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/d$b;)Lio/flutter/embedding/engine/d$b;"}
    1:1:void cancelBackGesture():0:0 -> h
    1:1:void commitBackGesture():0:0 -> i
    1:1:void delayFirstAndroidViewDraw(io.flutter.embedding.android.FlutterView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)V"}
    1:1:void doInitialFlutterViewRun():0:0 -> k
    1:1:void ensureAlive():0:0 -> l
    1:1:android.app.Activity getAppComponent():0:0 -> m
    1:1:io.flutter.embedding.engine.FlutterEngine getFlutterEngine():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/a;"}
    1:1:boolean isAttached():0:0 -> o
    1:1:boolean isFlutterEngineFromHost():0:0 -> p
    1:1:java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent):0:0 -> q
    1:1:void onActivityResult(int,int,android.content.Intent):0:0 -> r
    1:1:void onAttach(android.content.Context):0:0 -> s
    1:1:void onBackPressed():0:0 -> t
    1:1:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,int,boolean):0:0 -> u
    1:1:void onDestroyView():0:0 -> v
    1:1:void onDetach():0:0 -> w
    1:1:void onNewIntent(android.content.Intent):0:0 -> x
    1:1:void onPause():0:0 -> y
    1:1:void onPostResume():0:0 -> z
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1 -> io.flutter.embedding.android.j$a:
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2 -> io.flutter.embedding.android.j$b:
    io.flutter.embedding.android.FlutterView val$flutterView -> a
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0 -> b
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host -> io.flutter.embedding.android.j$c:
    boolean shouldHandleDeeplinking() -> A
    io.flutter.embedding.android.TransparencyMode getTransparencyMode() -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/q0;"}
    void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView) -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)V"}
    void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    void onFlutterUiNoLongerDisplayed() -> b
    android.content.Context getContext() -> c
    android.app.Activity getActivity() -> d
    void detachFromFlutterEngine() -> e
    void onFlutterUiDisplayed() -> f
    androidx.lifecycle.Lifecycle getLifecycle() -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h;"}
    java.lang.String getCachedEngineGroupId() -> i
    java.lang.String getInitialRoute() -> j
    io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs() -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/l;"}
    java.util.List getDartEntrypointArgs() -> l
    boolean shouldAttachEngineToActivity() -> m
    io.flutter.embedding.android.RenderMode getRenderMode() -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/p0;"}
    boolean shouldDestroyEngineWithHost() -> o
    boolean attachToEngineAutomatically() -> p
    boolean shouldDispatchAppLifecycleState() -> q
    java.lang.String getCachedEngineId() -> r
    boolean shouldRestoreAndSaveState() -> s
    java.lang.String getDartEntrypointFunctionName() -> t
    void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    java.lang.String getDartEntrypointLibraryUri() -> v
    io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine) -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lio/flutter/embedding/engine/a;)Lio/flutter/plugin/platform/h;"}
    void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView) -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)V"}
    java.lang.String getAppBundlePath() -> y
    io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context) -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lio/flutter/embedding/engine/a;"}
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode -> io.flutter.embedding.android.k:
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque -> e
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent -> f
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES -> g
    1:1:io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/k;"}
io.flutter.embedding.android.FlutterImageView -> io.flutter.embedding.android.r:
    android.media.ImageReader imageReader -> a
    android.media.Image currentImage -> b
    android.graphics.Bitmap currentBitmap -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> d
    io.flutter.embedding.android.FlutterImageView$SurfaceKind kind -> e
    boolean isAttachedToFlutterRenderer -> f
    1:1:void <init>(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;IILio/flutter/embedding/android/r$b;)V"}
    2:2:void <init>(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/media/ImageReader;Lio/flutter/embedding/android/r$b;)V"}
    1:1:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> a
    1:1:void pause():0:0 -> b
    1:1:void detachFromRenderer():0:0 -> c
    1:1:void resume():0:0 -> d
    1:1:boolean acquireLatestImage():0:0 -> e
    1:1:void closeCurrentImage():0:0 -> f
    1:1:void closeImageReader():0:0 -> g
    1:1:android.media.ImageReader createImageReader(int,int):0:0 -> h
    1:1:void init():0:0 -> i
    1:1:void logW(java.lang.String,java.lang.Object[]):0:0 -> j
    1:1:void resizeIfNeeded(int,int):0:0 -> k
    1:1:void updateCurrentBitmap():0:0 -> l
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$bf67bebaa6e8ab187d9f1bff46ef87b185aa6936818b5d195eccda11d5391fa1$0.m(int,int,int,int,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.hardware.HardwareBuffer io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$0.m(android.media.Image):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.android.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace$Named io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.android.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$2.m(android.graphics.ColorSpace$Named):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline4 -> io.flutter.embedding.android.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$3.m(android.hardware.HardwareBuffer,android.graphics.ColorSpace):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline5 -> io.flutter.embedding.android.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$4.m(android.hardware.HardwareBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$1 -> io.flutter.embedding.android.r$a:
    int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind -> a
io.flutter.embedding.android.FlutterImageView$SurfaceKind -> io.flutter.embedding.android.r$b:
    io.flutter.embedding.android.FlutterImageView$SurfaceKind background -> e
    io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay -> f
    io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES -> g
    1:1:io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/r$b;"}
io.flutter.embedding.android.FlutterSurfaceView -> io.flutter.embedding.android.s:
    boolean renderTransparently -> a
    boolean isSurfaceAvailableForRendering -> b
    boolean isPaused -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> d
    android.view.SurfaceHolder$Callback surfaceCallback -> e
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> f
    1:1:void <init>(android.content.Context,android.util.AttributeSet,boolean):0:0 -> <init>
    2:2:void <init>(android.content.Context,boolean):0:0 -> <init>
    1:1:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> a
    1:1:void pause():0:0 -> b
    1:1:void detachFromRenderer():0:0 -> c
    1:1:void resume():0:0 -> d
    1:1:boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;Z)Z"}
    1:1:boolean access$100(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)Z"}
    1:1:void access$200(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)V"}
    1:1:void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;II)V"}
    1:1:void access$400(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)V"}
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)Lio/flutter/embedding/engine/renderer/FlutterRenderer;"}
    1:1:void changeSurfaceSize(int,int):0:0 -> k
    1:1:void connectSurfaceToRenderer():0:0 -> l
    1:1:void disconnectSurfaceFromRenderer():0:0 -> m
    1:1:void init():0:0 -> n
    1:1:boolean isSurfaceAvailableForRendering():0:0 -> o
    1:1:boolean shouldNotify():0:0 -> p
io.flutter.embedding.android.FlutterSurfaceView$1 -> io.flutter.embedding.android.s$a:
    io.flutter.embedding.android.FlutterSurfaceView this$0 -> a
io.flutter.embedding.android.FlutterSurfaceView$2 -> io.flutter.embedding.android.s$b:
    io.flutter.embedding.android.FlutterSurfaceView this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterTextureView -> io.flutter.embedding.android.t:
    boolean isSurfaceAvailableForRendering -> a
    boolean isPaused -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> c
    android.view.Surface renderSurface -> d
    android.view.TextureView$SurfaceTextureListener surfaceTextureListener -> e
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    1:1:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> a
    1:1:void pause():0:0 -> b
    1:1:void detachFromRenderer():0:0 -> c
    1:1:void resume():0:0 -> d
    1:1:boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;Z)Z"}
    1:1:boolean access$100(io.flutter.embedding.android.FlutterTextureView):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)Z"}
    1:1:void access$200(io.flutter.embedding.android.FlutterTextureView):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)V"}
    1:1:void access$300(io.flutter.embedding.android.FlutterTextureView,int,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;II)V"}
    1:1:void access$400(io.flutter.embedding.android.FlutterTextureView):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)V"}
    1:1:android.view.Surface access$500(io.flutter.embedding.android.FlutterTextureView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)Landroid/view/Surface;"}
    1:1:android.view.Surface access$502(io.flutter.embedding.android.FlutterTextureView,android.view.Surface):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;Landroid/view/Surface;)Landroid/view/Surface;"}
    1:1:void changeSurfaceSize(int,int):0:0 -> l
    1:1:void connectSurfaceToRenderer():0:0 -> m
    1:1:void disconnectSurfaceFromRenderer():0:0 -> n
    1:1:void init():0:0 -> o
    1:1:boolean isSurfaceAvailableForRendering():0:0 -> p
    1:1:boolean shouldNotify():0:0 -> q
io.flutter.embedding.android.FlutterTextureView$1 -> io.flutter.embedding.android.t$a:
    io.flutter.embedding.android.FlutterTextureView this$0 -> a
io.flutter.embedding.android.FlutterView -> io.flutter.embedding.android.e0:
    io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView -> a
    io.flutter.embedding.android.FlutterTextureView flutterTextureView -> b
    io.flutter.embedding.android.FlutterImageView flutterImageView -> c
    io.flutter.embedding.engine.renderer.RenderSurface renderSurface -> d
    io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface -> e
    java.util.Set flutterUiDisplayListeners -> f
    boolean isFlutterUiDisplayed -> g
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> h
    java.util.Set flutterEngineAttachmentListeners -> i
    io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin -> j
    io.flutter.plugin.editing.TextInputPlugin textInputPlugin -> k
    io.flutter.plugin.editing.SpellCheckPlugin spellCheckPlugin -> l
    io.flutter.plugin.localization.LocalizationPlugin localizationPlugin -> m
    io.flutter.embedding.android.KeyboardManager keyboardManager -> n
    io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor -> o
    io.flutter.view.AccessibilityBridge accessibilityBridge -> p
    android.view.textservice.TextServicesManager textServicesManager -> q
    io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper windowInfoRepo -> r
    io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics -> s
    io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener -> t
    android.database.ContentObserver systemSettingsObserver -> u
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> v
    androidx.core.util.Consumer windowInfoListener -> w
    1:1:void <init>(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;Lio/flutter/embedding/android/s;)V"}
    2:2:void <init>(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;Lio/flutter/embedding/android/t;)V"}
    3:3:void <init>(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/android/s;)V"}
    4:4:void <init>(android.content.Context,io.flutter.embedding.android.FlutterTextureView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/android/t;)V"}
    1:1:void revertImageView(java.lang.Runnable):0:0 -> A
    1:1:void sendUserSettingsToFlutter():0:0 -> B
    1:1:void sendViewportMetricsToFlutter():0:0 -> C
    1:1:void redispatch(android.view.KeyEvent):0:0 -> a
    1:1:boolean onTextInputKeyEvent(android.view.KeyEvent):0:0 -> b
    1:1:android.view.PointerIcon getSystemPointerIcon(int):0:0 -> c
    1:1:boolean $r8$lambda$d2mxEi96GCrk9QQKk7dEG7SoNrw(android.view.textservice.SpellCheckerInfo):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;ZZ)V"}
    1:1:io.flutter.embedding.engine.FlutterEngine access$100(io.flutter.embedding.android.FlutterView):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)Lio/flutter/embedding/engine/a;"}
    1:1:boolean access$202(io.flutter.embedding.android.FlutterView,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;Z)Z"}
    1:1:io.flutter.plugin.common.BinaryMessenger getBinaryMessenger():0:0 -> getBinaryMessenger
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz0/b;"}
    1:1:java.util.Set access$300(io.flutter.embedding.android.FlutterView):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)Ljava/util/Set;"}
    1:1:io.flutter.embedding.android.FlutterImageView access$400(io.flutter.embedding.android.FlutterView):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)Lio/flutter/embedding/android/r;"}
    1:1:void access$500(io.flutter.embedding.android.FlutterView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)V"}
    1:1:boolean acquireLatestImageViewFrame():0:0 -> k
    1:1:void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/j;)V"}
    1:1:void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;)V"}
    1:1:void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    1:1:io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/e0$f;"}
    1:1:void convertToImageView():0:0 -> p
    1:1:io.flutter.embedding.android.FlutterImageView createImageView():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/r;"}
    1:1:io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper createWindowInfoRepo():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/r0;"}
    1:1:void detachFromFlutterEngine():0:0 -> s
    1:1:void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo):0:0 -> setWindowInfoListenerDisplayFeatures
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/j;)V"}
    1:1:int guessBottomKeyboardInset(android.view.WindowInsets):0:0 -> t
    1:1:void init():0:0 -> u
    1:1:boolean isAttachedToFlutterEngine():0:0 -> v
    1:1:boolean lambda$sendUserSettingsToFlutter$0(android.view.textservice.SpellCheckerInfo):0:0 -> w
    1:1:void releaseImageView():0:0 -> x
    1:1:void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/j;)V"}
    1:1:void resetWillNotDraw(boolean,boolean):0:0 -> z
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$02bc130575321d6f7153919c9c0399495529118b10b6d4ed7fdcaac70f3e4629$0.m(io.flutter.embedding.android.FlutterView,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;I)V"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$098bad75e91e01c9cf58f2698a334adb9f54566cd7e946e95bf6296c3638371e$0.m(io.flutter.embedding.android.FlutterView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)Landroid/view/WindowInsets;"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.android.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$098bad75e91e01c9cf58f2698a334adb9f54566cd7e946e95bf6296c3638371e$2.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.android.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$1974b9bc396d10aaf33ea08c51ac9f006d75aeec6982d8513d441865065adf5a$25.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline4 -> io.flutter.embedding.android.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$0.m(android.view.textservice.TextServicesManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline5 -> io.flutter.embedding.android.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.stream.Stream io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$1.m(java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline6 -> io.flutter.embedding.android.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$3.m(java.util.stream.Stream,java.util.function.Predicate):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline7 -> io.flutter.embedding.android.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$4.m(android.view.textservice.TextServicesManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline8 -> io.flutter.embedding.android.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.PointerIcon io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$3$495da519877a75317e821ed8b69ee11ce60911adcbb1583f10aca20cfddcf862$0.m(android.content.Context,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticLambda9 -> io.flutter.embedding.android.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void io.flutter.embedding.android.FlutterView$$InternalSyntheticLambda$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$2.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.android.FlutterView$$InternalSyntheticLambda$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$2.test(java.lang.Object):0:0 -> test
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$1 -> io.flutter.embedding.android.e0$a:
    io.flutter.embedding.android.FlutterView this$0 -> a
    1:1:void onAccessibilityChanged(boolean,boolean):0:0 -> a
io.flutter.embedding.android.FlutterView$2 -> io.flutter.embedding.android.e0$b:
    io.flutter.embedding.android.FlutterView this$0 -> a
io.flutter.embedding.android.FlutterView$3 -> io.flutter.embedding.android.e0$c:
    io.flutter.embedding.android.FlutterView this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterView$4 -> io.flutter.embedding.android.e0$d:
    io.flutter.embedding.android.FlutterView this$0 -> a
    1:1:void accept(androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/j;)V"}
io.flutter.embedding.android.FlutterView$5 -> io.flutter.embedding.android.e0$e:
    io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer -> a
    java.lang.Runnable val$onDone -> b
    io.flutter.embedding.android.FlutterView this$0 -> c
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterView$ZeroSides -> io.flutter.embedding.android.e0$f:
    io.flutter.embedding.android.FlutterView$ZeroSides NONE -> e
    io.flutter.embedding.android.FlutterView$ZeroSides LEFT -> f
    io.flutter.embedding.android.FlutterView$ZeroSides RIGHT -> g
    io.flutter.embedding.android.FlutterView$ZeroSides BOTH -> h
    io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES -> i
    1:1:io.flutter.embedding.android.FlutterView$ZeroSides[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/e0$f;"}
io.flutter.embedding.android.KeyChannelResponder -> io.flutter.embedding.android.g0:
    io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel -> a
    io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.KeyEventChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/i;)V"}
    1:1:void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/m0$d$a;)V"}
    1:1:void $r8$lambda$2j1oQDNrug8exq2tp8d8ktXWyJI(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;Z)V"}
    1:1:void lambda$handleEvent$0(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;Z)V"}
io.flutter.embedding.android.KeyChannelResponder$$ExternalSyntheticLambda0 -> io.flutter.embedding.android.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback io.flutter.embedding.android.KeyChannelResponder$$InternalSyntheticLambda$1$cf5bb92e2b133ed4958c8cd4422a67f2702c41d504a4d346cc4c4bc1e1bd865e$0.f$0 -> a
    1:1:void io.flutter.embedding.android.KeyChannelResponder$$InternalSyntheticLambda$1$cf5bb92e2b133ed4958c8cd4422a67f2702c41d504a4d346cc4c4bc1e1bd865e$0.<init>(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;)V"}
    1:1:void io.flutter.embedding.android.KeyChannelResponder$$InternalSyntheticLambda$1$cf5bb92e2b133ed4958c8cd4422a67f2702c41d504a4d346cc4c4bc1e1bd865e$0.onFrameworkResponse(boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyData -> io.flutter.embedding.android.h0:
    long timestamp -> a
    io.flutter.embedding.android.KeyData$Type type -> b
    long physicalKey -> c
    long logicalKey -> d
    boolean synthesized -> e
    io.flutter.embedding.android.KeyData$DeviceType deviceType -> f
    java.lang.String character -> g
    1:1:java.nio.ByteBuffer toBytes():0:0 -> a
io.flutter.embedding.android.KeyData$DeviceType -> io.flutter.embedding.android.h0$a:
    long value -> e
    io.flutter.embedding.android.KeyData$DeviceType kKeyboard -> f
    io.flutter.embedding.android.KeyData$DeviceType kDirectionalPad -> g
    io.flutter.embedding.android.KeyData$DeviceType kGamepad -> h
    io.flutter.embedding.android.KeyData$DeviceType kJoystick -> i
    io.flutter.embedding.android.KeyData$DeviceType kHdmi -> j
    io.flutter.embedding.android.KeyData$DeviceType[] $VALUES -> k
    1:1:io.flutter.embedding.android.KeyData$DeviceType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/h0$a;"}
    1:1:long getValue():0:0 -> b
io.flutter.embedding.android.KeyData$Type -> io.flutter.embedding.android.h0$b:
    long value -> e
    io.flutter.embedding.android.KeyData$Type kDown -> f
    io.flutter.embedding.android.KeyData$Type kUp -> g
    io.flutter.embedding.android.KeyData$Type kRepeat -> h
    io.flutter.embedding.android.KeyData$Type[] $VALUES -> i
    1:1:io.flutter.embedding.android.KeyData$Type[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/h0$b;"}
    1:1:long getValue():0:0 -> b
io.flutter.embedding.android.KeyEmbedderResponder -> io.flutter.embedding.android.l0:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.util.HashMap pressingRecords -> b
    java.util.HashMap togglingGoals -> c
    io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner -> d
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;)V"}
    1:1:void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/m0$d$a;)V"}
    1:1:void $r8$lambda$Usbaa64Go-Inz_pnHu4Hlllp4NQ(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0;Lio/flutter/embedding/android/n0$c;Landroid/view/KeyEvent;)V"}
    1:1:void $r8$lambda$VKF-feFqVV2c2diHOYJl9TFRWNI(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;Ljava/nio/ByteBuffer;)V"}
    1:1:void $r8$lambda$u49qZcV7pBZIuZzpJy2XDxE4ka4(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0;Lio/flutter/embedding/android/n0$c;JLandroid/view/KeyEvent;)V"}
    1:1:io.flutter.embedding.android.KeyData$Type getEventType(android.view.KeyEvent):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;)Lio/flutter/embedding/android/h0$b;"}
    1:1:java.lang.Long getLogicalKey(android.view.KeyEvent):0:0 -> f
    1:1:java.lang.Long getPhysicalKey(android.view.KeyEvent):0:0 -> g
    1:1:java.util.Map getPressedState():0:0 -> h
    1:1:boolean handleEventImpl(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/m0$d$a;)Z"}
    1:1:long keyOfPlane(long,long):0:0 -> j
    1:1:void lambda$sendKeyEvent$2(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,java.nio.ByteBuffer):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;Ljava/nio/ByteBuffer;)V"}
    1:1:void lambda$synchronizePressingKey$0(io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/n0$c;JLandroid/view/KeyEvent;)V"}
    1:1:void lambda$synchronizePressingKey$1(io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/n0$c;Landroid/view/KeyEvent;)V"}
    1:1:void sendKeyEvent(io.flutter.embedding.android.KeyData,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/h0;Lio/flutter/embedding/android/m0$d$a;)V"}
    1:1:void synchronizePressingKey(io.flutter.embedding.android.KeyboardMap$PressingGoal,boolean,long,long,android.view.KeyEvent,java.util.ArrayList):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/n0$d;ZJJLandroid/view/KeyEvent;Ljava/util/ArrayList;)V"}
    1:1:void synchronizeTogglingKey(io.flutter.embedding.android.KeyboardMap$TogglingGoal,boolean,long,android.view.KeyEvent):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/n0$e;ZJLandroid/view/KeyEvent;)V"}
    1:1:void synthesizeEvent(boolean,java.lang.Long,java.lang.Long,long):0:0 -> q
    1:1:void updatePressingState(java.lang.Long,java.lang.Long):0:0 -> r
io.flutter.embedding.android.KeyEmbedderResponder$$ExternalSyntheticLambda0 -> io.flutter.embedding.android.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$6507d676e68eca9658ab3e3290a65055cc36dddf2daa4d3e93e689f917200d2b$0.f$0 -> a
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$6507d676e68eca9658ab3e3290a65055cc36dddf2daa4d3e93e689f917200d2b$0.<init>(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;)V"}
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$6507d676e68eca9658ab3e3290a65055cc36dddf2daa4d3e93e689f917200d2b$0.reply(java.nio.ByteBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyEmbedderResponder$$ExternalSyntheticLambda1 -> io.flutter.embedding.android.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyEmbedderResponder io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$0 -> e
    io.flutter.embedding.android.KeyboardMap$KeyPair io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$1 -> f
    long io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$2 -> g
    android.view.KeyEvent io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$3 -> h
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.<init>(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0;Lio/flutter/embedding/android/n0$c;JLandroid/view/KeyEvent;)V"}
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyEmbedderResponder$$ExternalSyntheticLambda2 -> io.flutter.embedding.android.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyEmbedderResponder io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.f$0 -> e
    io.flutter.embedding.android.KeyboardMap$KeyPair io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.f$1 -> f
    android.view.KeyEvent io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.f$2 -> g
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.<init>(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0;Lio/flutter/embedding/android/n0$c;Landroid/view/KeyEvent;)V"}
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyEmbedderResponder$1 -> io.flutter.embedding.android.l0$a:
    int[] $SwitchMap$io$flutter$embedding$android$KeyData$Type -> a
io.flutter.embedding.android.KeyboardManager -> io.flutter.embedding.android.m0:
    io.flutter.embedding.android.KeyboardManager$Responder[] responders -> a
    java.util.HashSet redispatchedEvents -> b
    io.flutter.embedding.android.KeyboardManager$ViewDelegate viewDelegate -> c
    1:1:java.util.Map getKeyboardState():0:0 -> a
    1:1:boolean handleEvent(android.view.KeyEvent):0:0 -> b
    1:1:void access$000(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0;Landroid/view/KeyEvent;)V"}
    1:1:void destroy():0:0 -> d
    1:1:void onUnhandled(android.view.KeyEvent):0:0 -> e
io.flutter.embedding.android.KeyboardManager$1 -> io.flutter.embedding.android.m0$a:
io.flutter.embedding.android.KeyboardManager$CharacterCombiner -> io.flutter.embedding.android.m0$b:
    int combiningCharacter -> a
    1:1:java.lang.Character applyCombiningCharacterToBaseCharacter(int):0:0 -> a
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder -> io.flutter.embedding.android.m0$c:
    android.view.KeyEvent keyEvent -> a
    int unrepliedCount -> b
    boolean isEventHandled -> c
    io.flutter.embedding.android.KeyboardManager this$0 -> d
    1:1:io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback buildCallback():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/m0$d$a;"}
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback -> io.flutter.embedding.android.m0$c$a:
    boolean isCalled -> a
    io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder this$1 -> b
    1:1:void <init>(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$c;)V"}
    2:2:void <init>(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder,io.flutter.embedding.android.KeyboardManager$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$c;Lio/flutter/embedding/android/m0$a;)V"}
    1:1:void onKeyEventHandled(boolean):0:0 -> a
io.flutter.embedding.android.KeyboardManager$Responder -> io.flutter.embedding.android.m0$d:
    void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/m0$d$a;)V"}
io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback -> io.flutter.embedding.android.m0$d$a:
    void onKeyEventHandled(boolean) -> a
io.flutter.embedding.android.KeyboardManager$ViewDelegate -> io.flutter.embedding.android.m0$e:
    void redispatch(android.view.KeyEvent) -> a
    boolean onTextInputKeyEvent(android.view.KeyEvent) -> b
    io.flutter.plugin.common.BinaryMessenger getBinaryMessenger() -> getBinaryMessenger
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz0/b;"}
io.flutter.embedding.android.KeyboardMap -> io.flutter.embedding.android.n0:
    java.util.HashMap scanCodeToPhysical -> a
    java.util.HashMap keyCodeToLogical -> b
    io.flutter.embedding.android.KeyboardMap$PressingGoal[] pressingGoals -> c
    1:1:io.flutter.embedding.android.KeyboardMap$TogglingGoal[] getTogglingGoals():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/n0$e;"}
io.flutter.embedding.android.KeyboardMap$1 -> io.flutter.embedding.android.n0$a:
io.flutter.embedding.android.KeyboardMap$2 -> io.flutter.embedding.android.n0$b:
io.flutter.embedding.android.KeyboardMap$KeyPair -> io.flutter.embedding.android.n0$c:
    long physicalKey -> a
    long logicalKey -> b
io.flutter.embedding.android.KeyboardMap$PressingGoal -> io.flutter.embedding.android.n0$d:
    int mask -> a
    io.flutter.embedding.android.KeyboardMap$KeyPair[] keys -> b
io.flutter.embedding.android.KeyboardMap$TogglingGoal -> io.flutter.embedding.android.n0$e:
    int mask -> a
    long physicalKey -> b
    long logicalKey -> c
    boolean enabled -> d
io.flutter.embedding.android.MotionEventTracker -> io.flutter.embedding.android.o0:
    android.util.LongSparseArray eventById -> a
    java.util.PriorityQueue unusedEvents -> b
    io.flutter.embedding.android.MotionEventTracker INSTANCE -> c
    1:1:io.flutter.embedding.android.MotionEventTracker getInstance():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/o0;"}
    1:1:android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/o0$a;)Landroid/view/MotionEvent;"}
    1:1:io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/MotionEvent;)Lio/flutter/embedding/android/o0$a;"}
io.flutter.embedding.android.MotionEventTracker$MotionEventId -> io.flutter.embedding.android.o0$a:
    long id -> a
    java.util.concurrent.atomic.AtomicLong ID_COUNTER -> b
    1:1:long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/o0$a;)J"}
    1:1:io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/o0$a;"}
    1:1:io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lio/flutter/embedding/android/o0$a;"}
    1:1:long getId():0:0 -> d
io.flutter.embedding.android.RenderMode -> io.flutter.embedding.android.p0:
    io.flutter.embedding.android.RenderMode surface -> e
    io.flutter.embedding.android.RenderMode texture -> f
    io.flutter.embedding.android.RenderMode image -> g
    io.flutter.embedding.android.RenderMode[] $VALUES -> h
    1:1:io.flutter.embedding.android.RenderMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/p0;"}
io.flutter.embedding.android.TransparencyMode -> io.flutter.embedding.android.q0:
    io.flutter.embedding.android.TransparencyMode opaque -> e
    io.flutter.embedding.android.TransparencyMode transparent -> f
    io.flutter.embedding.android.TransparencyMode[] $VALUES -> g
    1:1:io.flutter.embedding.android.TransparencyMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/q0;"}
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper -> io.flutter.embedding.android.r0:
    androidx.window.java.layout.WindowInfoTrackerCallbackAdapter adapter -> a
    1:1:void <init>(androidx.window.java.layout.WindowInfoTrackerCallbackAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/a;)V"}
    1:1:void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ljava/util/concurrent/Executor;Li/a;)V"}
    1:1:void removeWindowLayoutInfoListener(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li/a;)V"}
io.flutter.embedding.engine.FlutterEngine -> io.flutter.embedding.engine.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    io.flutter.embedding.engine.renderer.FlutterRenderer renderer -> b
    io.flutter.embedding.engine.dart.DartExecutor dartExecutor -> c
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry -> d
    io.flutter.plugin.localization.LocalizationPlugin localizationPlugin -> e
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel -> f
    io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel -> g
    io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel -> h
    io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel -> i
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel -> j
    io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel -> k
    io.flutter.embedding.engine.systemchannels.BackGestureChannel backGestureChannel -> l
    io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel -> m
    io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel -> n
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel processTextChannel -> o
    io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel -> p
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel spellCheckChannel -> q
    io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel -> r
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> s
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> t
    java.util.Set engineLifecycleListeners -> u
    io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener -> v
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lt0/d;Lio/flutter/embedding/engine/FlutterJNI;Lio/flutter/plugin/platform/r;[Ljava/lang/String;Z)V"}
    2:2:void <init>(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lt0/d;Lio/flutter/embedding/engine/FlutterJNI;Lio/flutter/plugin/platform/r;[Ljava/lang/String;ZZ)V"}
    3:3:void <init>(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lt0/d;Lio/flutter/embedding/engine/FlutterJNI;Lio/flutter/plugin/platform/r;[Ljava/lang/String;ZZLio/flutter/embedding/engine/d;)V"}
    4:4:void <init>(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,java.lang.String[],boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lt0/d;Lio/flutter/embedding/engine/FlutterJNI;[Ljava/lang/String;Z)V"}
    5:5:void <init>(android.content.Context,java.lang.String[],boolean):0:0 -> <init>
    1:1:io.flutter.embedding.engine.FlutterEngine spawn(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.lang.String,java.util.List,io.flutter.plugin.platform.PlatformViewsController,boolean,boolean):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lr0/a$c;Ljava/lang/String;Ljava/util/List;Lio/flutter/plugin/platform/r;ZZ)Lio/flutter/embedding/engine/a;"}
    1:1:void updateDisplayMetrics(float,float,float):0:0 -> a
    1:1:java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)Ljava/util/Set;"}
    1:1:io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)Lio/flutter/plugin/platform/r;"}
    1:1:io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)Ly0/s;"}
    1:1:void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a$b;)V"}
    1:1:void attachToJni():0:0 -> f
    1:1:void destroy():0:0 -> g
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/a;"}
    1:1:io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw0/b;"}
    1:1:io.flutter.embedding.engine.systemchannels.BackGestureChannel getBackGestureChannel():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/f;"}
    1:1:io.flutter.embedding.engine.dart.DartExecutor getDartExecutor():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr0/a;"}
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/k;"}
    1:1:io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La1/g;"}
    1:1:io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/m;"}
    1:1:io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/n;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/o;"}
    1:1:io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/r;"}
    1:1:io.flutter.embedding.engine.plugins.PluginRegistry getPlugins():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv0/b;"}
    1:1:io.flutter.embedding.engine.systemchannels.ProcessTextChannel getProcessTextChannel():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/r;"}
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer():0:0 -> t
    1:1:io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/s;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel():0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/t;"}
    1:1:io.flutter.embedding.engine.systemchannels.SpellCheckChannel getSpellCheckChannel():0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/u;"}
    1:1:io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel():0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/v;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/w;"}
    1:1:boolean isAttachedToJni():0:0 -> z
io.flutter.embedding.engine.FlutterEngine$1 -> io.flutter.embedding.engine.a$a:
    io.flutter.embedding.engine.FlutterEngine this$0 -> a
    1:1:void onPreEngineRestart():0:0 -> a
    1:1:void onEngineWillDestroy():0:0 -> b
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener -> io.flutter.embedding.engine.a$b:
    void onPreEngineRestart() -> a
    void onEngineWillDestroy() -> b
io.flutter.embedding.engine.FlutterEngineCache -> io.flutter.embedding.engine.b:
    java.util.Map cachedEngines -> a
    io.flutter.embedding.engine.FlutterEngineCache instance -> b
    1:1:io.flutter.embedding.engine.FlutterEngine get(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/embedding/engine/a;"}
    1:1:io.flutter.embedding.engine.FlutterEngineCache getInstance():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/b;"}
    1:1:void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lio/flutter/embedding/engine/a;)V"}
    1:1:void remove(java.lang.String):0:0 -> d
io.flutter.embedding.engine.FlutterEngineConnectionRegistry -> io.flutter.embedding.engine.c:
    java.util.Map plugins -> a
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding -> c
    java.util.Map activityAwarePlugins -> d
    io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity -> e
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding -> f
    boolean isWaitingForActivityReattachment -> g
    java.util.Map serviceAwarePlugins -> h
    android.app.Service service -> i
    java.util.Map broadcastReceiverAwarePlugins -> j
    android.content.BroadcastReceiver broadcastReceiver -> k
    java.util.Map contentProviderAwarePlugins -> l
    android.content.ContentProvider contentProvider -> m
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/engine/a;Lt0/d;Lio/flutter/embedding/engine/d;)V"}
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> a
    1:1:void onNewIntent(android.content.Intent):0:0 -> b
    1:1:boolean onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> c
    1:1:void onRestoreInstanceState(android.os.Bundle):0:0 -> d
    1:1:void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/d;Landroidx/lifecycle/h;)V"}
    1:1:void detachFromActivity():0:0 -> f
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> g
    1:1:void onUserLeaveHint():0:0 -> h
    1:1:void detachFromActivityForConfigChanges():0:0 -> i
    1:1:void add(io.flutter.embedding.engine.plugins.FlutterPlugin):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a;)V"}
    1:1:void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/h;)V"}
    1:1:void destroy():0:0 -> l
    1:1:void detachFromActivityInternal():0:0 -> m
    1:1:void detachFromAppComponent():0:0 -> n
    1:1:void detachFromBroadcastReceiver():0:0 -> o
    1:1:void detachFromContentProvider():0:0 -> p
    1:1:void detachFromService():0:0 -> q
    1:1:boolean has(java.lang.Class):0:0 -> r
    1:1:boolean isAttachedToActivity():0:0 -> s
    1:1:boolean isAttachedToBroadcastReceiver():0:0 -> t
    1:1:boolean isAttachedToContentProvider():0:0 -> u
    1:1:boolean isAttachedToService():0:0 -> v
    1:1:void remove(java.lang.Class):0:0 -> w
    1:1:void remove(java.util.Set):0:0 -> x
    1:1:void removeAll():0:0 -> y
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1 -> io.flutter.embedding.engine.c$a:
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets -> io.flutter.embedding.engine.c$b:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    1:1:void <init>(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d;)V"}
    2:2:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d;Lio/flutter/embedding/engine/c$a;)V"}
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding -> io.flutter.embedding.engine.c$c:
    android.app.Activity activity -> a
    io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference -> b
    java.util.Set onRequestPermissionsResultListeners -> c
    java.util.Set onActivityResultListeners -> d
    java.util.Set onNewIntentListeners -> e
    java.util.Set onUserLeaveHintListeners -> f
    java.util.Set onWindowFocusChangedListeners -> g
    java.util.Set onSaveInstanceStateListeners -> h
    1:1:void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/l;)V"}
    1:1:void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/m;)V"}
    1:1:void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/n;)V"}
    1:1:android.app.Activity getActivity():0:0 -> d
    1:1:void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/m;)V"}
    1:1:void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/l;)V"}
    1:1:void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/n;)V"}
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> h
    1:1:void onNewIntent(android.content.Intent):0:0 -> i
    1:1:boolean onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> j
    1:1:void onRestoreInstanceState(android.os.Bundle):0:0 -> k
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> l
    1:1:void onUserLeaveHint():0:0 -> m
io.flutter.embedding.engine.FlutterEngineGroup -> io.flutter.embedding.engine.d:
    java.util.List activeEngines -> a
    1:1:io.flutter.embedding.engine.FlutterEngine createAndRunEngine(io.flutter.embedding.engine.FlutterEngineGroup$Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/d$b;)Lio/flutter/embedding/engine/a;"}
    1:1:io.flutter.embedding.engine.FlutterEngine createEngine(android.content.Context,io.flutter.plugin.platform.PlatformViewsController,boolean,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/plugin/platform/r;ZZ)Lio/flutter/embedding/engine/a;"}
io.flutter.embedding.engine.FlutterEngineGroup$1 -> io.flutter.embedding.engine.d$a:
    io.flutter.embedding.engine.FlutterEngine val$engineToCleanUpOnDestroy -> a
    io.flutter.embedding.engine.FlutterEngineGroup this$0 -> b
    1:1:void onPreEngineRestart():0:0 -> a
    1:1:void onEngineWillDestroy():0:0 -> b
io.flutter.embedding.engine.FlutterEngineGroup$Options -> io.flutter.embedding.engine.d$b:
    android.content.Context context -> a
    io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint dartEntrypoint -> b
    java.lang.String initialRoute -> c
    java.util.List dartEntrypointArgs -> d
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> e
    boolean automaticallyRegisterPlugins -> f
    boolean waitForRestorationData -> g
    1:1:boolean getAutomaticallyRegisterPlugins():0:0 -> a
    1:1:android.content.Context getContext():0:0 -> b
    1:1:io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint getDartEntrypoint():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr0/a$c;"}
    1:1:java.util.List getDartEntrypointArgs():0:0 -> d
    1:1:java.lang.String getInitialRoute():0:0 -> e
    1:1:io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/r;"}
    1:1:boolean getWaitForRestorationData():0:0 -> g
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setAutomaticallyRegisterPlugins(boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a$c;)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setDartEntrypointArgs(java.util.List):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setInitialRoute(java.lang.String):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setWaitForRestorationData(boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lio/flutter/embedding/engine/d$b;"}
io.flutter.embedding.engine.FlutterEngineGroupCache -> io.flutter.embedding.engine.e:
    java.util.Map cachedEngineGroups -> a
    io.flutter.embedding.engine.FlutterEngineGroupCache instance -> b
    1:1:io.flutter.embedding.engine.FlutterEngineGroup get(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/embedding/engine/d;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroupCache getInstance():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/e;"}
io.flutter.embedding.engine.FlutterJNI -> io.flutter.embedding.engine.FlutterJNI:
    1:1:void $r8$lambda$2fUF03zsar2dpLbGJv6IUmJU-0A(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int):0:0 -> dispatchSemanticsAction
    2:2:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action):0:0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;)V"}
    3:3:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0:0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;Ljava/lang/Object;)V"}
    1:1:void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager):0:0 -> setDeferredComponentManager
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls0/a;)V"}
    1:1:void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> setLocalizationPlugin
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La1/g;)V"}
    1:1:void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler):0:0 -> setPlatformMessageHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/d;)V"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.engine.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ImageDecoder$Source io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$0.m(java.nio.ByteBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.engine.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$2.m(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.engine.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$2.m(android.graphics.ImageDecoder,android.graphics.ColorSpace):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.engine.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$3.m(android.graphics.ImageDecoder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticApiModelOutline4 -> io.flutter.embedding.engine.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.util.Size io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$4.m(android.graphics.ImageDecoder$ImageInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticLambda5 -> io.flutter.embedding.engine.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    long io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.f$0 -> a
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.<init>(long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> onHeaderDecoded
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate -> io.flutter.embedding.engine.FlutterJNI$a:
    void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]) -> a
    void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]) -> b
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate -> io.flutter.embedding.engine.FlutterJNI$b:
    void asyncWaitForVsync(long) -> a
io.flutter.embedding.engine.FlutterJNI$Factory -> io.flutter.embedding.engine.FlutterJNI$c:
    1:1:io.flutter.embedding.engine.FlutterJNI provideFlutterJNI():0:0 -> a
io.flutter.embedding.engine.FlutterShellArgs -> io.flutter.embedding.engine.l:
    java.util.Set args -> a
    1:1:io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;)Lio/flutter/embedding/engine/l;"}
    1:1:java.lang.String[] toArray():0:0 -> b
io.flutter.embedding.engine.dart.DartExecutor -> r0.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    android.content.res.AssetManager assetManager -> b
    io.flutter.embedding.engine.dart.DartMessenger dartMessenger -> c
    io.flutter.plugin.common.BinaryMessenger binaryMessenger -> d
    boolean isApplicationRunning -> e
    java.lang.String isolateServiceId -> f
    io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler -> g
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager):0:0 -> <init>
    1:1:void send(java.lang.String,java.nio.ByteBuffer):0:0 -> a
    1:1:java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)Lr0/a$e;"}
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz0/b$a;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;Lz0/b$b;)V"}
    1:1:void executeDartCallback(io.flutter.embedding.engine.dart.DartExecutor$DartCallback):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a$b;)V"}
    1:1:void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.util.List):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a$c;Ljava/util/List;)V"}
    1:1:boolean isExecutingDart():0:0 -> h
    1:1:void notifyLowMemoryWarning():0:0 -> i
    1:1:void onAttachedToJNI():0:0 -> j
    1:1:void onDetachedFromJNI():0:0 -> k
io.flutter.embedding.engine.dart.DartExecutor$1 -> r0.a$a:
    io.flutter.embedding.engine.dart.DartExecutor this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lz0/b$b;)V"}
io.flutter.embedding.engine.dart.DartExecutor$DartCallback -> r0.a$b:
    android.content.res.AssetManager androidAssetManager -> a
    java.lang.String pathToBundle -> b
    io.flutter.view.FlutterCallbackInformation callbackHandle -> c
    1:1:void <init>(android.content.res.AssetManager,java.lang.String,io.flutter.view.FlutterCallbackInformation):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint -> r0.a$c:
    java.lang.String pathToBundle -> a
    java.lang.String dartEntrypointLibrary -> b
    java.lang.String dartEntrypointFunctionName -> c
    1:1:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint createDefault():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr0/a$c;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger -> r0.a$d:
    io.flutter.embedding.engine.dart.DartMessenger messenger -> a
    1:1:void <init>(io.flutter.embedding.engine.dart.DartMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/c;)V"}
    2:2:void <init>(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/c;Lr0/a$a;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer):0:0 -> a
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz0/b$a;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;Lz0/b$b;)V"}
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener -> r0.a$e:
io.flutter.embedding.engine.dart.DartMessenger -> r0.c:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    java.util.Map messageHandlers -> b
    java.util.Map bufferedMessages -> c
    java.lang.Object handlersLock -> d
    java.util.concurrent.atomic.AtomicBoolean enableBufferingIncomingMessages -> e
    java.util.Map pendingReplies -> f
    int nextReplyId -> g
    io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue platformTaskQueue -> h
    java.util.WeakHashMap createdTaskQueues -> i
    io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory taskQueueFactory -> j
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI):0:0 -> <init>
    2:2:void <init>(io.flutter.embedding.engine.FlutterJNI,io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/FlutterJNI;Lr0/c$f;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer):0:0 -> a
    1:1:void handlePlatformMessageResponse(int,java.nio.ByteBuffer):0:0 -> b
    1:1:void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long):0:0 -> c
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz0/b$a;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;Lz0/b$b;)V"}
    1:1:void $r8$lambda$2j2MERcK825A5j1fv5sZ7xB2Iuo(io.flutter.embedding.engine.dart.DartMessenger,java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/c;Ljava/lang/String;ILr0/c$d;Ljava/nio/ByteBuffer;J)V"}
    1:1:void dispatchMessageToQueue(java.lang.String,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr0/c$d;Ljava/nio/ByteBuffer;IJ)V"}
    1:1:void handleError(java.lang.Error):0:0 -> h
    1:1:void invokeHandler(io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/c$d;Ljava/nio/ByteBuffer;I)V"}
    1:1:void lambda$dispatchMessageToQueue$0(java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILr0/c$d;Ljava/nio/ByteBuffer;J)V"}
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz0/b$a;Lz0/b$c;)V"}
io.flutter.embedding.engine.dart.DartMessenger$$ExternalSyntheticLambda0 -> r0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.dart.DartMessenger io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$0 -> e
    java.lang.String io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$1 -> f
    int io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$2 -> g
    io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$3 -> h
    java.nio.ByteBuffer io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$4 -> i
    long io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$5 -> j
    1:1:void io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.<init>(io.flutter.embedding.engine.dart.DartMessenger,java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/c;Ljava/lang/String;ILr0/c$d;Ljava/nio/ByteBuffer;J)V"}
    1:1:void io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo -> r0.c$a:
    java.nio.ByteBuffer message -> a
    int replyId -> b
    long messageData -> c
    1:1:void <init>(java.nio.ByteBuffer,int,long):0:0 -> <init>
io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue -> r0.c$b:
    void dispatch(java.lang.Runnable) -> a
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory -> r0.c$c:
    java.util.concurrent.ExecutorService executorService -> a
    1:1:void <init>():0:0 -> <init>
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo -> r0.c$d:
    io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler handler -> a
    io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue taskQueue -> b
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b$a;Lr0/c$b;)V"}
io.flutter.embedding.engine.dart.DartMessenger$Reply -> r0.c$e:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    int replyId -> b
    java.util.concurrent.atomic.AtomicBoolean done -> c
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI,int):0:0 -> <init>
    1:1:void reply(java.nio.ByteBuffer):0:0 -> a
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory -> r0.c$f:
io.flutter.embedding.engine.dart.PlatformMessageHandler -> r0.d:
    void handlePlatformMessageResponse(int,java.nio.ByteBuffer) -> b
    void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long) -> c
io.flutter.embedding.engine.dart.PlatformTaskQueue -> r0.e:
    android.os.Handler handler -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void dispatch(java.lang.Runnable):0:0 -> a
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager -> s0.a:
    void setJNI(io.flutter.embedding.engine.FlutterJNI) -> a
io.flutter.embedding.engine.loader.ApplicationInfoLoader -> t0.a:
    java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME -> a
    java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY -> b
    java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY -> c
    java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context):0:0 -> a
    1:1:boolean getBoolean(android.os.Bundle,java.lang.String,boolean):0:0 -> b
    1:1:java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context):0:0 -> c
    1:1:java.lang.String getString(android.os.Bundle,java.lang.String):0:0 -> d
    1:1:io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lt0/b;"}
    1:1:void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean):0:0 -> f
    1:1:void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean):0:0 -> g
    1:1:void skipTag(android.content.res.XmlResourceParser):0:0 -> h
io.flutter.embedding.engine.loader.FlutterApplicationInfo -> t0.b:
    java.lang.String aotSharedLibraryName -> a
    java.lang.String vmSnapshotData -> b
    java.lang.String isolateSnapshotData -> c
    java.lang.String flutterAssetsDir -> d
    java.lang.String domainNetworkPolicy -> e
    java.lang.String nativeLibraryDir -> f
    boolean automaticallyRegisterPlugins -> g
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean):0:0 -> <init>
io.flutter.embedding.engine.loader.FlutterLoader -> t0.d:
    boolean initialized -> a
    io.flutter.embedding.engine.loader.FlutterLoader$Settings settings -> b
    long initStartTimestampMillis -> c
    io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo -> d
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> e
    java.util.concurrent.ExecutorService executorService -> f
    java.util.concurrent.Future initResultFuture -> g
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI,java.util.concurrent.ExecutorService):0:0 -> <init>
    1:1:io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d;Landroid/content/Context;)Lt0/e;"}
    1:1:io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d;)Lio/flutter/embedding/engine/FlutterJNI;"}
    1:1:io.flutter.embedding.engine.loader.FlutterApplicationInfo access$200(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d;)Lt0/b;"}
    1:1:java.util.concurrent.ExecutorService access$300(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d;)Ljava/util/concurrent/ExecutorService;"}
    1:1:boolean automaticallyRegisterPlugins():0:0 -> e
    1:1:void ensureInitializationComplete(android.content.Context,java.lang.String[]):0:0 -> f
    1:1:java.lang.String findAppBundlePath():0:0 -> g
    1:1:io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lt0/e;"}
    1:1:boolean initialized():0:0 -> i
    1:1:boolean isLeakVM(android.os.Bundle):0:0 -> j
    1:1:void startInitialization(android.content.Context):0:0 -> k
    1:1:void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lt0/d$c;)V"}
io.flutter.embedding.engine.loader.FlutterLoader$1 -> t0.d$a:
    android.content.Context val$appContext -> a
    io.flutter.embedding.engine.loader.FlutterLoader this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d;Landroid/content/Context;)V"}
    1:1:void $r8$lambda$7aDWRJH5QhLJRySlof0NX61HOhE(io.flutter.embedding.engine.loader.FlutterLoader$1):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d$a;)V"}
    1:1:io.flutter.embedding.engine.loader.FlutterLoader$InitResult call():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt0/d$b;"}
    1:1:void lambda$call$0():0:0 -> c
    1:1:java.lang.Object call():0:0 -> call
io.flutter.embedding.engine.loader.FlutterLoader$1$$ExternalSyntheticLambda0 -> t0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.loader.FlutterLoader$1 io.flutter.embedding.engine.loader.FlutterLoader$1$$InternalSyntheticLambda$1$4c58083b2370a8fcdf0f833c7e06d30029e23fa1df6021353fa19987ec472ed7$0.f$0 -> e
    1:1:void io.flutter.embedding.engine.loader.FlutterLoader$1$$InternalSyntheticLambda$1$4c58083b2370a8fcdf0f833c7e06d30029e23fa1df6021353fa19987ec472ed7$0.<init>(io.flutter.embedding.engine.loader.FlutterLoader$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt0/d$a;)V"}
    1:1:void io.flutter.embedding.engine.loader.FlutterLoader$1$$InternalSyntheticLambda$1$4c58083b2370a8fcdf0f833c7e06d30029e23fa1df6021353fa19987ec472ed7$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.loader.FlutterLoader$InitResult -> t0.d$b:
    java.lang.String appStoragePath -> a
    java.lang.String engineCachesPath -> b
    java.lang.String dataDirPath -> c
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lt0/d$a;)V"}
io.flutter.embedding.engine.loader.FlutterLoader$Settings -> t0.d$c:
    java.lang.String logTag -> a
    void <init>() -> <init>
    1:1:java.lang.String getLogTag():0:0 -> a
io.flutter.embedding.engine.loader.ResourceExtractor -> t0.e:
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView -> u0.a:
    void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int) -> a
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$a:
    android.graphics.Matrix matrix -> a
    android.graphics.Rect rect -> b
    float[] radiis -> c
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type -> d
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0 -> e
    1:1:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix):0:0 -> <init>
    2:2:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect):0:0 -> <init>
    3:3:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[]):0:0 -> <init>
    1:1:android.graphics.Matrix getMatrix():0:0 -> a
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$b:
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT -> e
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT -> f
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH -> g
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM -> h
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY -> i
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES -> j
    1:1:io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorsStack$b;"}
io.flutter.embedding.engine.plugins.FlutterPlugin -> v0.a:
    void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets -> v0.a$a:
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding -> v0.a$b:
    android.content.Context applicationContext -> a
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    io.flutter.plugin.common.BinaryMessenger binaryMessenger -> c
    io.flutter.view.TextureRegistry textureRegistry -> d
    io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry -> e
    io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets -> f
    io.flutter.embedding.engine.FlutterEngineGroup group -> g
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/engine/a;Lz0/b;Lio/flutter/view/TextureRegistry;Lio/flutter/plugin/platform/l;Lv0/a$a;Lio/flutter/embedding/engine/d;)V"}
    1:1:android.content.Context getApplicationContext():0:0 -> a
    1:1:io.flutter.plugin.common.BinaryMessenger getBinaryMessenger():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz0/b;"}
io.flutter.embedding.engine.plugins.PluginRegistry -> v0.b:
    void add(io.flutter.embedding.engine.plugins.FlutterPlugin) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a;)V"}
io.flutter.embedding.engine.plugins.activity.ActivityAware -> w0.a:
    void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/c;)V"}
    void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/c;)V"}
    void onDetachedFromActivity() -> h
    void onDetachedFromActivityForConfigChanges() -> j
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface -> w0.b:
    boolean onActivityResult(int,int,android.content.Intent) -> a
    void onNewIntent(android.content.Intent) -> b
    boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> c
    void onRestoreInstanceState(android.os.Bundle) -> d
    void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/d;Landroidx/lifecycle/h;)V"}
    void detachFromActivity() -> f
    void onSaveInstanceState(android.os.Bundle) -> g
    void onUserLeaveHint() -> h
    void detachFromActivityForConfigChanges() -> i
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding -> w0.c:
    void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/l;)V"}
    void removeOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/m;)V"}
    void removeRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/n;)V"}
    android.app.Activity getActivity() -> d
    void addOnNewIntentListener(io.flutter.plugin.common.PluginRegistry$NewIntentListener) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/m;)V"}
    void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/l;)V"}
    void addRequestPermissionsResultListener(io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/n;)V"}
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister -> x0.a:
    1:1:void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer -> io.flutter.embedding.engine.renderer.FlutterRenderer:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    java.util.concurrent.atomic.AtomicLong nextTextureId -> b
    android.view.Surface surface -> c
    boolean isDisplayingFlutterUi -> d
    android.os.Handler handler -> e
    java.util.Set onTrimMemoryListeners -> f
    java.util.List imageReaderProducers -> g
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> h
    1:1:boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean):0:0 -> a
    1:1:java.util.List access$100(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> b
    1:1:void access$300(io.flutter.embedding.engine.renderer.FlutterRenderer,long):0:0 -> c
    1:1:io.flutter.embedding.engine.FlutterJNI access$400(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> d
    1:1:android.os.Handler access$500(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> e
    1:1:void access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> f
    1:1:void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/j;)V"}
    1:1:void dispatchPointerDataPacket(java.nio.ByteBuffer,int):0:0 -> h
    1:1:boolean isDisplayingFlutterUi():0:0 -> i
    1:1:boolean isSoftwareRenderingEnabled():0:0 -> j
    1:1:void onTrimMemory(int):0:0 -> k
    1:1:void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/j;)V"}
    1:1:void scheduleEngineFrame():0:0 -> m
    1:1:void setSemanticsEnabled(boolean):0:0 -> n
    1:1:void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$g;)V"}
    1:1:void startRenderingToSurface(android.view.Surface,boolean):0:0 -> p
    1:1:void stopRenderingToSurface():0:0 -> q
    1:1:void surfaceChanged(int,int):0:0 -> r
    1:1:void swapSurface(android.view.Surface):0:0 -> s
    1:1:void unregisterTexture(long):0:0 -> t
io.flutter.embedding.engine.renderer.FlutterRenderer$1 -> io.flutter.embedding.engine.renderer.FlutterRenderer$a:
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.engine.renderer.FlutterRenderer$2 -> io.flutter.embedding.engine.renderer.FlutterRenderer$b:
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> a
    1:1:void onResume(androidx.lifecycle.LifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void onDestroy(androidx.lifecycle.LifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void onCreate(androidx.lifecycle.LifecycleOwner):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void onPause(androidx.lifecycle.LifecycleOwner):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void onStop(androidx.lifecycle.LifecycleOwner):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void onStart(androidx.lifecycle.LifecycleOwner):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature -> io.flutter.embedding.engine.renderer.FlutterRenderer$c:
    android.graphics.Rect bounds -> a
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType type -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState state -> c
    1:1:void <init>(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Lio/flutter/embedding/engine/renderer/FlutterRenderer$e;)V"}
    2:2:void <init>(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Lio/flutter/embedding/engine/renderer/FlutterRenderer$e;Lio/flutter/embedding/engine/renderer/FlutterRenderer$d;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState -> io.flutter.embedding.engine.renderer.FlutterRenderer$d:
    int encodedValue -> e
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState UNKNOWN -> f
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_FLAT -> g
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_HALF_OPENED -> h
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $VALUES -> i
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/engine/renderer/FlutterRenderer$d;"}
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType -> io.flutter.embedding.engine.renderer.FlutterRenderer$e:
    int encodedValue -> e
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType UNKNOWN -> f
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType FOLD -> g
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType HINGE -> h
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType CUTOUT -> i
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $VALUES -> j
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/engine/renderer/FlutterRenderer$e;"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.engine.renderer.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(android.media.ImageReader$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.engine.renderer.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m(android.media.ImageReader$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.engine.renderer.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$2.m(android.media.ImageReader$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.engine.renderer.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$3.m(android.media.ImageReader$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline4 -> io.flutter.embedding.engine.renderer.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.hardware.SyncFence io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$0.m(android.media.Image):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline5 -> io.flutter.embedding.engine.renderer.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$1.m(android.hardware.SyncFence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline6 -> io.flutter.embedding.engine.renderer.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$7$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline7 -> io.flutter.embedding.engine.renderer.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$7$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$a:
    android.media.Image image -> a
    long queuedTime -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> c
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$b:
    android.media.ImageReader reader -> a
    java.util.ArrayDeque imageQueue -> b
    boolean closed -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> d
    1:1:void $r8$lambda$bzaxe3VKCrf8UL5Q_l-VbmtBXzA(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader,android.media.ImageReader):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$b;Landroid/media/ImageReader;)V"}
    1:1:java.util.ArrayDeque access$900(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$b;)Ljava/util/ArrayDeque;"}
    1:1:boolean canPrune():0:0 -> c
    1:1:void close():0:0 -> d
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$a;"}
    1:1:void lambda$new$0(android.media.ImageReader):0:0 -> f
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage queueImage(android.media.Image):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/Image;)Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$a;"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$ExternalSyntheticLambda0 -> io.flutter.embedding.engine.renderer.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.f$0 -> a
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.<init>(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$b;)V"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0:0 -> onImageAvailable
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable -> io.flutter.embedding.engine.renderer.FlutterRenderer$f:
    long id -> e
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> f
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics -> io.flutter.embedding.engine.renderer.FlutterRenderer$g:
    float devicePixelRatio -> a
    int width -> b
    int height -> c
    int viewPaddingTop -> d
    int viewPaddingRight -> e
    int viewPaddingBottom -> f
    int viewPaddingLeft -> g
    int viewInsetTop -> h
    int viewInsetRight -> i
    int viewInsetBottom -> j
    int viewInsetLeft -> k
    int systemGestureInsetTop -> l
    int systemGestureInsetRight -> m
    int systemGestureInsetBottom -> n
    int systemGestureInsetLeft -> o
    int physicalTouchSlop -> p
    java.util.List displayFeatures -> q
    1:1:boolean validate():0:0 -> a
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener -> io.flutter.embedding.engine.renderer.j:
    void onFlutterUiNoLongerDisplayed() -> b
    void onFlutterUiDisplayed() -> f
io.flutter.embedding.engine.renderer.RenderSurface -> io.flutter.embedding.engine.renderer.k:
    void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer) -> a
    void pause() -> b
    void detachFromRenderer() -> c
    void resume() -> d
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper -> io.flutter.embedding.engine.renderer.SurfaceTextureWrapper:
    1:1:void <init>(android.graphics.SurfaceTexture):0:0 -> <init>
    2:2:void <init>(android.graphics.SurfaceTexture,java.lang.Runnable):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.AccessibilityChannel -> y0.a:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> b
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler -> c
    io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler -> d
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;Lio/flutter/embedding/engine/FlutterJNI;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/a;)Ly0/a$b;"}
    1:1:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;)V"}
    1:1:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;Ljava/lang/Object;)V"}
    1:1:void onAndroidAccessibilityDisabled():0:0 -> d
    1:1:void onAndroidAccessibilityEnabled():0:0 -> e
    1:1:void setAccessibilityFeatures(int):0:0 -> f
    1:1:void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/a$b;)V"}
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1 -> y0.a$a:
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.AccessibilityChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/a;)V"}
    1:1:void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/a$e;)V"}
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler -> y0.a$b:
    void onTooltip(java.lang.String) -> c
    void onFocus(int) -> d
    void onLongPress(int) -> e
    void announce(java.lang.String) -> f
    void onTap(int) -> g
io.flutter.embedding.engine.systemchannels.BackGestureChannel -> y0.f:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler -> b
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:java.util.Map backEventToJsonMap(android.window.BackEvent):0:0 -> a
    1:1:void cancelBackGesture():0:0 -> b
    1:1:void commitBackGesture():0:0 -> c
    1:1:void startBackGesture(android.window.BackEvent):0:0 -> d
    1:1:void updateBackGestureProgress(android.window.BackEvent):0:0 -> e
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline0 -> y0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$0.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline1 -> y0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$1.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline2 -> y0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$2.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline3 -> y0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$3.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1 -> y0.f$a:
    io.flutter.embedding.engine.systemchannels.BackGestureChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.BackGestureChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/f;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel -> y0.g:
    io.flutter.plugin.common.MethodChannel channel -> a
    java.util.Map componentNameToResults -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/g;)Ls0/a;"}
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1 -> y0.g$a:
    io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/g;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.KeyEventChannel -> y0.i:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;)V"}
    1:1:void $r8$lambda$RL0HJ5TnZGrDabOeA71yhjryCe4(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/i$a;Ljava/lang/Object;)V"}
    1:1:io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/i$a;)Lz0/a$e;"}
    1:1:java.util.Map encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/i$b;Z)Ljava/util/Map;"}
    1:1:void lambda$createReplyHandler$0(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/i$a;Ljava/lang/Object;)V"}
    1:1:void sendFlutterKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean,io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/i$b;ZLy0/i$a;)V"}
io.flutter.embedding.engine.systemchannels.KeyEventChannel$$ExternalSyntheticLambda0 -> y0.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler io.flutter.embedding.engine.systemchannels.KeyEventChannel$$InternalSyntheticLambda$2$2a0e2abef616d6cea4b4f1a8a10072820346c8d644dd4afd70e232766d86619d$0.f$0 -> a
    1:1:void io.flutter.embedding.engine.systemchannels.KeyEventChannel$$InternalSyntheticLambda$2$2a0e2abef616d6cea4b4f1a8a10072820346c8d644dd4afd70e232766d86619d$0.<init>(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/i$a;)V"}
    1:1:void io.flutter.embedding.engine.systemchannels.KeyEventChannel$$InternalSyntheticLambda$2$2a0e2abef616d6cea4b4f1a8a10072820346c8d644dd4afd70e232766d86619d$0.reply(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler -> y0.i$a:
    void onFrameworkResponse(boolean) -> a
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent -> y0.i$b:
    android.view.KeyEvent event -> a
    java.lang.Character complexCharacter -> b
    1:1:void <init>(android.view.KeyEvent,java.lang.Character):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.KeyboardChannel -> y0.j:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler keyboardMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler access$000(io.flutter.embedding.engine.systemchannels.KeyboardChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/j;)Ly0/j$b;"}
    1:1:void setKeyboardMethodHandler(io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/j$b;)V"}
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1 -> y0.j$a:
    java.util.Map pressedState -> a
    io.flutter.embedding.engine.systemchannels.KeyboardChannel this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.KeyboardChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/j;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler -> y0.j$b:
    java.util.Map getKeyboardState() -> a
io.flutter.embedding.engine.systemchannels.LifecycleChannel -> y0.k:
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState lastAndroidState -> a
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState lastFlutterState -> b
    boolean lastFocus -> c
    io.flutter.plugin.common.BasicMessageChannel channel -> d
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    2:2:void <init>(io.flutter.plugin.common.BasicMessageChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;)V"}
    1:1:void aWindowIsFocused():0:0 -> a
    1:1:void appIsDetached():0:0 -> b
    1:1:void appIsInactive():0:0 -> c
    1:1:void appIsPaused():0:0 -> d
    1:1:void appIsResumed():0:0 -> e
    1:1:void noWindowsAreFocused():0:0 -> f
    1:1:void sendState(io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/k$b;Z)V"}
io.flutter.embedding.engine.systemchannels.LifecycleChannel$1 -> y0.k$a:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$LifecycleChannel$AppLifecycleState -> a
    1:1:void <clinit>():0:0 -> <clinit>
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState -> y0.k$b:
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState DETACHED -> e
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState RESUMED -> f
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState INACTIVE -> g
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState HIDDEN -> h
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState PAUSED -> i
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/k$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/k$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/k$b;"}
io.flutter.embedding.engine.systemchannels.LocalizationChannel -> y0.l:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/l;)Ly0/l$b;"}
    1:1:void sendLocales(java.util.List):0:0 -> b
    1:1:void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/l$b;)V"}
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1 -> y0.l$a:
    io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.LocalizationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/l;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler -> y0.l$b:
    java.lang.String getStringResource(java.lang.String,java.lang.String) -> a
io.flutter.embedding.engine.systemchannels.MouseCursorChannel -> y0.m:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/m;)Ly0/m$b;"}
    1:1:void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/m$b;)V"}
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1 -> y0.m$a:
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.MouseCursorChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/m;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler -> y0.m$b:
    void activateSystemCursor(java.lang.String) -> a
io.flutter.embedding.engine.systemchannels.NavigationChannel -> y0.n:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler -> b
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:void popRoute():0:0 -> a
    1:1:void pushRouteInformation(java.lang.String):0:0 -> b
    1:1:void setInitialRoute(java.lang.String):0:0 -> c
io.flutter.embedding.engine.systemchannels.NavigationChannel$1 -> y0.n$a:
    io.flutter.embedding.engine.systemchannels.NavigationChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.NavigationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/n;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.PlatformChannel -> y0.o:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o;)Ly0/o$h;"}
    1:1:int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o;Lorg/json/JSONArray;)I"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o;Lorg/json/JSONObject;)Ly0/o$c;"}
    1:1:java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o;Lorg/json/JSONArray;)Ljava/util/List;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o;Ljava/lang/String;)Ly0/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$500(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o;Lorg/json/JSONObject;)Ly0/o$j;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly0/o$c;"}
    1:1:int decodeOrientations(org.json.JSONArray):0:0 -> h
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly0/o$j;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode decodeSystemUiMode(java.lang.String):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$k;"}
    1:1:java.util.List decodeSystemUiOverlays(org.json.JSONArray):0:0 -> k
    1:1:void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$h;)V"}
    1:1:void systemChromeChanged(boolean):0:0 -> m
io.flutter.embedding.engine.systemchannels.PlatformChannel$1 -> y0.o$a:
    io.flutter.embedding.engine.systemchannels.PlatformChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.PlatformChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$2 -> y0.o$b:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation -> a
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay -> b
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiMode -> c
    1:1:void <clinit>():0:0 -> <clinit>
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription -> y0.o$c:
    int color -> a
    java.lang.String label -> b
    1:1:void <init>(int,java.lang.String):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness -> y0.o$d:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$d;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat -> y0.o$e:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$e;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation -> y0.o$f:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT -> i
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$f;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$f;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$f;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$f;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType -> y0.o$g:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT -> i
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK -> j
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$g;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler -> y0.o$h:
    void popSystemNavigator() -> a
    void setSystemUiChangeListener() -> b
    void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$c;)V"}
    void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$j;)V"}
    void restoreSystemUiOverlays() -> e
    void setClipboardData(java.lang.String) -> f
    void setFrameworkHandlesBack(boolean) -> g
    void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$g;)V"}
    java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$e;)Ljava/lang/CharSequence;"}
    void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$k;)V"}
    void setPreferredOrientations(int) -> k
    void showSystemOverlays(java.util.List) -> l
    void share(java.lang.String) -> m
    boolean clipboardHasStrings() -> n
    void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$i;)V"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType -> y0.o$i:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$i;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$i;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$i;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$i;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle -> y0.o$j:
    java.lang.Integer statusBarColor -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness -> b
    java.lang.Boolean systemStatusBarContrastEnforced -> c
    java.lang.Integer systemNavigationBarColor -> d
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness -> e
    java.lang.Integer systemNavigationBarDividerColor -> f
    java.lang.Boolean systemNavigationBarContrastEnforced -> g
    1:1:void <init>(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Boolean,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,java.lang.Boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;Ly0/o$d;Ljava/lang/Boolean;Ljava/lang/Integer;Ly0/o$d;Ljava/lang/Integer;Ljava/lang/Boolean;)V"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode -> y0.o$k:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode LEAN_BACK -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE_STICKY -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode EDGE_TO_EDGE -> i
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$k;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay -> y0.o$l:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$l;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$l;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/o$l;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/o$l;"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel -> y0.q:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q;)Ly0/q$g;"}
    1:1:java.lang.String access$100(java.lang.Exception):0:0 -> b
    1:1:java.lang.String detailedExceptionString(java.lang.Exception):0:0 -> c
    1:1:void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$g;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 -> y0.q$a:
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q;)V"}
    1:1:void $r8$lambda$pMHhgo3vaqdzoS3K-OFSVbonOaM(io.flutter.plugin.common.MethodChannel$Result,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;Ly0/q$c;)V"}
    1:1:void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void lambda$resize$0(io.flutter.plugin.common.MethodChannel$Result,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;Ly0/q$c;)V"}
    1:1:void offset(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void synchronizeToNativeViewHierarchy(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$ExternalSyntheticLambda0 -> y0.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$InternalSyntheticLambda$2$06a0318edf43c68b535b7196357da0ff9ff18d83e350c6ea0dc6b00c1c7bbad1$0.f$0 -> a
    1:1:void io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$InternalSyntheticLambda$2$06a0318edf43c68b535b7196357da0ff9ff18d83e350c6ea0dc6b00c1c7bbad1$0.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$InternalSyntheticLambda$2$06a0318edf43c68b535b7196357da0ff9ff18d83e350c6ea0dc6b00c1c7bbad1$0.run(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$c;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized -> y0.q$b:
    void run(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$c;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize -> y0.q$c:
    int width -> a
    int height -> b
    1:1:void <init>(int,int):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest -> y0.q$d:
    int viewId -> a
    java.lang.String viewType -> b
    double logicalWidth -> c
    double logicalHeight -> d
    double logicalTop -> e
    double logicalLeft -> f
    int direction -> g
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode displayMode -> h
    java.nio.ByteBuffer params -> i
    1:1:void <init>(int,java.lang.String,double,double,double,double,int,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode,java.nio.ByteBuffer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;DDDDILy0/q$d$a;Ljava/nio/ByteBuffer;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode -> y0.q$d$a:
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_VIRTUAL_FALLBACK -> e
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_HYBRID_FALLBACK -> f
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode HYBRID_ONLY -> g
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/q$d$a;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/q$d$a;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/q$d$a;"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest -> y0.q$e:
    int viewId -> a
    double newLogicalWidth -> b
    double newLogicalHeight -> c
    1:1:void <init>(int,double,double):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch -> y0.q$f:
    int viewId -> a
    java.lang.Number downTime -> b
    java.lang.Number eventTime -> c
    int action -> d
    int pointerCount -> e
    java.lang.Object rawPointerPropertiesList -> f
    java.lang.Object rawPointerCoords -> g
    int metaState -> h
    int buttonState -> i
    float xPrecision -> j
    float yPrecision -> k
    int deviceId -> l
    int edgeFlags -> m
    int source -> n
    int flags -> o
    long motionEventId -> p
    1:1:void <init>(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler -> y0.q$g:
    void clearFocus(int) -> a
    void synchronizeToNativeViewHierarchy(boolean) -> b
    void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$f;)V"}
    void offset(int,double,double) -> d
    void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$e;Ly0/q$b;)V"}
    void setDirection(int,int) -> f
    void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$d;)V"}
    long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$d;)J"}
    void dispose(int) -> i
io.flutter.embedding.engine.systemchannels.ProcessTextChannel -> y0.r:
    io.flutter.plugin.common.MethodChannel channel -> a
    android.content.pm.PackageManager packageManager -> b
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler processTextMethodHandler -> c
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> d
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor,android.content.pm.PackageManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;Landroid/content/pm/PackageManager;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler access$000(io.flutter.embedding.engine.systemchannels.ProcessTextChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/r;)Ly0/r$b;"}
    1:1:void setMethodHandler(io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/r$b;)V"}
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1 -> y0.r$a:
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.ProcessTextChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/r;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler -> y0.r$b:
    java.util.Map queryTextActions() -> b
    void processTextAction(java.lang.String,java.lang.String,boolean,io.flutter.plugin.common.MethodChannel$Result) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;ZLz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.RestorationChannel -> y0.s:
    boolean waitForRestorationData -> a
    byte[] restorationData -> b
    io.flutter.plugin.common.MethodChannel channel -> c
    io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest -> d
    boolean engineHasProvidedData -> e
    boolean frameworkHasRequestedData -> f
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> g
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;Z)V"}
    2:2:void <init>(io.flutter.plugin.common.MethodChannel,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j;Z)V"}
    1:1:byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/s;)[B"}
    1:1:byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/s;[B)[B"}
    1:1:boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/s;Z)Z"}
    1:1:boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/s;)Z"}
    1:1:java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/s;[B)Ljava/util/Map;"}
    1:1:io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/s;Lz0/j$d;)Lz0/j$d;"}
    1:1:void clearData():0:0 -> g
    1:1:byte[] getRestorationData():0:0 -> h
    1:1:java.util.Map packageData(byte[]):0:0 -> i
    1:1:void setRestorationData(byte[]):0:0 -> j
io.flutter.embedding.engine.systemchannels.RestorationChannel$1 -> y0.s$a:
    byte[] val$data -> a
    io.flutter.embedding.engine.systemchannels.RestorationChannel this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/s;[B)V"}
    1:1:void success(java.lang.Object):0:0 -> a
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> b
    1:1:void notImplemented():0:0 -> c
io.flutter.embedding.engine.systemchannels.RestorationChannel$2 -> y0.s$b:
    io.flutter.embedding.engine.systemchannels.RestorationChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.RestorationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/s;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.SettingsChannel -> y0.t:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue CONFIGURATION_QUEUE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue access$100():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/t$a;"}
    1:1:android.util.DisplayMetrics getPastDisplayMetrics(int):0:0 -> b
    1:1:boolean hasNonlinearTextScalingSupport():0:0 -> c
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly0/t$b;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue -> y0.t$a:
    java.util.concurrent.ConcurrentLinkedQueue sentQueue -> a
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration currentConfiguration -> b
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration previousEnqueuedConfiguration -> c
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.concurrent.ConcurrentLinkedQueue access$200(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/t$a;)Ljava/util/concurrent/ConcurrentLinkedQueue;"}
    1:1:io.flutter.plugin.common.BasicMessageChannel$Reply enqueueConfiguration(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/t$a$b;)Lz0/a$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration getConfiguration(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ly0/t$a$b;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1 -> y0.t$a$a:
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration val$configurationToRemove -> a
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue,io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/t$a;Ly0/t$a$b;)V"}
    1:1:void reply(java.lang.Object):0:0 -> a
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration -> y0.t$a$b:
    int generationNumber -> a
    android.util.DisplayMetrics displayMetrics -> b
    int nextConfigGeneration -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.util.DisplayMetrics):0:0 -> <init>
    1:1:android.util.DisplayMetrics access$000(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/t$a$b;)Landroid/util/DisplayMetrics;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder -> y0.t$b:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    java.util.Map message -> b
    android.util.DisplayMetrics displayMetrics -> c
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;)V"}
    1:1:void send():0:0 -> a
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setBrieflyShowPassword(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ly0/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setDisplayMetrics(android.util.DisplayMetrics):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/DisplayMetrics;)Ly0/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setNativeSpellCheckServiceDefined(boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ly0/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/t$c;)Ly0/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Ly0/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ly0/t$b;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness -> y0.t$c:
    java.lang.String name -> e
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light -> f
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark -> g
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/t$c;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/t$c;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/t$c;"}
io.flutter.embedding.engine.systemchannels.SpellCheckChannel -> y0.u:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler spellCheckMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler access$000(io.flutter.embedding.engine.systemchannels.SpellCheckChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/u;)Ly0/u$b;"}
    1:1:void setSpellCheckMethodHandler(io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/u$b;)V"}
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1 -> y0.u$a:
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.SpellCheckChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/u;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler -> y0.u$b:
    void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.SystemChannel -> y0.v:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:void sendMemoryPressureWarning():0:0 -> a
io.flutter.embedding.engine.systemchannels.TextInputChannel -> y0.w:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr0/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w;)Ly0/w$f;"}
    1:1:void commitContent(int,java.util.Map):0:0 -> b
    1:1:java.util.HashMap createEditingDeltaJSON(java.util.ArrayList):0:0 -> c
    1:1:java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int):0:0 -> d
    1:1:void done(int):0:0 -> e
    1:1:void go(int):0:0 -> f
    1:1:void newline(int):0:0 -> g
    1:1:void next(int):0:0 -> h
    1:1:void performPrivateCommand(int,java.lang.String,android.os.Bundle):0:0 -> i
    1:1:void previous(int):0:0 -> j
    1:1:void requestExistingInputState():0:0 -> k
    1:1:void search(int):0:0 -> l
    1:1:void send(int):0:0 -> m
    1:1:void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w$f;)V"}
    1:1:void unspecifiedAction(int):0:0 -> o
    1:1:void updateEditingState(int,java.lang.String,int,int,int,int):0:0 -> p
    1:1:void updateEditingStateWithDeltas(int,java.util.ArrayList):0:0 -> q
    1:1:void updateEditingStateWithTag(int,java.util.HashMap):0:0 -> r
io.flutter.embedding.engine.systemchannels.TextInputChannel$1 -> y0.w$a:
    io.flutter.embedding.engine.systemchannels.TextInputChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration -> y0.w$b:
    boolean obscureText -> a
    boolean autocorrect -> b
    boolean enableSuggestions -> c
    boolean enableIMEPersonalizedLearning -> d
    boolean enableDeltaModel -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType -> g
    java.lang.Integer inputAction -> h
    java.lang.String actionLabel -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill -> j
    java.lang.String[] contentCommitMimeTypes -> k
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields -> l
    1:1:void <init>(boolean,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,java.lang.String[],io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZZZZLy0/w$d;Ly0/w$c;Ljava/lang/Integer;Ljava/lang/String;Ly0/w$b$a;[Ljava/lang/String;[Ly0/w$b;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly0/w$b;"}
    1:1:java.lang.Integer inputActionFromTextInputAction(java.lang.String):0:0 -> b
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill -> y0.w$b$a:
    java.lang.String uniqueIdentifier -> a
    java.lang.String[] hints -> b
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState -> c
    java.lang.String hintText -> d
    1:1:void <init>(java.lang.String,java.lang.String[],java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ly0/w$e;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly0/w$b$a;"}
    1:1:java.lang.String translateAutofillHint(java.lang.String):0:0 -> b
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType -> y0.w$c:
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type -> a
    boolean isSigned -> b
    boolean isDecimal -> c
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w$g;ZZ)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly0/w$c;"}
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization -> y0.w$d:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS -> g
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES -> h
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/w$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/w$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/w$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/w$d;"}
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState -> y0.w$e:
    java.lang.String text -> a
    int selectionStart -> b
    int selectionEnd -> c
    int composingStart -> d
    int composingEnd -> e
    1:1:void <init>(java.lang.String,int,int,int,int):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly0/w$e;"}
    1:1:boolean hasComposing():0:0 -> b
    1:1:boolean hasSelection():0:0 -> c
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler -> y0.w$f:
    void sendAppPrivateCommand(java.lang.String,android.os.Bundle) -> a
    void clearClient() -> b
    void show() -> c
    void setPlatformViewClient(int,boolean) -> d
    void setEditableSizeAndTransform(double,double,double[]) -> e
    void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w$e;)V"}
    void requestAutofill() -> g
    void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILy0/w$b;)V"}
    void finishAutofillContext(boolean) -> i
    void hide() -> j
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType -> y0.w$g:
    java.lang.String encodedName -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME -> g
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME -> h
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER -> j
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE -> k
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE -> l
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS -> m
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL -> n
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD -> o
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NONE -> p
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/w$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/w$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly0/w$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly0/w$g;"}
io.flutter.plugin.common.BasicMessageChannel -> z0.a:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.lang.String name -> b
    io.flutter.plugin.common.MessageCodec codec -> c
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;Ljava/lang/String;Lz0/h;)V"}
    2:2:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;Ljava/lang/String;Lz0/h;Lz0/b$c;)V"}
    1:1:io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;)Lz0/h;"}
    1:1:java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;)Ljava/lang/String;"}
    1:1:void send(java.lang.Object):0:0 -> c
    1:1:void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/a$e;)V"}
    1:1:void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a$d;)V"}
io.flutter.plugin.common.BasicMessageChannel$1 -> z0.a$a:
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler -> z0.a$b:
    io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler -> a
    io.flutter.plugin.common.BasicMessageChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;Lz0/a$d;)V"}
    2:2:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;Lz0/a$d;Lz0/a$a;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lz0/b$b;)V"}
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1 -> z0.a$b$a:
    io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback -> a
    io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1 -> b
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a$b;Lz0/b$b;)V"}
    1:1:void reply(java.lang.Object):0:0 -> a
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler -> z0.a$c:
    io.flutter.plugin.common.BasicMessageChannel$Reply callback -> a
    io.flutter.plugin.common.BasicMessageChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;Lz0/a$e;)V"}
    2:2:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;Lz0/a$e;Lz0/a$a;)V"}
    1:1:void reply(java.nio.ByteBuffer):0:0 -> a
io.flutter.plugin.common.BasicMessageChannel$MessageHandler -> z0.a$d:
    void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/a$e;)V"}
io.flutter.plugin.common.BasicMessageChannel$Reply -> z0.a$e:
    void reply(java.lang.Object) -> a
io.flutter.plugin.common.BinaryMessenger -> z0.b:
    void send(java.lang.String,java.nio.ByteBuffer) -> a
    void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz0/b$a;)V"}
    void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;Lz0/b$b;)V"}
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler -> z0.b$a:
    void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lz0/b$b;)V"}
io.flutter.plugin.common.BinaryMessenger$BinaryReply -> z0.b$b:
    void reply(java.nio.ByteBuffer) -> a
io.flutter.plugin.common.BinaryMessenger$TaskQueue -> z0.b$c:
io.flutter.plugin.common.EventChannel -> z0.c:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.lang.String name -> b
    io.flutter.plugin.common.MethodCodec codec -> c
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;Ljava/lang/String;)V"}
    2:2:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;Ljava/lang/String;Lz0/k;)V"}
    3:3:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;Ljava/lang/String;Lz0/k;Lz0/b$c;)V"}
    1:1:io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.EventChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/c;)Lz0/k;"}
    1:1:java.lang.String access$200(io.flutter.plugin.common.EventChannel):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/c;)Ljava/lang/String;"}
    1:1:io.flutter.plugin.common.BinaryMessenger access$400(io.flutter.plugin.common.EventChannel):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/c;)Lz0/b;"}
    1:1:void setStreamHandler(io.flutter.plugin.common.EventChannel$StreamHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/c$d;)V"}
io.flutter.plugin.common.EventChannel$1 -> z0.c$a:
io.flutter.plugin.common.EventChannel$EventSink -> z0.c$b:
    void success(java.lang.Object) -> a
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler -> z0.c$c:
    io.flutter.plugin.common.EventChannel$StreamHandler handler -> a
    java.util.concurrent.atomic.AtomicReference activeSink -> b
    io.flutter.plugin.common.EventChannel this$0 -> c
    1:1:void <init>(io.flutter.plugin.common.EventChannel,io.flutter.plugin.common.EventChannel$StreamHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/c;Lz0/c$d;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lz0/b$b;)V"}
    1:1:java.util.concurrent.atomic.AtomicReference access$300(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/c$c;)Ljava/util/concurrent/atomic/AtomicReference;"}
    1:1:void onCancel(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/b$b;)V"}
    1:1:void onListen(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/b$b;)V"}
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation -> z0.c$c$a:
    java.util.concurrent.atomic.AtomicBoolean hasEnded -> a
    io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler this$1 -> b
    1:1:void <init>(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/c$c;)V"}
    2:2:void <init>(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler,io.flutter.plugin.common.EventChannel$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/c$c;Lz0/c$a;)V"}
    1:1:void success(java.lang.Object):0:0 -> a
io.flutter.plugin.common.EventChannel$StreamHandler -> z0.c$d:
    void onCancel(java.lang.Object) -> a
    void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/c$b;)V"}
io.flutter.plugin.common.FlutterException -> z0.d:
    java.lang.String code -> e
    java.lang.Object details -> f
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.Object):0:0 -> <init>
io.flutter.plugin.common.JSONMessageCodec -> z0.e:
    io.flutter.plugin.common.JSONMessageCodec INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object decodeMessage(java.nio.ByteBuffer):0:0 -> a
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.Object):0:0 -> b
io.flutter.plugin.common.JSONMethodCodec -> z0.f:
    io.flutter.plugin.common.JSONMethodCodec INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;)Ljava/nio/ByteBuffer;"}
    1:1:java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object):0:0 -> b
    1:1:io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)Lz0/i;"}
    1:1:java.lang.Object decodeEnvelope(java.nio.ByteBuffer):0:0 -> d
    1:1:java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String):0:0 -> e
    1:1:java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object):0:0 -> f
    1:1:java.lang.Object unwrapNull(java.lang.Object):0:0 -> g
io.flutter.plugin.common.JSONUtil -> z0.g:
    1:1:java.lang.Object wrap(java.lang.Object):0:0 -> a
io.flutter.plugin.common.MessageCodec -> z0.h:
    java.lang.Object decodeMessage(java.nio.ByteBuffer) -> a
    java.nio.ByteBuffer encodeMessage(java.lang.Object) -> b
io.flutter.plugin.common.MethodCall -> z0.i:
    java.lang.String method -> a
    java.lang.Object arguments -> b
    1:1:void <init>(java.lang.String,java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object argument(java.lang.String):0:0 -> a
    1:1:java.lang.Object arguments():0:0 -> b
io.flutter.plugin.common.MethodChannel -> z0.j:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.lang.String name -> b
    io.flutter.plugin.common.MethodCodec codec -> c
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;Ljava/lang/String;)V"}
    2:2:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;Ljava/lang/String;Lz0/k;)V"}
    3:3:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;Ljava/lang/String;Lz0/k;Lz0/b$c;)V"}
    1:1:io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j;)Lz0/k;"}
    1:1:java.lang.String access$100(io.flutter.plugin.common.MethodChannel):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j;)Ljava/lang/String;"}
    1:1:void invokeMethod(java.lang.String,java.lang.Object):0:0 -> c
    1:1:void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Object;Lz0/j$d;)V"}
    1:1:void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$c;)V"}
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler -> z0.j$a:
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> a
    io.flutter.plugin.common.MethodChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j;Lz0/j$c;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lz0/b$b;)V"}
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1 -> z0.j$a$a:
    io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply -> a
    io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1 -> b
    1:1:void <init>(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$a;Lz0/b$b;)V"}
    1:1:void success(java.lang.Object):0:0 -> a
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> b
    1:1:void notImplemented():0:0 -> c
io.flutter.plugin.common.MethodChannel$IncomingResultHandler -> z0.j$b:
    io.flutter.plugin.common.MethodChannel$Result callback -> a
    io.flutter.plugin.common.MethodChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j;Lz0/j$d;)V"}
    1:1:void reply(java.nio.ByteBuffer):0:0 -> a
io.flutter.plugin.common.MethodChannel$MethodCallHandler -> z0.j$c:
    void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
io.flutter.plugin.common.MethodChannel$Result -> z0.j$d:
    void success(java.lang.Object) -> a
    void error(java.lang.String,java.lang.String,java.lang.Object) -> b
    void notImplemented() -> c
io.flutter.plugin.common.MethodCodec -> z0.k:
    java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;)Ljava/nio/ByteBuffer;"}
    java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object) -> b
    io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)Lz0/i;"}
    java.lang.Object decodeEnvelope(java.nio.ByteBuffer) -> d
    java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String) -> e
    java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object) -> f
io.flutter.plugin.common.PluginRegistry$ActivityResultListener -> z0.l:
    boolean onActivityResult(int,int,android.content.Intent) -> a
io.flutter.plugin.common.PluginRegistry$NewIntentListener -> z0.m:
    boolean onNewIntent(android.content.Intent) -> b
io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener -> z0.n:
    boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> c
io.flutter.plugin.common.StandardMessageCodec -> z0.o:
    io.flutter.plugin.common.StandardMessageCodec INSTANCE -> a
    boolean LITTLE_ENDIAN -> b
    java.nio.charset.Charset UTF8 -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object decodeMessage(java.nio.ByteBuffer):0:0 -> a
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.Object):0:0 -> b
    1:1:void readAlignment(java.nio.ByteBuffer,int):0:0 -> c
    1:1:byte[] readBytes(java.nio.ByteBuffer):0:0 -> d
    1:1:int readSize(java.nio.ByteBuffer):0:0 -> e
    1:1:java.lang.Object readValue(java.nio.ByteBuffer):0:0 -> f
    1:1:java.lang.Object readValueOfType(byte,java.nio.ByteBuffer):0:0 -> g
    1:1:void writeAlignment(java.io.ByteArrayOutputStream,int):0:0 -> h
    1:1:void writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> i
    1:1:void writeChar(java.io.ByteArrayOutputStream,int):0:0 -> j
    1:1:void writeDouble(java.io.ByteArrayOutputStream,double):0:0 -> k
    1:1:void writeFloat(java.io.ByteArrayOutputStream,float):0:0 -> l
    1:1:void writeInt(java.io.ByteArrayOutputStream,int):0:0 -> m
    1:1:void writeLong(java.io.ByteArrayOutputStream,long):0:0 -> n
    1:1:void writeSize(java.io.ByteArrayOutputStream,int):0:0 -> o
    1:1:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> p
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream -> z0.o$a:
    void <init>() -> <init>
    1:1:byte[] buffer():0:0 -> a
io.flutter.plugin.common.StandardMethodCodec -> z0.p:
    io.flutter.plugin.common.StandardMessageCodec messageCodec -> a
    io.flutter.plugin.common.StandardMethodCodec INSTANCE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(io.flutter.plugin.common.StandardMessageCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/o;)V"}
    1:1:java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;)Ljava/nio/ByteBuffer;"}
    1:1:java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object):0:0 -> b
    1:1:io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)Lz0/i;"}
    1:1:java.lang.Object decodeEnvelope(java.nio.ByteBuffer):0:0 -> d
    1:1:java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String):0:0 -> e
    1:1:java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object):0:0 -> f
io.flutter.plugin.common.StringCodec -> z0.q:
    java.nio.charset.Charset UTF8 -> a
    io.flutter.plugin.common.StringCodec INSTANCE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object decodeMessage(java.nio.ByteBuffer):0:0 -> a
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.Object):0:0 -> b
    1:1:java.lang.String decodeMessage(java.nio.ByteBuffer):0:0 -> c
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.String):0:0 -> d
io.flutter.plugin.editing.FlutterTextUtils -> io.flutter.plugin.editing.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    1:1:int getOffsetAfter(java.lang.CharSequence,int):0:0 -> a
    1:1:int getOffsetBefore(java.lang.CharSequence,int):0:0 -> b
    1:1:boolean isEmoji(int):0:0 -> c
    1:1:boolean isEmojiModifier(int):0:0 -> d
    1:1:boolean isEmojiModifierBase(int):0:0 -> e
    1:1:boolean isKeycapBase(int):0:0 -> f
    1:1:boolean isRegionalIndicatorSymbol(int):0:0 -> g
    1:1:boolean isTagSpecChar(int):0:0 -> h
    1:1:boolean isVariationSelector(int):0:0 -> i
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$4c819f8c8ad227d9802b1a549dcea82babc035996fc947c4508511c1b3807738$0.m(android.view.View,android.view.WindowInsetsAnimation$Callback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1 -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$a:
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$2cc005fa53a8049e244b5ffce5b2e308ea0dcdb0fed28f3a858d514c163d0b4f$0.m(android.view.WindowInsetsAnimation):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsetsAnimation io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.editing.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$7.m(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.editing.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$8.m(android.view.WindowInsets$Builder,int,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline4 -> io.flutter.plugin.editing.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$7$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline5 -> io.flutter.plugin.editing.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$7$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$b:
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0 -> a
    1:1:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback):0:0 -> <init>
    2:2:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/ImeSyncDeferringInsetsCallback;Lio/flutter/plugin/editing/ImeSyncDeferringInsetsCallback$a;)V"}
io.flutter.plugin.editing.InputConnectionAdaptor -> io.flutter.plugin.editing.m:
    android.view.View mFlutterView -> a
    int mClient -> b
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> c
    io.flutter.plugin.editing.ListenableEditingState mEditable -> d
    android.view.inputmethod.EditorInfo mEditorInfo -> e
    android.view.inputmethod.ExtractedTextRequest mExtractRequest -> f
    boolean mMonitorCursorUpdate -> g
    android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder -> h
    android.view.inputmethod.ExtractedText mExtractedText -> i
    android.view.inputmethod.InputMethodManager mImm -> j
    android.text.Layout mLayout -> k
    io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils -> l
    io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate keyboardDelegate -> m
    int batchEditNestDepth -> n
    1:1:void <init>(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;ILy0/w;Lio/flutter/plugin/editing/m$a;Lio/flutter/plugin/editing/n;Landroid/view/inputmethod/EditorInfo;)V"}
    2:2:void <init>(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;ILy0/w;Lio/flutter/plugin/editing/m$a;Lio/flutter/plugin/editing/n;Landroid/view/inputmethod/EditorInfo;Lio/flutter/embedding/engine/FlutterJNI;)V"}
    1:1:void didChangeEditingState(boolean,boolean,boolean):0:0 -> a
    1:1:boolean doPerformContextMenuAction(int):0:0 -> b
    1:1:android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo():0:0 -> c
    1:1:android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest):0:0 -> d
    1:1:boolean handleHorizontalMovement(boolean,boolean):0:0 -> e
    1:1:boolean handleKeyEvent(android.view.KeyEvent):0:0 -> f
    1:1:boolean handleVerticalMovement(boolean,boolean):0:0 -> g
    1:1:byte[] readStreamFully(java.io.InputStream,int):0:0 -> h
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$0.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.ClipDescription io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$1.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.editing.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.net.Uri io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$3.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.editing.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$5.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate -> io.flutter.plugin.editing.m$a:
    boolean handleEvent(android.view.KeyEvent) -> b
io.flutter.plugin.editing.ListenableEditingState -> io.flutter.plugin.editing.n:
    int mBatchEditNestDepth -> a
    int mChangeNotificationDepth -> b
    java.util.ArrayList mListeners -> c
    java.util.ArrayList mPendingListeners -> d
    java.util.ArrayList mBatchTextEditingDeltas -> e
    java.lang.String mToStringCache -> f
    java.lang.String mTextWhenBeginBatchEdit -> g
    int mSelectionStartWhenBeginBatchEdit -> h
    int mSelectionEndWhenBeginBatchEdit -> i
    int mComposingStartWhenBeginBatchEdit -> j
    int mComposingEndWhenBeginBatchEdit -> k
    android.view.inputmethod.BaseInputConnection mDummyConnection -> l
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w$e;Landroid/view/View;)V"}
    1:1:void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/n$b;)V"}
    1:1:void beginBatchEdit():0:0 -> b
    1:1:void clearBatchDeltas():0:0 -> c
    1:1:void endBatchEdit():0:0 -> d
    1:1:java.util.ArrayList extractBatchTextEditingDeltas():0:0 -> e
    1:1:int getComposingEnd():0:0 -> f
    1:1:int getComposingStart():0:0 -> g
    1:1:int getSelectionEnd():0:0 -> h
    1:1:int getSelectionStart():0:0 -> i
    1:1:void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/n$b;ZZZ)V"}
    1:1:void notifyListenersIfNeeded(boolean,boolean,boolean):0:0 -> k
    1:1:void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/n$b;)V"}
    1:1:void setComposingRange(int,int):0:0 -> m
    1:1:void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w$e;)V"}
    1:1:android.text.Editable replace(int,int,java.lang.CharSequence,int,int):0:0 -> replace
    2:2:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int):0:0 -> replace
io.flutter.plugin.editing.ListenableEditingState$1 -> io.flutter.plugin.editing.n$a:
    android.text.Editable val$self -> a
    io.flutter.plugin.editing.ListenableEditingState this$0 -> b
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher -> io.flutter.plugin.editing.n$b:
    void didChangeEditingState(boolean,boolean,boolean) -> a
io.flutter.plugin.editing.SpellCheckPlugin -> io.flutter.plugin.editing.o:
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel mSpellCheckChannel -> a
    android.view.textservice.TextServicesManager mTextServicesManager -> b
    android.view.textservice.SpellCheckerSession mSpellCheckerSession -> c
    io.flutter.plugin.common.MethodChannel$Result pendingResult -> d
    1:1:void <init>(android.view.textservice.TextServicesManager,io.flutter.embedding.engine.systemchannels.SpellCheckChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/textservice/TextServicesManager;Ly0/u;)V"}
    1:1:void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Lz0/j$d;)V"}
    1:1:void destroy():0:0 -> b
    1:1:void performSpellCheck(java.lang.String,java.lang.String):0:0 -> c
io.flutter.plugin.editing.TextEditingDelta -> io.flutter.plugin.editing.p:
    java.lang.CharSequence oldText -> a
    java.lang.CharSequence deltaText -> b
    int deltaStart -> c
    int deltaEnd -> d
    int newSelectionStart -> e
    int newSelectionEnd -> f
    int newComposingStart -> g
    int newComposingEnd -> h
    1:1:void <init>(java.lang.CharSequence,int,int,int,int):0:0 -> <init>
    2:2:void <init>(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int,int,int):0:0 -> <init>
    1:1:void setDeltas(java.lang.CharSequence,java.lang.CharSequence,int,int):0:0 -> a
    1:1:org.json.JSONObject toJSON():0:0 -> b
io.flutter.plugin.editing.TextInputPlugin -> io.flutter.plugin.editing.k0:
    android.view.View mView -> a
    android.view.inputmethod.InputMethodManager mImm -> b
    android.view.autofill.AutofillManager afm -> c
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> d
    io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration -> f
    android.util.SparseArray autofillConfiguration -> g
    io.flutter.plugin.editing.ListenableEditingState mEditable -> h
    boolean mRestartInputPending -> i
    android.view.inputmethod.InputConnection lastInputConnection -> j
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> k
    android.graphics.Rect lastClientRect -> l
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback -> m
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState -> n
    boolean isInputConnectionLocked -> o
    1:1:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ly0/w;Lio/flutter/plugin/platform/r;)V"}
    1:1:void setPlatformViewTextInputClient(int,boolean):0:0 -> A
    1:1:void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILy0/w$b;)V"}
    1:1:void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ly0/w$e;)V"}
    1:1:void showTextInput(android.view.View):0:0 -> D
    1:1:void unlockPlatformViewInputConnection():0:0 -> E
    1:1:void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w$b;)V"}
    1:1:void didChangeEditingState(boolean,boolean,boolean):0:0 -> a
    1:1:android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)Landroid/view/View;"}
    1:1:io.flutter.plugin.editing.TextInputPlugin$InputTarget access$100(io.flutter.plugin.editing.TextInputPlugin):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)Lio/flutter/plugin/editing/k0$c;"}
    1:1:void access$200(io.flutter.plugin.editing.TextInputPlugin):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)V"}
    1:1:void access$300(io.flutter.plugin.editing.TextInputPlugin,android.view.View):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;Landroid/view/View;)V"}
    1:1:void access$400(io.flutter.plugin.editing.TextInputPlugin):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)V"}
    1:1:android.view.autofill.AutofillManager access$500(io.flutter.plugin.editing.TextInputPlugin):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)Landroid/view/autofill/AutofillManager;"}
    1:1:void access$600(io.flutter.plugin.editing.TextInputPlugin,int,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;IZ)V"}
    1:1:void access$700(io.flutter.plugin.editing.TextInputPlugin,double,double,double[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;DD[D)V"}
    1:1:void autofill(android.util.SparseArray):0:0 -> j
    1:1:void clearTextInputClient():0:0 -> k
    1:1:boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w$e;Ly0/w$e;)Z"}
    1:1:android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lio/flutter/embedding/android/m0;Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;"}
    1:1:void destroy():0:0 -> n
    1:1:android.view.inputmethod.InputMethodManager getInputMethodManager():0:0 -> o
    1:1:boolean handleKeyEvent(android.view.KeyEvent):0:0 -> p
    1:1:void hideTextInput(android.view.View):0:0 -> q
    1:1:int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w$c;ZZZZLy0/w$d;)I"}
    1:1:void lockPlatformViewInputConnection():0:0 -> s
    1:1:boolean needsAutofill():0:0 -> t
    1:1:void notifyValueChanged(java.lang.String):0:0 -> u
    1:1:void notifyViewEntered():0:0 -> v
    1:1:void notifyViewExited():0:0 -> w
    1:1:void onProvideAutofillVirtualStructure(android.view.ViewStructure,int):0:0 -> x
    1:1:void saveEditableSizeAndTransform(double,double,double[]):0:0 -> y
    1:1:void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle):0:0 -> z
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillId io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$0.m(android.view.ViewStructure):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$10.m(android.view.ViewStructure,android.view.autofill.AutofillValue):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline10 -> io.flutter.plugin.editing.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$7.m(android.view.ViewStructure,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline11 -> io.flutter.plugin.editing.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$04208460e651786f72e333e91f0aa7676853e5f852a815d1a35bfb1aa660fbc3$0.m(android.view.autofill.AutofillManager,android.view.View,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline12 -> io.flutter.plugin.editing.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Class io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$5a2148ec32b344cd3d3fdaf17d3e08695b023a81eb15238f7dd60b7857b83fa0$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline13 -> io.flutter.plugin.editing.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillManager io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$5a2148ec32b344cd3d3fdaf17d3e08695b023a81eb15238f7dd60b7857b83fa0$2.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline14 -> io.flutter.plugin.editing.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillValue io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$8693f9705179b32774124c2325baf330fb0498fcc7507e40655d130c4bd5824f$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline15 -> io.flutter.plugin.editing.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$8693f9705179b32774124c2325baf330fb0498fcc7507e40655d130c4bd5824f$1.m(android.view.autofill.AutofillValue):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline16 -> io.flutter.plugin.editing.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$2$167979d7e754c907d06dfc44ef11126f153da013177993deb4c41ec718baa78e$1.m(android.view.autofill.AutofillManager,android.view.View,int,android.view.autofill.AutofillValue):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline17 -> io.flutter.plugin.editing.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$2$c4faf0440f3301184472391db70fbc212b094ce96da5013bccb54e79433792fa$0.m(android.view.autofill.AutofillManager,android.view.View,int,android.graphics.Rect):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.editing.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$11.m(android.view.ViewStructure,int,int,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.editing.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillValue io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$12.m(java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline4 -> io.flutter.plugin.editing.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$1.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline5 -> io.flutter.plugin.editing.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.ViewStructure io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$2.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline6 -> io.flutter.plugin.editing.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$3.m(android.view.ViewStructure,android.view.autofill.AutofillId,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline7 -> io.flutter.plugin.editing.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$4.m(android.view.ViewStructure,java.lang.String[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline8 -> io.flutter.plugin.editing.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$5.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline9 -> io.flutter.plugin.editing.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$6.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$1 -> io.flutter.plugin.editing.k0$a:
    io.flutter.plugin.editing.TextInputPlugin this$0 -> a
    1:1:void sendAppPrivateCommand(java.lang.String,android.os.Bundle):0:0 -> a
    1:1:void clearClient():0:0 -> b
    1:1:void show():0:0 -> c
    1:1:void setPlatformViewClient(int,boolean):0:0 -> d
    1:1:void setEditableSizeAndTransform(double,double,double[]):0:0 -> e
    1:1:void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/w$e;)V"}
    1:1:void requestAutofill():0:0 -> g
    1:1:void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILy0/w$b;)V"}
    1:1:void finishAutofillContext(boolean):0:0 -> i
    1:1:void hide():0:0 -> j
io.flutter.plugin.editing.TextInputPlugin$1$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$1$$InternalSyntheticApiModelOutline$2$a706a7eaf3a6647c571296dd4b19a9aa478a2dbfcb873e58d346d4607ff319be$0.m(android.view.autofill.AutofillManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$1$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$1$$InternalSyntheticApiModelOutline$2$a706a7eaf3a6647c571296dd4b19a9aa478a2dbfcb873e58d346d4607ff319be$1.m(android.view.autofill.AutofillManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$2 -> io.flutter.plugin.editing.k0$b:
    boolean val$isAffine -> a
    double[] val$matrix -> b
    double[] val$minMax -> c
    io.flutter.plugin.editing.TextInputPlugin this$0 -> d
    1:1:void inspect(double,double):0:0 -> a
io.flutter.plugin.editing.TextInputPlugin$InputTarget -> io.flutter.plugin.editing.k0$c:
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type -> a
    int id -> b
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type -> io.flutter.plugin.editing.k0$c$a:
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET -> e
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT -> f
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type VIRTUAL_DISPLAY_PLATFORM_VIEW -> g
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type PHYSICAL_DISPLAY_PLATFORM_VIEW -> h
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES -> i
    1:1:io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/plugin/editing/k0$c$a;"}
io.flutter.plugin.editing.TextInputPlugin$MinMax -> io.flutter.plugin.editing.k0$d:
    void inspect(double,double) -> a
io.flutter.plugin.localization.LocalizationPlugin -> a1.g:
    io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel -> a
    android.content.Context context -> b
    io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler -> c
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ly0/l;)V"}
    1:1:android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La1/g;)Landroid/content/Context;"}
    1:1:java.util.Locale localeFromString(java.lang.String):0:0 -> b
    1:1:java.util.Locale resolveNativeLocale(java.util.List):0:0 -> c
    1:1:void sendLocalesToFlutter(android.content.res.Configuration):0:0 -> d
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline0 -> a1.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.LocaleList io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$0.m(android.content.res.Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline1 -> a1.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$1.m(android.os.LocaleList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline2 -> a1.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Locale io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$2.m(android.os.LocaleList,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline3 -> a1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Locale io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$3.m(java.util.List,java.util.Collection):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline4 -> a1.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Locale$LanguageRange io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$7$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$0.m(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline5 -> a1.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$7$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$3.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$1 -> a1.g$a:
    io.flutter.plugin.localization.LocalizationPlugin this$0 -> a
    1:1:void <init>(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La1/g;)V"}
    1:1:java.lang.String getStringResource(java.lang.String,java.lang.String):0:0 -> a
io.flutter.plugin.mouse.MouseCursorPlugin -> b1.b:
    io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView -> a
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel -> b
    java.util.HashMap systemCursorConstants -> c
    1:1:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb1/b$c;Ly0/m;)V"}
    1:1:android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb1/b;Ljava/lang/String;)Landroid/view/PointerIcon;"}
    1:1:io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb1/b;)Lb1/b$c;"}
    1:1:void destroy():0:0 -> c
    1:1:android.view.PointerIcon resolveSystemCursor(java.lang.String):0:0 -> d
io.flutter.plugin.mouse.MouseCursorPlugin$$ExternalSyntheticApiModelOutline0 -> b1.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object io.flutter.plugin.mouse.MouseCursorPlugin$$InternalSyntheticApiModelOutline$2$13fd82c24a20d9ccb523762e03e691b8db1270b5e7779d677df150a434fe20e1$0.m(java.util.HashMap,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.mouse.MouseCursorPlugin$1 -> b1.b$a:
    io.flutter.plugin.mouse.MouseCursorPlugin this$0 -> a
    1:1:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb1/b;)V"}
    1:1:void activateSystemCursor(java.lang.String):0:0 -> a
io.flutter.plugin.mouse.MouseCursorPlugin$2 -> b1.b$b:
    io.flutter.plugin.mouse.MouseCursorPlugin this$0 -> e
    1:1:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb1/b;)V"}
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate -> b1.b$c:
    android.view.PointerIcon getSystemPointerIcon(int) -> c
    void setPointerIcon(android.view.PointerIcon) -> setPointerIcon
io.flutter.plugin.platform.AccessibilityEventsDelegate -> io.flutter.plugin.platform.a:
    io.flutter.view.AccessibilityBridge accessibilityBridge -> a
    1:1:boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean):0:0 -> a
    1:1:void setAccessibilityBridge(io.flutter.view.AccessibilityBridge):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
io.flutter.plugin.platform.PlatformOverlayView -> io.flutter.plugin.platform.b:
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityDelegate -> g
io.flutter.plugin.platform.PlatformPlugin -> io.flutter.plugin.platform.h:
    android.app.Activity activity -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel -> b
    io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate -> c
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme -> d
    int mEnabledOverlays -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler -> f
    1:1:void <init>(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ly0/o;Lio/flutter/plugin/platform/h$d;)V"}
    1:1:void setSystemChromeEnabledSystemUIOverlays(java.util.List):0:0 -> A
    1:1:void setSystemChromePreferredOrientations(int):0:0 -> B
    1:1:void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$j;)V"}
    1:1:void share(java.lang.String):0:0 -> D
    1:1:void updateSystemUiOverlays():0:0 -> E
    1:1:void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$g;)V"}
    1:1:void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ly0/o$i;)V"}
    1:1:void access$100(io.flutter.plugin.platform.PlatformPlugin,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;I)V"}
    1:1:java.lang.CharSequence access$1000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ly0/o$e;)Ljava/lang/CharSequence;"}
    1:1:void access$1100(io.flutter.plugin.platform.PlatformPlugin,java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ljava/lang/String;)V"}
    1:1:boolean access$1200(io.flutter.plugin.platform.PlatformPlugin):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)Z"}
    1:1:void access$1300(io.flutter.plugin.platform.PlatformPlugin,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ljava/lang/String;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel access$1400(io.flutter.plugin.platform.PlatformPlugin):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)Ly0/o;"}
    1:1:void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ly0/o$c;)V"}
    1:1:void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ljava/util/List;)V"}
    1:1:void access$400(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ly0/o$k;)V"}
    1:1:void access$500(io.flutter.plugin.platform.PlatformPlugin):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)V"}
    1:1:void access$600(io.flutter.plugin.platform.PlatformPlugin):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)V"}
    1:1:void access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ly0/o$j;)V"}
    1:1:void access$800(io.flutter.plugin.platform.PlatformPlugin,boolean):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Z)V"}
    1:1:void access$900(io.flutter.plugin.platform.PlatformPlugin):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)V"}
    1:1:boolean clipboardHasStrings():0:0 -> p
    1:1:void destroy():0:0 -> q
    1:1:java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$e;)Ljava/lang/CharSequence;"}
    1:1:void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$i;)V"}
    1:1:void popSystemNavigator():0:0 -> t
    1:1:void restoreSystemChromeSystemUIOverlays():0:0 -> u
    1:1:void setClipboardData(java.lang.String):0:0 -> v
    1:1:void setFrameworkHandlesBack(boolean):0:0 -> w
    1:1:void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$c;)V"}
    1:1:void setSystemChromeChangeListener():0:0 -> y
    1:1:void setSystemChromeEnabledSystemUIMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$k;)V"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.platform.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$1$e22893835d7798a2bd839d9070b861ced926cbc8d9e08e23d1de9cb60d556b23$0.m(android.view.Window,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.platform.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$1$e22893835d7798a2bd839d9070b861ced926cbc8d9e08e23d1de9cb60d556b23$1.m(android.view.Window,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.platform.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$1$e22893835d7798a2bd839d9070b861ced926cbc8d9e08e23d1de9cb60d556b23$2.m(android.view.Window,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.platform.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.ActivityManager$TaskDescription io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$7$b2a4e8a5d811cba4baa05d0d4d81eb75d968beda73bb8093557ff22eebe40135$0.m(java.lang.String,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline4 -> io.flutter.plugin.platform.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$7$b2a4e8a5d811cba4baa05d0d4d81eb75d968beda73bb8093557ff22eebe40135$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$1 -> io.flutter.plugin.platform.h$a:
    io.flutter.plugin.platform.PlatformPlugin this$0 -> a
    1:1:void popSystemNavigator():0:0 -> a
    1:1:void setSystemUiChangeListener():0:0 -> b
    1:1:void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$c;)V"}
    1:1:void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$j;)V"}
    1:1:void restoreSystemUiOverlays():0:0 -> e
    1:1:void setClipboardData(java.lang.String):0:0 -> f
    1:1:void setFrameworkHandlesBack(boolean):0:0 -> g
    1:1:void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$g;)V"}
    1:1:java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$e;)Ljava/lang/CharSequence;"}
    1:1:void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$k;)V"}
    1:1:void setPreferredOrientations(int):0:0 -> k
    1:1:void showSystemOverlays(java.util.List):0:0 -> l
    1:1:void share(java.lang.String):0:0 -> m
    1:1:boolean clipboardHasStrings():0:0 -> n
    1:1:void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/o$i;)V"}
io.flutter.plugin.platform.PlatformPlugin$2 -> io.flutter.plugin.platform.h$b:
    android.view.View val$decorView -> a
    io.flutter.plugin.platform.PlatformPlugin this$0 -> b
    1:1:void $r8$lambda$9FqC1sSWYJ_hsKn0VYLiRoem8So(io.flutter.plugin.platform.PlatformPlugin$2,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h$b;I)V"}
    1:1:void lambda$onSystemUiVisibilityChange$0(int):0:0 -> b
io.flutter.plugin.platform.PlatformPlugin$2$$ExternalSyntheticLambda0 -> io.flutter.plugin.platform.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.platform.PlatformPlugin$2 io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.f$0 -> e
    int io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.f$1 -> f
    1:1:void io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.<init>(io.flutter.plugin.platform.PlatformPlugin$2,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h$b;I)V"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$3 -> io.flutter.plugin.platform.h$c:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType -> a
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay -> b
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness -> c
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate -> io.flutter.plugin.platform.h$d:
    boolean popSystemNavigator() -> a
    void setFrameworkHandlesBack(boolean) -> g
io.flutter.plugin.platform.PlatformView -> io.flutter.plugin.platform.j:
io.flutter.plugin.platform.PlatformViewFactory -> io.flutter.plugin.platform.k:
io.flutter.plugin.platform.PlatformViewRegistry -> io.flutter.plugin.platform.l:
io.flutter.plugin.platform.PlatformViewRegistryImpl -> io.flutter.plugin.platform.m:
    java.util.Map viewFactories -> a
    1:1:io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/plugin/platform/k;"}
io.flutter.plugin.platform.PlatformViewWrapper -> io.flutter.plugin.platform.n:
    void setLayoutParams(android.widget.FrameLayout$LayoutParams) -> a
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate -> io.flutter.plugin.platform.o:
    void detachAccessibilityBridge() -> a
    void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    boolean usesVirtualDisplay(int) -> c
    android.view.View getPlatformViewById(int) -> d
io.flutter.plugin.platform.PlatformViewsController -> io.flutter.plugin.platform.r:
    io.flutter.plugin.platform.PlatformViewRegistryImpl registry -> a
    io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor -> b
    android.content.Context context -> c
    io.flutter.embedding.android.FlutterView flutterView -> d
    io.flutter.view.TextureRegistry textureRegistry -> e
    io.flutter.plugin.editing.TextInputPlugin textInputPlugin -> f
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel -> g
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate -> h
    java.util.HashMap vdControllers -> i
    java.util.HashMap contextToEmbeddedView -> j
    android.util.SparseArray platformViews -> k
    android.util.SparseArray platformViewParent -> l
    android.util.SparseArray overlayLayerViews -> m
    android.util.SparseArray viewWrappers -> n
    int nextOverlayLayerId -> o
    boolean flutterViewConvertedToImageView -> p
    boolean synchronizeToNativeViewHierarchy -> q
    java.util.HashSet currentFrameUsedOverlayLayerIds -> r
    java.util.HashSet currentFrameUsedPlatformViewIds -> s
    io.flutter.embedding.android.MotionEventTracker motionEventTracker -> t
    boolean usesSoftwareRendering -> u
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler -> v
    java.lang.Class[] VIEW_TYPES_REQUIRE_VIRTUAL_DISPLAY -> w
    1:1:io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface():0:0 -> A
    1:1:io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.plugin.platform.PlatformOverlayView):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/b;)Lio/flutter/embedding/engine/FlutterOverlaySurface;"}
    1:1:io.flutter.plugin.platform.PlatformView createPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,boolean):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$d;Z)Lio/flutter/plugin/platform/j;"}
    1:1:void destroyOverlaySurfaces():0:0 -> D
    1:1:void detach():0:0 -> E
    1:1:void detachFromView():0:0 -> F
    1:1:void detachTextInputPlugin():0:0 -> G
    1:1:void diposeAllViews():0:0 -> H
    1:1:void enforceMinimumAndroidApiVersion(int):0:0 -> I
    1:1:void ensureValidRequest(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$d;)V"}
    1:1:void finishFrame(boolean):0:0 -> K
    1:1:float getDisplayDensity():0:0 -> L
    1:1:io.flutter.plugin.platform.PlatformViewRegistry getRegistry():0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/l;"}
    1:1:void initializePlatformViewIfNeeded(int):0:0 -> N
    1:1:void initializeRootImageViewIfNeeded():0:0 -> O
    1:1:void lambda$onEndFrame$3():0:0 -> P
    1:1:void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/y;)V"}
    1:1:void onAttachedToJNI():0:0 -> R
    1:1:void onBeginFrame():0:0 -> S
    1:1:void onDetachedFromJNI():0:0 -> T
    1:1:void onDisplayOverlaySurface(int,int,int,int,int):0:0 -> U
    1:1:void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack):0:0 -> V
    1:1:void onEndFrame():0:0 -> W
    1:1:void onPreEngineRestart():0:0 -> X
    1:1:void onResume():0:0 -> Y
    1:1:void onTrimMemory(int):0:0 -> Z
    1:1:void detachAccessibilityBridge():0:0 -> a
    1:1:android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float):0:0 -> a0
    1:1:void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    1:1:java.util.List parsePointerCoordsList(java.lang.Object,float):0:0 -> b0
    1:1:boolean usesVirtualDisplay(int):0:0 -> c
    1:1:android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object):0:0 -> c0
    1:1:android.view.View getPlatformViewById(int):0:0 -> d
    1:1:java.util.List parsePointerPropertiesList(java.lang.Object):0:0 -> d0
    1:1:void $r8$lambda$JeMmwXVKKKBO6MRWj6kpn9gXeqM(io.flutter.plugin.platform.PlatformViewsController):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)V"}
    1:1:void removeOverlaySurfaces():0:0 -> e0
    1:1:void access$000(io.flutter.plugin.platform.PlatformViewsController,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;I)V"}
    1:1:void setSoftwareRendering(boolean):0:0 -> f0
    1:1:void access$100(io.flutter.plugin.platform.PlatformViewsController,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Ly0/q$d;)V"}
    1:1:int toLogicalPixels(double,float):0:0 -> g0
    1:1:int access$1100(io.flutter.plugin.platform.PlatformViewsController,double):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;D)I"}
    1:1:android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLy0/q$f;Z)Landroid/view/MotionEvent;"}
    1:1:float access$1200(io.flutter.plugin.platform.PlatformViewsController):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)F"}
    1:1:int toPhysicalPixels(double):0:0 -> i0
    1:1:void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Lio/flutter/plugin/platform/y;)V"}
    1:1:void translateMotionEvent(android.view.MotionEvent,android.view.MotionEvent$PointerCoords[]):0:0 -> j0
    1:1:android.content.Context access$1500(io.flutter.plugin.platform.PlatformViewsController):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Landroid/content/Context;"}
    1:1:void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/y;)V"}
    1:1:boolean access$1600(int):0:0 -> l
    1:1:boolean validateDirection(int):0:0 -> l0
    1:1:boolean access$1702(io.flutter.plugin.platform.PlatformViewsController,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Z)Z"}
    1:1:void access$1800(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Lio/flutter/plugin/platform/y;)V"}
    1:1:int access$1900(io.flutter.plugin.platform.PlatformViewsController,double,float):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;DF)I"}
    1:1:void access$200(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Lio/flutter/plugin/platform/j;Ly0/q$d;)V"}
    1:1:android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Landroid/util/SparseArray;"}
    1:1:io.flutter.view.TextureRegistry access$400(io.flutter.plugin.platform.PlatformViewsController):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Lio/flutter/view/TextureRegistry;"}
    1:1:io.flutter.embedding.android.FlutterView access$500(io.flutter.plugin.platform.PlatformViewsController):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Lio/flutter/embedding/android/e0;"}
    1:1:android.util.SparseArray access$900(io.flutter.plugin.platform.PlatformViewsController):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Landroid/util/SparseArray;"}
    1:1:void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/view/TextureRegistry;Lr0/a;)V"}
    1:1:void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)V"}
    1:1:void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> w
    1:1:void attachToView(io.flutter.embedding.android.FlutterView):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)V"}
    1:1:boolean checkInputConnectionProxy(android.view.View):0:0 -> y
    1:1:void configureForHybridComposition(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/j;Ly0/q$d;)V"}
io.flutter.plugin.platform.PlatformViewsController$$ExternalSyntheticLambda0 -> io.flutter.plugin.platform.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.platform.PlatformViewsController io.flutter.plugin.platform.PlatformViewsController$$InternalSyntheticLambda$1$c2433f7ec18a30d7a6689997dabdea3449704686993ef34df7a45e332a8d08e1$0.f$0 -> e
    1:1:void io.flutter.plugin.platform.PlatformViewsController$$InternalSyntheticLambda$1$c2433f7ec18a30d7a6689997dabdea3449704686993ef34df7a45e332a8d08e1$0.<init>(io.flutter.plugin.platform.PlatformViewsController):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)V"}
    1:1:void io.flutter.plugin.platform.PlatformViewsController$$InternalSyntheticLambda$1$c2433f7ec18a30d7a6689997dabdea3449704686993ef34df7a45e332a8d08e1$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformViewsController$1 -> io.flutter.plugin.platform.r$a:
    io.flutter.plugin.platform.PlatformViewsController this$0 -> a
    1:1:void clearFocus(int):0:0 -> a
    1:1:void synchronizeToNativeViewHierarchy(boolean):0:0 -> b
    1:1:void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$f;)V"}
    1:1:void offset(int,double,double):0:0 -> d
    1:1:void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$e;Ly0/q$b;)V"}
    1:1:void setDirection(int,int):0:0 -> f
    1:1:void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$d;)V"}
    1:1:long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/q$d;)J"}
    1:1:void dispose(int):0:0 -> i
    1:1:void $r8$lambda$s1Tgy9tT2SoAjsa1sAiyORJW1wI(io.flutter.plugin.platform.PlatformViewsController$1,io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r$a;Lio/flutter/plugin/platform/y;FLy0/q$b;)V"}
    1:1:void lambda$resize$0(io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/y;FLy0/q$b;)V"}
io.flutter.plugin.platform.PlatformViewsController$1$$ExternalSyntheticLambda0 -> io.flutter.plugin.platform.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.platform.PlatformViewsController$1 io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$0 -> e
    io.flutter.plugin.platform.VirtualDisplayController io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$1 -> f
    float io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$2 -> g
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$3 -> h
    1:1:void io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.<init>(io.flutter.plugin.platform.PlatformViewsController$1,io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r$a;Lio/flutter/plugin/platform/y;FLy0/q$b;)V"}
    1:1:void io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup -> io.flutter.plugin.platform.s:
    android.graphics.Rect viewBounds -> a
    android.graphics.Rect childRect -> b
    1:1:int atMost(int):0:0 -> a
io.flutter.plugin.platform.SingleViewPresentation -> io.flutter.plugin.platform.SingleViewPresentation:
    1:1:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/a;Lio/flutter/plugin/platform/SingleViewPresentation$d;Landroid/view/View$OnFocusChangeListener;Z)V"}
    2:2:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/j;Lio/flutter/plugin/platform/a;ILandroid/view/View$OnFocusChangeListener;)V"}
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout -> io.flutter.plugin.platform.SingleViewPresentation$a:
io.flutter.plugin.platform.SingleViewPresentation$ImmContext -> io.flutter.plugin.platform.SingleViewPresentation$b:
    android.view.inputmethod.InputMethodManager inputMethodManager -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.view.inputmethod.InputMethodManager):0:0 -> <init>
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext -> io.flutter.plugin.platform.SingleViewPresentation$c:
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
    android.view.WindowManager windowManager -> b
    android.content.Context flutterAppWindowContext -> c
    1:1:android.view.WindowManager getWindowManager():0:0 -> a
    1:1:boolean isCalledFromAlertDialog():0:0 -> b
io.flutter.plugin.platform.SingleViewPresentation$PresentationState -> io.flutter.plugin.platform.SingleViewPresentation$d:
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowViewGroup -> b
    1:1:io.flutter.plugin.platform.PlatformView access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;)Lio/flutter/plugin/platform/j;"}
    1:1:io.flutter.plugin.platform.PlatformView access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;Lio/flutter/plugin/platform/j;)Lio/flutter/plugin/platform/j;"}
    1:1:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;)Lio/flutter/plugin/platform/s;"}
    1:1:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;Lio/flutter/plugin/platform/s;)Lio/flutter/plugin/platform/s;"}
    1:1:io.flutter.plugin.platform.WindowManagerHandler access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;)Lio/flutter/plugin/platform/z;"}
    1:1:io.flutter.plugin.platform.WindowManagerHandler access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.WindowManagerHandler):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;Lio/flutter/plugin/platform/z;)Lio/flutter/plugin/platform/z;"}
io.flutter.plugin.platform.SingleViewWindowManager -> io.flutter.plugin.platform.x:
    android.view.WindowManager delegate -> a
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowRootView -> b
    1:1:void addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
    2:2:void addCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.platform.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$573fc38649fc257e28a079cf4377be00db9d882e093f28e1ee82d89fe072ef33$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.platform.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$953a50dd753cf993668a5b905947d63b7720120083cc0cc67dc3ddce466ca3e4$0.m(android.view.WindowManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.platform.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9b7d142d148c8d8a447edf4d1839198704c3a116777d705c82e3b6107b939476$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.platform.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9f3564965ce31d288bde81f28853716eb3fae64fc3aab63ca1d7fbaecc73ea7a$0.m(android.view.WindowManager,java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.VirtualDisplayController -> io.flutter.plugin.platform.y:
    void clearSurface() -> a
    void dispatchTouchEvent(android.view.MotionEvent) -> b
    int getRenderTargetHeight() -> c
    int getRenderTargetWidth() -> d
    android.view.View getView() -> e
    void onInputConnectionLocked() -> f
    void onInputConnectionUnlocked() -> g
    void resetSurface() -> h
    void resize(int,int,java.lang.Runnable) -> i
io.flutter.plugin.platform.WindowManagerHandler -> io.flutter.plugin.platform.z:
io.flutter.plugin.text.ProcessTextPlugin -> c1.a:
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel processTextChannel -> a
    android.content.pm.PackageManager packageManager -> b
    io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding -> c
    java.util.Map resolveInfosById -> d
    java.util.Map requestsByCode -> e
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.ProcessTextChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly0/r;)V"}
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> a
    1:1:java.util.Map queryTextActions():0:0 -> b
    1:1:void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/c;)V"}
    1:1:void processTextAction(java.lang.String,java.lang.String,boolean,io.flutter.plugin.common.MethodChannel$Result):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;ZLz0/j$d;)V"}
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    1:1:void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/c;)V"}
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    1:1:void onDetachedFromActivity():0:0 -> h
    1:1:void cacheResolveInfos():0:0 -> i
    1:1:void onDetachedFromActivityForConfigChanges():0:0 -> j
io.flutter.plugins.urllauncher.Messages -> d1.a:
    1:1:java.util.ArrayList wrapError(java.lang.Throwable):0:0 -> a
io.flutter.plugins.urllauncher.Messages$BrowserOptions -> d1.a$a:
    java.lang.Boolean showTitle -> a
    void <init>() -> <init>
    1:1:io.flutter.plugins.urllauncher.Messages$BrowserOptions fromList(java.util.ArrayList):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;)Ld1/a$a;"}
    1:1:java.lang.Boolean getShowTitle():0:0 -> b
    1:1:void setShowTitle(java.lang.Boolean):0:0 -> c
    1:1:java.util.ArrayList toList():0:0 -> d
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
io.flutter.plugins.urllauncher.Messages$FlutterError -> d1.a$b:
    java.lang.String code -> e
    java.lang.Object details -> f
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.Object):0:0 -> <init>
io.flutter.plugins.urllauncher.Messages$PigeonCodec -> d1.a$c:
    io.flutter.plugins.urllauncher.Messages$PigeonCodec INSTANCE -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object readValueOfType(byte,java.nio.ByteBuffer):0:0 -> g
    1:1:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> p
io.flutter.plugins.urllauncher.Messages$UrlLauncherApi -> d1.a$d:
    void closeWebView() -> a
    java.lang.Boolean openUrlInApp(java.lang.String,java.lang.Boolean,io.flutter.plugins.urllauncher.Messages$WebViewOptions,io.flutter.plugins.urllauncher.Messages$BrowserOptions) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Boolean;Ld1/a$e;Ld1/a$a;)Ljava/lang/Boolean;"}
    java.lang.Boolean launchUrl(java.lang.String,java.util.Map) -> c
    java.lang.Boolean canLaunchUrl(java.lang.String) -> d
    java.lang.Boolean supportsCustomTabs() -> e
io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$ExternalSyntheticLambda0 -> d1.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.urllauncher.Messages$UrlLauncherApi io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$0.f$0 -> a
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$0.<init>(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a$d;)V"}
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$0.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/a$e;)V"}
io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$ExternalSyntheticLambda1 -> d1.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.urllauncher.Messages$UrlLauncherApi io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$1.f$0 -> a
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$1.<init>(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a$d;)V"}
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$1.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/a$e;)V"}
io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$ExternalSyntheticLambda2 -> d1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.urllauncher.Messages$UrlLauncherApi io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$2.f$0 -> a
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$2.<init>(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a$d;)V"}
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$2.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/a$e;)V"}
io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$ExternalSyntheticLambda3 -> d1.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.urllauncher.Messages$UrlLauncherApi io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$3.f$0 -> a
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$3.<init>(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a$d;)V"}
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$3.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/a$e;)V"}
io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$ExternalSyntheticLambda4 -> d1.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.urllauncher.Messages$UrlLauncherApi io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$4.f$0 -> a
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$4.<init>(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a$d;)V"}
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$$InternalSyntheticLambda$3$c0b5a27905d046280cf32d8abe43b1c9c0ff7400f5104a0dd96eb1db9283ca2f$4.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz0/a$e;)V"}
io.flutter.plugins.urllauncher.Messages$UrlLauncherApi$-CC -> d1.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:3:io.flutter.plugin.common.MessageCodec io.flutter.plugins.urllauncher.Messages$UrlLauncherApi.getCodec():0:0 -> a
    1:3:io.flutter.plugin.common.MessageCodec getCodec():0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz0/h;"}
    1:31:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi.lambda$setUp$0(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> b
    1:31:void lambda$setUp$0(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a$d;Ljava/lang/Object;Lz0/a$e;)V"}
    1:38:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi.lambda$setUp$1(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> c
    1:38:void lambda$setUp$1(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a$d;Ljava/lang/Object;Lz0/a$e;)V"}
    1:52:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi.lambda$setUp$2(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> d
    1:52:void lambda$setUp$2(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a$d;Ljava/lang/Object;Lz0/a$e;)V"}
    1:23:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi.lambda$setUp$3(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> e
    1:23:void lambda$setUp$3(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a$d;Ljava/lang/Object;Lz0/a$e;)V"}
    1:23:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi.lambda$setUp$4(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> f
    1:23:void lambda$setUp$4(io.flutter.plugins.urllauncher.Messages$UrlLauncherApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a$d;Ljava/lang/Object;Lz0/a$e;)V"}
    3:6:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi.setUp(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.urllauncher.Messages$UrlLauncherApi):0:0 -> g
    3:6:void setUp(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.urllauncher.Messages$UrlLauncherApi):0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;Ld1/a$d;)V"}
    1:1:void io.flutter.plugins.urllauncher.Messages$UrlLauncherApi.setUp(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugins.urllauncher.Messages$UrlLauncherApi):0:0 -> h
    1:1:void setUp(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugins.urllauncher.Messages$UrlLauncherApi):0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/b;Ljava/lang/String;Ld1/a$d;)V"}
io.flutter.plugins.urllauncher.Messages$WebViewOptions -> d1.a$e:
    java.lang.Boolean enableJavaScript -> a
    java.lang.Boolean enableDomStorage -> b
    java.util.Map headers -> c
    void <init>() -> <init>
    1:1:io.flutter.plugins.urllauncher.Messages$WebViewOptions fromList(java.util.ArrayList):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;)Ld1/a$e;"}
    1:1:java.lang.Boolean getEnableDomStorage():0:0 -> b
    1:1:java.lang.Boolean getEnableJavaScript():0:0 -> c
    1:1:java.util.Map getHeaders():0:0 -> d
    1:1:void setEnableDomStorage(java.lang.Boolean):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:void setEnableJavaScript(java.lang.Boolean):0:0 -> f
    1:1:void setHeaders(java.util.Map):0:0 -> g
    1:1:java.util.ArrayList toList():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
io.flutter.plugins.urllauncher.UrlLauncher -> d1.i:
    android.content.Context applicationContext -> a
    io.flutter.plugins.urllauncher.UrlLauncher$IntentResolver intentResolver -> b
    android.app.Activity activity -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,io.flutter.plugins.urllauncher.UrlLauncher$IntentResolver):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ld1/i$a;)V"}
    1:1:void closeWebView():0:0 -> a
    1:1:java.lang.Boolean openUrlInApp(java.lang.String,java.lang.Boolean,io.flutter.plugins.urllauncher.Messages$WebViewOptions,io.flutter.plugins.urllauncher.Messages$BrowserOptions):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Boolean;Ld1/a$e;Ld1/a$a;)Ljava/lang/Boolean;"}
    1:1:java.lang.Boolean launchUrl(java.lang.String,java.util.Map):0:0 -> c
    1:1:java.lang.Boolean canLaunchUrl(java.lang.String):0:0 -> d
    1:1:java.lang.Boolean supportsCustomTabs():0:0 -> e
    1:1:java.lang.String $r8$lambda$Yei5_7tiSedvgLrFYPAfM0Adwuo(android.content.Context,android.content.Intent):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean containsRestrictedHeader(java.util.Map):0:0 -> g
    1:1:void ensureActivity():0:0 -> h
    1:1:android.os.Bundle extractBundle(java.util.Map):0:0 -> i
    1:1:java.lang.String lambda$new$0(android.content.Context,android.content.Intent):0:0 -> j
    1:1:boolean openCustomTab(android.content.Context,android.net.Uri,android.os.Bundle,io.flutter.plugins.urllauncher.Messages$BrowserOptions):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/net/Uri;Landroid/os/Bundle;Ld1/a$a;)Z"}
    1:1:void setActivity(android.app.Activity):0:0 -> l
io.flutter.plugins.urllauncher.UrlLauncher$$ExternalSyntheticLambda0 -> d1.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.flutter.plugins.urllauncher.UrlLauncher$$InternalSyntheticLambda$2$3c46b941b5a23b65a1c4f3cbd2286da0941eb7e183743b7de5b59ba3e26a51d5$0.f$0 -> a
    1:1:void io.flutter.plugins.urllauncher.UrlLauncher$$InternalSyntheticLambda$2$3c46b941b5a23b65a1c4f3cbd2286da0941eb7e183743b7de5b59ba3e26a51d5$0.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String io.flutter.plugins.urllauncher.UrlLauncher$$InternalSyntheticLambda$2$3c46b941b5a23b65a1c4f3cbd2286da0941eb7e183743b7de5b59ba3e26a51d5$0.getHandlerComponentName(android.content.Intent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugins.urllauncher.UrlLauncher$IntentResolver -> d1.i$a:
    java.lang.String getHandlerComponentName(android.content.Intent) -> a
io.flutter.plugins.urllauncher.UrlLauncherPlugin -> d1.j:
    io.flutter.plugins.urllauncher.UrlLauncher urlLauncher -> a
    void <init>() -> <init>
    1:1:void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/c;)V"}
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    1:1:void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/c;)V"}
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    1:1:void onDetachedFromActivity():0:0 -> h
    1:1:void onDetachedFromActivityForConfigChanges():0:0 -> j
io.flutter.plugins.urllauncher.WebViewActivity -> io.flutter.plugins.urllauncher.WebViewActivity:
    android.content.BroadcastReceiver broadcastReceiver -> a
    android.webkit.WebViewClient webViewClient -> b
    android.webkit.WebView webview -> c
    android.content.IntentFilter closeIntentFilter -> d
    1:1:android.content.Intent createIntent(android.content.Context,java.lang.String,boolean,boolean,android.os.Bundle):0:0 -> a
    1:1:java.util.Map extractHeaders(android.os.Bundle):0:0 -> b
io.flutter.plugins.urllauncher.WebViewActivity$1 -> io.flutter.plugins.urllauncher.WebViewActivity$a:
    io.flutter.plugins.urllauncher.WebViewActivity this$0 -> a
io.flutter.plugins.urllauncher.WebViewActivity$2 -> io.flutter.plugins.urllauncher.WebViewActivity$b:
    io.flutter.plugins.urllauncher.WebViewActivity this$0 -> a
    1:1:boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest):0:0 -> shouldOverrideUrlLoading
    2:2:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String):0:0 -> shouldOverrideUrlLoading
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient -> io.flutter.plugins.urllauncher.WebViewActivity$c:
    io.flutter.plugins.urllauncher.WebViewActivity this$0 -> a
io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient$1 -> io.flutter.plugins.urllauncher.WebViewActivity$c$a:
    io.flutter.plugins.urllauncher.WebViewActivity$FlutterWebChromeClient this$1 -> a
    1:1:boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest):0:0 -> shouldOverrideUrlLoading
    2:2:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String):0:0 -> shouldOverrideUrlLoading
io.flutter.util.HandlerCompat -> e1.a:
    1:1:android.os.Handler createAsyncHandler(android.os.Looper):0:0 -> a
io.flutter.util.PathUtils -> e1.c:
    1:1:java.lang.String getCacheDirectory(android.content.Context):0:0 -> a
    1:1:java.lang.String getDataDirPath(android.content.Context):0:0 -> b
    1:1:java.lang.String getDataDirectory(android.content.Context):0:0 -> c
    1:1:java.lang.String getFilesDir(android.content.Context):0:0 -> d
io.flutter.util.PathUtils$$ExternalSyntheticApiModelOutline0 -> e1.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.io.File io.flutter.util.PathUtils$$InternalSyntheticApiModelOutline$2$c91e5e777cb21248c695a4194b0ebdf6921bd06a45d71c0191b2ba57388c3c5c$0.m(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.util.Preconditions -> e1.d:
    1:1:void checkState(boolean,java.lang.Object):0:0 -> a
io.flutter.util.Predicate -> e1.e:
    boolean test(java.lang.Object) -> test
io.flutter.util.TraceSection -> e1.f:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:void begin(java.lang.String):0:0 -> a
    1:1:void beginAsyncSection(java.lang.String,int):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:java.lang.String cropSectionName(java.lang.String):0:0 -> d
    1:1:void end():0:0 -> e
    1:1:void endAsyncSection(java.lang.String,int):0:0 -> g
    1:1:io.flutter.util.TraceSection scoped(java.lang.String):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le1/f;"}
io.flutter.util.ViewUtils -> e1.g:
    1:1:void calculateMaximumDisplayMetrics(android.content.Context,io.flutter.util.ViewUtils$DisplayUpdater):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Le1/g$a;)V"}
    1:1:android.app.Activity getActivity(android.content.Context):0:0 -> b
io.flutter.util.ViewUtils$DisplayUpdater -> e1.g$a:
    void updateDisplayMetrics(float,float,float) -> a
io.flutter.view.AccessibilityBridge -> io.flutter.view.l:
    int FOCUSABLE_FLAGS -> A
    int FIRST_RESOURCE_ID -> B
    int systemAction -> C
    android.view.View rootAccessibilityView -> a
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel -> b
    android.view.accessibility.AccessibilityManager accessibilityManager -> c
    io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder -> d
    io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate -> e
    android.content.ContentResolver contentResolver -> f
    java.util.Map flutterSemanticsTree -> g
    java.util.Map customAccessibilityActions -> h
    io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode -> i
    java.lang.Integer embeddedAccessibilityFocusedNodeId -> j
    java.lang.Integer embeddedInputFocusedNodeId -> k
    int accessibilityFeatureFlags -> l
    io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode -> m
    io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode -> n
    io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject -> o
    java.util.List flutterNavigationStack -> p
    int previousRouteId -> q
    java.lang.Integer lastLeftFrameInset -> r
    io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener -> s
    boolean accessibleNavigation -> t
    boolean isReleased -> u
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler -> v
    android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener -> w
    android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener -> x
    android.database.ContentObserver animationScaleObserver -> y
    int SCROLLABLE_ACTIONS -> z
    1:1:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ly0/a;Landroid/view/accessibility/AccessibilityManager;Landroid/content/ContentResolver;Lio/flutter/plugin/platform/o;)V"}
    2:2:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ly0/a;Landroid/view/accessibility/AccessibilityManager;Landroid/content/ContentResolver;Lio/flutter/view/AccessibilityViewEmbedder;Lio/flutter/plugin/platform/o;)V"}
    1:1:void handleTouchExploration(float,float,boolean):0:0 -> A
    1:1:boolean isAccessibilityEnabled():0:0 -> B
    1:1:boolean isImportant(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean isTouchExplorationEnabled():0:0 -> D
    1:1:boolean lambda$shouldSetCollectionInfo$0(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$l;)Z"}
    1:1:boolean lambda$shouldSetCollectionInfo$1(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int):0:0 -> G
    1:1:android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int):0:0 -> H
    1:1:android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View):0:0 -> I
    1:1:android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View,int):0:0 -> J
    1:1:boolean onAccessibilityHoverEvent(android.view.MotionEvent):0:0 -> K
    1:1:boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean):0:0 -> L
    1:1:void onTouchExplorationExit():0:0 -> M
    1:1:void onWindowNameChange(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)V"}
    1:1:boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;ILandroid/os/Bundle;Z)Z"}
    1:1:boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;ILandroid/os/Bundle;)Z"}
    1:1:void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;IZZ)V"}
    1:1:void release():0:0 -> R
    1:1:void sendAccessibilityEvent(int,int):0:0 -> S
    1:1:void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> T
    1:1:void sendLatestAccessibilityFlagsToFlutter():0:0 -> U
    1:1:void sendWindowContentChangeEvent(int):0:0 -> V
    1:1:void setAccessibilityPaneTitle(java.lang.String):0:0 -> W
    1:1:void setAccessibleNavigation(boolean):0:0 -> X
    1:1:void setBoldTextFlag():0:0 -> Y
    1:1:void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$k;)V"}
    1:1:boolean $r8$lambda$YZB7OHASiHhGuAwlsDaF5NL1-OU(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean $r8$lambda$rCW4KhEHJoU73TZTzdmyAQLb0vw(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$l;)Z"}
    1:1:void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]):0:0 -> b0
    1:1:android.view.View access$100(io.flutter.view.AccessibilityBridge):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Landroid/view/View;"}
    1:1:void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> c0
    1:1:android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Landroid/content/ContentResolver;"}
    1:1:void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)V"}
    1:1:int access$1172(io.flutter.view.AccessibilityBridge,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)I"}
    1:1:int access$1176(io.flutter.view.AccessibilityBridge,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)I"}
    1:1:void access$1200(io.flutter.view.AccessibilityBridge):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    1:1:void access$1300(io.flutter.view.AccessibilityBridge):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    1:1:android.view.accessibility.AccessibilityEvent access$200(io.flutter.view.AccessibilityBridge,int,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;II)Landroid/view/accessibility/AccessibilityEvent;"}
    1:1:void access$300(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;Landroid/view/accessibility/AccessibilityEvent;)V"}
    1:1:boolean access$400(io.flutter.view.AccessibilityBridge):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Z"}
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$500(io.flutter.view.AccessibilityBridge):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Ly0/a$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$600(io.flutter.view.AccessibilityBridge):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Ly0/a;"}
    1:1:void access$700(io.flutter.view.AccessibilityBridge,boolean):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;Z)V"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$7000(io.flutter.view.AccessibilityBridge,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)Lio/flutter/view/l$l;"}
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$7100(io.flutter.view.AccessibilityBridge,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)Lio/flutter/view/l$h;"}
    1:1:int access$7400():0:0 -> q
    1:1:int access$7500():0:0 -> r
    1:1:io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Lio/flutter/view/l$k;"}
    1:1:android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Landroid/view/accessibility/AccessibilityManager;"}
    1:1:android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String):0:0 -> u
    1:1:boolean doesLayoutInDisplayCutoutModeRequireLeftInset():0:0 -> v
    1:1:android.graphics.Rect getBoundsInScreen(android.graphics.Rect):0:0 -> w
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lio/flutter/view/l$h;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lio/flutter/view/l$l;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/view/l$l;"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline0 -> io.flutter.view.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$57f3d27dd81c9c0c9cb3f040a2bc2f4ed710e0754977b37dad43901665f0d5da$0.m(android.content.res.Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline1 -> io.flutter.view.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$969d1d15ebd1ecc79248d7e183a1573114e6c0da06897b17061c4ac59ef7fb41$0.m(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline2 -> io.flutter.view.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline3 -> io.flutter.view.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$2.m(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline4 -> io.flutter.view.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$3.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline5 -> io.flutter.view.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$4.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline6 -> io.flutter.view.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$5.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline7 -> io.flutter.view.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$2$55564eb321b33ff5930e54c9297f28898a6bb281bf60848001096cf5a3b01a74$0.m(android.view.View,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline8 -> io.flutter.view.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$2$c67eedf3b68f03bc228175118b5b0c43d36ae01689b1e7247ea04402d47da507$0.m(android.view.WindowManager$LayoutParams):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticLambda10 -> io.flutter.view.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$1.test(java.lang.Object):0:0 -> test
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticLambda9 -> io.flutter.view.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.view.AccessibilityBridge$SemanticsNode io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$0.f$0 -> a
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$0.<init>(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)V"}
    1:1:boolean io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$0.test(java.lang.Object):0:0 -> test
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$1 -> io.flutter.view.l$a:
    io.flutter.view.AccessibilityBridge this$0 -> a
    1:1:void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> a
    1:1:void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]):0:0 -> b
    1:1:void onTooltip(java.lang.String):0:0 -> c
    1:1:void onFocus(int):0:0 -> d
    1:1:void onLongPress(int):0:0 -> e
    1:1:void announce(java.lang.String):0:0 -> f
    1:1:void onTap(int):0:0 -> g
io.flutter.view.AccessibilityBridge$2 -> io.flutter.view.l$b:
    io.flutter.view.AccessibilityBridge this$0 -> a
io.flutter.view.AccessibilityBridge$3 -> io.flutter.view.l$c:
    io.flutter.view.AccessibilityBridge this$0 -> a
    1:1:void onChange(boolean):0:0 -> onChange
    2:2:void onChange(boolean,android.net.Uri):0:0 -> onChange
io.flutter.view.AccessibilityBridge$4 -> io.flutter.view.l$d:
    android.view.accessibility.AccessibilityManager val$accessibilityManager -> a
    io.flutter.view.AccessibilityBridge this$0 -> b
io.flutter.view.AccessibilityBridge$5 -> io.flutter.view.l$e:
    int[] $SwitchMap$io$flutter$view$AccessibilityBridge$StringAttributeType -> a
io.flutter.view.AccessibilityBridge$AccessibilityFeature -> io.flutter.view.l$f:
    int value -> e
    io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION -> f
    io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS -> g
    io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS -> h
    io.flutter.view.AccessibilityBridge$AccessibilityFeature BOLD_TEXT -> i
    io.flutter.view.AccessibilityBridge$AccessibilityFeature REDUCE_MOTION -> j
    io.flutter.view.AccessibilityBridge$AccessibilityFeature HIGH_CONTRAST -> k
    io.flutter.view.AccessibilityBridge$AccessibilityFeature ON_OFF_SWITCH_LABELS -> l
    io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES -> m
    1:1:io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$f;"}
io.flutter.view.AccessibilityBridge$Action -> io.flutter.view.l$g:
    io.flutter.view.AccessibilityBridge$Action SET_TEXT -> A
    io.flutter.view.AccessibilityBridge$Action FOCUS -> B
    io.flutter.view.AccessibilityBridge$Action[] $VALUES -> C
    int value -> e
    io.flutter.view.AccessibilityBridge$Action TAP -> f
    io.flutter.view.AccessibilityBridge$Action LONG_PRESS -> g
    io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT -> h
    io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT -> i
    io.flutter.view.AccessibilityBridge$Action SCROLL_UP -> j
    io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN -> k
    io.flutter.view.AccessibilityBridge$Action INCREASE -> l
    io.flutter.view.AccessibilityBridge$Action DECREASE -> m
    io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN -> n
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER -> o
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER -> p
    io.flutter.view.AccessibilityBridge$Action SET_SELECTION -> q
    io.flutter.view.AccessibilityBridge$Action COPY -> r
    io.flutter.view.AccessibilityBridge$Action CUT -> s
    io.flutter.view.AccessibilityBridge$Action PASTE -> t
    io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS -> u
    io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS -> v
    io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION -> w
    io.flutter.view.AccessibilityBridge$Action DISMISS -> x
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD -> y
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD -> z
    1:1:io.flutter.view.AccessibilityBridge$Action[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$g;"}
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction -> io.flutter.view.l$h:
    int resourceId -> a
    int id -> b
    int overrideId -> c
    java.lang.String label -> d
    java.lang.String hint -> e
    1:1:java.lang.String access$3000(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)Ljava/lang/String;"}
    1:1:java.lang.String access$3002(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:int access$3700(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)I"}
    1:1:int access$3702(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;I)I"}
    1:1:java.lang.String access$3800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)Ljava/lang/String;"}
    1:1:java.lang.String access$3802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:int access$4600(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)I"}
    1:1:int access$4602(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;I)I"}
    1:1:int access$4800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)I"}
    1:1:int access$4802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;I)I"}
io.flutter.view.AccessibilityBridge$Flag -> io.flutter.view.l$i:
    io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE -> A
    io.flutter.view.AccessibilityBridge$Flag IS_LINK -> B
    io.flutter.view.AccessibilityBridge$Flag IS_SLIDER -> C
    io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY -> D
    io.flutter.view.AccessibilityBridge$Flag IS_CHECK_STATE_MIXED -> E
    io.flutter.view.AccessibilityBridge$Flag HAS_EXPANDED_STATE -> F
    io.flutter.view.AccessibilityBridge$Flag IS_EXPANDED -> G
    io.flutter.view.AccessibilityBridge$Flag[] $VALUES -> H
    int value -> e
    io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE -> f
    io.flutter.view.AccessibilityBridge$Flag IS_CHECKED -> g
    io.flutter.view.AccessibilityBridge$Flag IS_SELECTED -> h
    io.flutter.view.AccessibilityBridge$Flag IS_BUTTON -> i
    io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD -> j
    io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED -> k
    io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE -> l
    io.flutter.view.AccessibilityBridge$Flag IS_ENABLED -> m
    io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP -> n
    io.flutter.view.AccessibilityBridge$Flag IS_HEADER -> o
    io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED -> p
    io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE -> q
    io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE -> r
    io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN -> s
    io.flutter.view.AccessibilityBridge$Flag IS_IMAGE -> t
    io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION -> u
    io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE -> v
    io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED -> w
    io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING -> x
    io.flutter.view.AccessibilityBridge$Flag IS_MULTILINE -> y
    io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY -> z
    1:1:io.flutter.view.AccessibilityBridge$Flag[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$i;"}
io.flutter.view.AccessibilityBridge$LocaleStringAttribute -> io.flutter.view.l$j:
    java.lang.String locale -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(io.flutter.view.AccessibilityBridge$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$a;)V"}
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener -> io.flutter.view.l$k:
    void onAccessibilityChanged(boolean,boolean) -> a
io.flutter.view.AccessibilityBridge$SemanticsNode -> io.flutter.view.l$l:
    int previousNodeId -> A
    io.flutter.view.AccessibilityBridge$TextDirection textDirection -> B
    boolean hadPreviousConfig -> C
    int previousFlags -> D
    int previousActions -> E
    int previousTextSelectionBase -> F
    int previousTextSelectionExtent -> G
    float previousScrollPosition -> H
    float previousScrollExtentMax -> I
    float previousScrollExtentMin -> J
    java.lang.String previousValue -> K
    java.lang.String previousLabel -> L
    float left -> M
    float top -> N
    float right -> O
    float bottom -> P
    float[] transform -> Q
    io.flutter.view.AccessibilityBridge$SemanticsNode parent -> R
    java.util.List childrenInTraversalOrder -> S
    java.util.List childrenInHitTestOrder -> T
    java.util.List customAccessibilityActions -> U
    io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride -> V
    io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride -> W
    boolean inverseTransformDirty -> X
    float[] inverseTransform -> Y
    boolean globalGeometryDirty -> Z
    io.flutter.view.AccessibilityBridge accessibilityBridge -> a
    float[] globalTransform -> a0
    int id -> b
    android.graphics.Rect globalRect -> b0
    int flags -> c
    int actions -> d
    int maxValueLength -> e
    int currentValueLength -> f
    int textSelectionBase -> g
    int textSelectionExtent -> h
    int platformViewId -> i
    int scrollChildren -> j
    int scrollIndex -> k
    float scrollPosition -> l
    float scrollExtentMax -> m
    float scrollExtentMin -> n
    java.lang.String identifier -> o
    java.lang.String label -> p
    java.util.List labelAttributes -> q
    java.lang.String value -> r
    java.util.List valueAttributes -> s
    java.lang.String increasedValue -> t
    java.util.List increasedValueAttributes -> u
    java.lang.String decreasedValue -> v
    java.util.List decreasedValueAttributes -> w
    java.lang.String hint -> x
    java.util.List hintAttributes -> y
    java.lang.String tooltip -> z
    1:1:java.lang.CharSequence access$3300(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/CharSequence;"}
    1:1:float max(float,float,float,float):0:0 -> A0
    1:1:java.lang.CharSequence access$3400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/CharSequence;"}
    1:1:float min(float,float,float,float):0:0 -> B0
    1:1:java.lang.String access$3500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate):0:0 -> C0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Le1/e;)Z"}
    1:1:java.util.List access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:void transformPoint(float[],float[],float[]):0:0 -> D0
    1:1:java.util.List access$3900(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:void updateRecursively(float[],java.util.Set,boolean):0:0 -> E0
    1:1:int access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:void updateWith(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> F0
    1:1:java.lang.String access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.util.List access$4202(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/util/List;)Ljava/util/List;"}
    1:1:java.util.List access$4300(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:java.lang.String access$4400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.util.List access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$4700(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],boolean):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;[FZ)Lio/flutter/view/l$l;"}
    1:1:void access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/nio/ByteBuffer;[Ljava/lang/String;[Ljava/nio/ByteBuffer;)V"}
    1:1:boolean access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean access$5102(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Z)Z"}
    1:1:boolean access$5202(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Z)Z"}
    1:1:void access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;[FLjava/util/Set;Z)V"}
    1:1:void access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/util/List;)V"}
    1:1:boolean access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:float access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)F"}
    1:1:float access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)F"}
    1:1:float access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)F"}
    1:1:boolean access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$g;)Z"}
    1:1:int access$6000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.util.List access$6100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:boolean access$6200(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:boolean access$6300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$i;)Z"}
    1:1:int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:java.lang.String access$6400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.lang.String access$6500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Le1/e;)Z"}
    1:1:int access$6600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:int access$6700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Landroid/graphics/Rect;"}
    1:1:java.lang.String access$6800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.lang.String access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:void collectRoutes(java.util.List):0:0 -> g0
    1:1:boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:android.text.SpannableString createSpannableString(java.lang.String,java.util.List):0:0 -> h0
    1:1:boolean access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$i;)Z"}
    1:1:boolean didChangeLabel():0:0 -> i0
    1:1:int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:boolean didScroll():0:0 -> j0
    1:1:int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:void ensureInverseTransform():0:0 -> k0
    1:1:int access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le1/e;)Lio/flutter/view/l$l;"}
    1:1:int access$2202(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:android.graphics.Rect getGlobalRect():0:0 -> m0
    1:1:int access$2212(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:java.lang.CharSequence getHint():0:0 -> n0
    1:1:int access$2220(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:java.lang.CharSequence getLabel():0:0 -> o0
    1:1:boolean access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$g;)Z"}
    1:1:java.lang.String getRouteName():0:0 -> p0
    1:1:int access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.util.List getStringAttributesFromBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer[]):0:0 -> q0
    1:1:java.lang.String access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.lang.CharSequence getTextFieldHint():0:0 -> r0
    1:1:java.lang.String access$2502(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:java.lang.CharSequence getValue():0:0 -> s0
    1:1:int access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.lang.CharSequence getValueLabelHint():0:0 -> t0
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Lio/flutter/view/l$l;"}
    1:1:boolean hadAction(io.flutter.view.AccessibilityBridge$Action):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$g;)Z"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$2702(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$l;)Lio/flutter/view/l$l;"}
    1:1:boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$i;)Z"}
    1:1:int access$2800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:boolean hasAction(io.flutter.view.AccessibilityBridge$Action):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$g;)Z"}
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2900(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Lio/flutter/view/l$h;"}
    1:1:boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag):0:0 -> x0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$i;)Z"}
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Lio/flutter/view/l$h;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[],boolean):0:0 -> y0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([FZ)Lio/flutter/view/l$l;"}
    1:1:java.lang.CharSequence access$3200(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/CharSequence;"}
    1:1:boolean isFocusable():0:0 -> z0
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute -> io.flutter.view.l$m:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(io.flutter.view.AccessibilityBridge$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$a;)V"}
io.flutter.view.AccessibilityBridge$StringAttribute -> io.flutter.view.l$n:
    int start -> a
    int end -> b
    io.flutter.view.AccessibilityBridge$StringAttributeType type -> c
    void <init>() -> <init>
    1:1:void <init>(io.flutter.view.AccessibilityBridge$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$a;)V"}
io.flutter.view.AccessibilityBridge$StringAttributeType -> io.flutter.view.l$o:
    io.flutter.view.AccessibilityBridge$StringAttributeType SPELLOUT -> e
    io.flutter.view.AccessibilityBridge$StringAttributeType LOCALE -> f
    io.flutter.view.AccessibilityBridge$StringAttributeType[] $VALUES -> g
    1:1:io.flutter.view.AccessibilityBridge$StringAttributeType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$o;"}
io.flutter.view.AccessibilityBridge$TextDirection -> io.flutter.view.l$p:
    io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN -> e
    io.flutter.view.AccessibilityBridge$TextDirection LTR -> f
    io.flutter.view.AccessibilityBridge$TextDirection RTL -> g
    io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES -> h
    1:1:io.flutter.view.AccessibilityBridge$TextDirection[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$p;"}
    1:1:io.flutter.view.AccessibilityBridge$TextDirection fromInt(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lio/flutter/view/l$p;"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline0 -> io.flutter.view.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$0.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline1 -> io.flutter.view.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$10.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline2 -> io.flutter.view.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$11.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline3 -> io.flutter.view.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$1.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline4 -> io.flutter.view.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$2.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline5 -> io.flutter.view.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$3.m(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline6 -> io.flutter.view.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$4.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline7 -> io.flutter.view.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$6.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline8 -> io.flutter.view.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$7.m(android.view.accessibility.AccessibilityNodeInfo,java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline9 -> io.flutter.view.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$8.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$1 -> io.flutter.view.AccessibilityViewEmbedder$a:
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors -> io.flutter.view.AccessibilityViewEmbedder$b:
    java.lang.reflect.Method getSourceNodeId -> a
    java.lang.reflect.Method getParentNodeId -> b
    java.lang.reflect.Method getRecordSourceNodeId -> c
    java.lang.reflect.Method getChildId -> d
    java.lang.reflect.Field childNodeIdsField -> e
    java.lang.reflect.Method longArrayGetIndex -> f
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$a;)V"}
    1:1:java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityNodeInfo;)Ljava/lang/Long;"}
    1:1:int access$200(long):0:0 -> b
    1:1:java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityNodeInfo;)Ljava/lang/Long;"}
    1:1:java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityNodeInfo;I)Ljava/lang/Long;"}
    1:1:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityRecord;)Ljava/lang/Long;"}
    1:1:java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> f
    1:1:java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> g
    1:1:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0:0 -> h
    1:1:java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> i
    1:1:int getVirtualNodeId(long):0:0 -> j
    1:1:boolean isBitSet(long,int):0:0 -> k
    1:1:java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo):0:0 -> l
io.flutter.view.AccessibilityViewEmbedder$ViewAndId -> io.flutter.view.AccessibilityViewEmbedder$c:
    android.view.View view -> a
    int id -> b
    1:1:void <init>(android.view.View,int):0:0 -> <init>
    2:2:void <init>(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;ILio/flutter/view/AccessibilityViewEmbedder$a;)V"}
io.flutter.view.TextureRegistry$ImageTextureEntry -> io.flutter.view.TextureRegistry$ImageTextureEntry:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$OnFrameConsumedListener -> io.flutter.view.TextureRegistry$a:
io.flutter.view.TextureRegistry$OnTrimMemoryListener -> io.flutter.view.TextureRegistry$b:
io.flutter.view.TextureRegistry$SurfaceProducer -> io.flutter.view.TextureRegistry$SurfaceProducer:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceProducer$Callback -> io.flutter.view.TextureRegistry$SurfaceProducer$a:
io.flutter.view.TextureRegistry$SurfaceTextureEntry -> io.flutter.view.TextureRegistry$SurfaceTextureEntry:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC -> io.flutter.view.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/TextureRegistry$a;)V"}
    1:1:void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/TextureRegistry$b;)V"}
io.flutter.view.VsyncWaiter -> io.flutter.view.x:
    long refreshPeriodNanos -> a
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> b
    io.flutter.view.VsyncWaiter$FrameCallback frameCallback -> c
    io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate -> d
    io.flutter.view.VsyncWaiter instance -> e
    io.flutter.view.VsyncWaiter$DisplayListener listener -> f
    1:1:long access$000(io.flutter.view.VsyncWaiter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;)J"}
    1:1:long access$002(io.flutter.view.VsyncWaiter,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;J)J"}
    1:1:io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.view.VsyncWaiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;)Lio/flutter/embedding/engine/FlutterJNI;"}
    1:1:io.flutter.view.VsyncWaiter$FrameCallback access$200(io.flutter.view.VsyncWaiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;)Lio/flutter/view/x$c;"}
    1:1:io.flutter.view.VsyncWaiter$FrameCallback access$202(io.flutter.view.VsyncWaiter,io.flutter.view.VsyncWaiter$FrameCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;Lio/flutter/view/x$c;)Lio/flutter/view/x$c;"}
    1:1:io.flutter.view.VsyncWaiter getInstance(android.hardware.display.DisplayManager,io.flutter.embedding.engine.FlutterJNI):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/hardware/display/DisplayManager;Lio/flutter/embedding/engine/FlutterJNI;)Lio/flutter/view/x;"}
    1:1:void init():0:0 -> g
io.flutter.view.VsyncWaiter$1 -> io.flutter.view.x$a:
    io.flutter.view.VsyncWaiter this$0 -> a
    1:1:void asyncWaitForVsync(long):0:0 -> a
    1:1:android.view.Choreographer$FrameCallback obtainFrameCallback(long):0:0 -> b
io.flutter.view.VsyncWaiter$DisplayListener -> io.flutter.view.x$b:
    android.hardware.display.DisplayManager displayManager -> a
    io.flutter.view.VsyncWaiter this$0 -> b
    1:1:void register():0:0 -> a
io.flutter.view.VsyncWaiter$FrameCallback -> io.flutter.view.x$c:
    long cookie -> a
    io.flutter.view.VsyncWaiter this$0 -> b
    1:1:long access$302(io.flutter.view.VsyncWaiter$FrameCallback,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x$c;J)J"}
kotlin.ExceptionsKt -> f1.a:
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ExceptionsKt__ExceptionsKt -> f1.b:
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
kotlin.Function -> f1.c:
kotlin.KotlinNothingValueException -> f1.d:
    void <init>() -> <init>
kotlin.Lazy -> f1.e:
    boolean isInitialized() -> a
    java.lang.Object getValue() -> getValue
kotlin.LazyKt -> f1.f:
    1:1:kotlin.Lazy lazy(kotlin.jvm.functions.Function0):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/a;)Lf1/e;"}
kotlin.LazyKt__LazyJVMKt -> f1.g:
    1:1:kotlin.Lazy lazy(kotlin.jvm.functions.Function0):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/a;)Lf1/e;"}
kotlin.LazyKt__LazyKt -> f1.h:
kotlin.NoWhenBranchMatchedException -> f1.i:
    void <init>() -> <init>
kotlin.Pair -> f1.j:
    java.lang.Object first -> e
    java.lang.Object second -> f
    1:1:void <init>(java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object component1():0:0 -> a
    1:1:java.lang.Object component2():0:0 -> b
    1:1:java.lang.Object getFirst():0:0 -> c
    1:1:java.lang.Object getSecond():0:0 -> d
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.Result -> f1.k:
    kotlin.Result$Companion Companion -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> a
    1:1:java.lang.Throwable exceptionOrNull-impl(java.lang.Object):0:0 -> b
    1:1:boolean isFailure-impl(java.lang.Object):0:0 -> c
    1:1:boolean isSuccess-impl(java.lang.Object):0:0 -> d
kotlin.Result$Companion -> f1.k$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
kotlin.Result$Failure -> f1.k$b:
    java.lang.Throwable exception -> e
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.ResultKt -> f1.l:
    1:1:java.lang.Object createFailure(java.lang.Throwable):0:0 -> a
    1:1:void throwOnFailure(java.lang.Object):0:0 -> b
kotlin.SynchronizedLazyImpl -> f1.m:
    kotlin.jvm.functions.Function0 initializer -> e
    java.lang.Object _value -> f
    java.lang.Object lock -> g
    1:1:void <init>(kotlin.jvm.functions.Function0,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/a;Ljava/lang/Object;)V"}
    2:2:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/a;Ljava/lang/Object;ILs1/g;)V"}
    1:1:boolean isInitialized():0:0 -> a
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:java.lang.String toString():0:0 -> toString
kotlin.TuplesKt -> f1.n:
    1:1:kotlin.Pair to(java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Lf1/j;"}
kotlin.UNINITIALIZED_VALUE -> f1.o:
    kotlin.UNINITIALIZED_VALUE INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.UninitializedPropertyAccessException -> f1.p:
    1:1:void <init>(java.lang.String):0:0 -> <init>
kotlin.Unit -> f1.q:
    kotlin.Unit INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.AbstractCollection -> g1.a:
    void <init>() -> <init>
    int getSize() -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.AbstractCollection$toString$1 -> g1.a$a:
    kotlin.collections.AbstractCollection this$0 -> f
    1:1:void <init>(kotlin.collections.AbstractCollection):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/a;)V"}
    1:1:java.lang.CharSequence invoke(java.lang.Object):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
kotlin.collections.AbstractList -> g1.b:
    kotlin.collections.AbstractList$Companion Companion -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void add(int,java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    java.lang.Object get(int) -> get
    1:1:int hashCode():0:0 -> hashCode
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:java.lang.Object remove(int):0:0 -> remove
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:java.util.List subList(int,int):0:0 -> subList
kotlin.collections.AbstractList$Companion -> g1.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:void checkElementIndex$kotlin_stdlib(int,int):0:0 -> a
    1:1:void checkPositionIndex$kotlin_stdlib(int,int):0:0 -> b
    1:1:void checkRangeIndexes$kotlin_stdlib(int,int,int):0:0 -> c
    1:1:int newCapacity$kotlin_stdlib(int,int):0:0 -> d
    1:1:boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection):0:0 -> e
    1:1:int orderedHashCode$kotlin_stdlib(java.util.Collection):0:0 -> f
kotlin.collections.AbstractList$IteratorImpl -> g1.b$b:
    int index -> a
    kotlin.collections.AbstractList this$0 -> b
    1:1:void <init>(kotlin.collections.AbstractList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/b;)V"}
    1:1:int getIndex():0:0 -> a
    1:1:void setIndex(int):0:0 -> b
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
kotlin.collections.AbstractList$ListIteratorImpl -> g1.b$c:
    kotlin.collections.AbstractList this$0 -> c
    1:1:void <init>(kotlin.collections.AbstractList,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/b;I)V"}
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:1:int nextIndex():0:0 -> nextIndex
    1:1:java.lang.Object previous():0:0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void set(java.lang.Object):0:0 -> set
kotlin.collections.AbstractList$SubList -> g1.b$d:
    kotlin.collections.AbstractList list -> f
    int fromIndex -> g
    int _size -> h
    1:1:void <init>(kotlin.collections.AbstractList,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/b;II)V"}
    1:1:int getSize():0:0 -> a
    1:1:java.lang.Object get(int):0:0 -> get
kotlin.collections.AbstractMutableCollection -> g1.c:
    void <init>() -> <init>
    int getSize() -> a
    1:1:int size():0:0 -> size
kotlin.collections.AbstractMutableList -> g1.d:
    void <init>() -> <init>
    int getSize() -> a
    java.lang.Object removeAt(int) -> b
    1:1:java.lang.Object remove(int):0:0 -> remove
    1:1:int size():0:0 -> size
kotlin.collections.AbstractMutableSet -> g1.e:
    void <init>() -> <init>
    int getSize() -> a
    1:1:int size():0:0 -> size
kotlin.collections.ArrayAsCollection -> g1.f:
    java.lang.Object[] values -> e
    boolean isVarargs -> f
    1:1:void <init>(java.lang.Object[],boolean):0:0 -> <init>
    1:1:int getSize():0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
kotlin.collections.ArrayDeque -> g1.g:
    int head -> e
    java.lang.Object[] elementData -> f
    int size -> g
    kotlin.collections.ArrayDeque$Companion Companion -> h
    java.lang.Object[] emptyElementData -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:int getSize():0:0 -> a
    1:1:void add(int,java.lang.Object):0:0 -> add
    2:2:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:java.lang.Object removeAt(int):0:0 -> b
    1:1:void addFirst(java.lang.Object):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:void addLast(java.lang.Object):0:0 -> d
    1:1:void copyCollectionElements(int,java.util.Collection):0:0 -> e
    1:1:void copyElements(int):0:0 -> f
    1:1:int decremented(int):0:0 -> g
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:void ensureCapacity(int):0:0 -> h
    1:1:int incremented(int):0:0 -> i
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:int negativeMod(int):0:0 -> j
    1:1:int positiveMod(int):0:0 -> k
    1:1:java.lang.Object removeFirst():0:0 -> l
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.lang.Object removeFirstOrNull():0:0 -> m
    1:1:java.lang.Object removeLast():0:0 -> n
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
kotlin.collections.ArrayDeque$Companion -> g1.g$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
kotlin.collections.ArraysKt -> g1.h:
    1:1:java.util.List asList(java.lang.Object[]):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object[] copyOfRange(java.lang.Object[],int,int):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void fill(int[],int,int,int):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List drop(java.lang.Object[],int):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object getOrNull(java.lang.Object[],int):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr1/l;ILjava/lang/Object;)Ljava/lang/String;"}
    1:1:char single(char[]):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object singleOrNull(java.lang.Object[]):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.ArraysKt__ArraysJVMKt -> g1.i:
    1:1:java.lang.Object[] arrayOfNulls(java.lang.Object[],int):0:0 -> a
    1:1:void copyOfRangeToIndexCheck(int,int):0:0 -> b
kotlin.collections.ArraysKt__ArraysKt -> g1.j:
kotlin.collections.ArraysKt___ArraysJvmKt -> g1.k:
    1:1:java.util.List asList(java.lang.Object[]):0:0 -> c
    1:1:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int):0:0 -> d
    1:1:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object):0:0 -> e
    1:1:java.lang.Object[] copyOfRange(java.lang.Object[],int,int):0:0 -> f
    1:1:void fill(int[],int,int,int):0:0 -> g
    1:1:void fill(java.lang.Object[],java.lang.Object,int,int):0:0 -> h
    1:1:void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object):0:0 -> i
    1:1:void sort(java.lang.Object[]):0:0 -> j
kotlin.collections.ArraysKt___ArraysKt -> g1.l:
    1:1:boolean contains(java.lang.Object[],java.lang.Object):0:0 -> k
    1:1:java.util.List drop(java.lang.Object[],int):0:0 -> l
    1:1:int getLastIndex(java.lang.Object[]):0:0 -> m
    1:1:java.lang.Object getOrNull(java.lang.Object[],int):0:0 -> n
    1:1:int indexOf(java.lang.Object[],java.lang.Object):0:0 -> o
    1:1:java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr1/l;)Ljava/lang/Appendable;"}
    1:1:java.lang.String joinToString(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr1/l;)Ljava/lang/String;"}
    1:1:java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr1/l;ILjava/lang/Object;)Ljava/lang/String;"}
    1:1:char single(char[]):0:0 -> s
    1:1:java.lang.Object singleOrNull(java.lang.Object[]):0:0 -> t
    1:1:java.util.List takeLast(java.lang.Object[],int):0:0 -> u
    1:1:java.util.Collection toCollection(java.lang.Object[],java.util.Collection):0:0 -> v
    1:1:java.util.List toList(java.lang.Object[]):0:0 -> w
    1:1:java.util.List toMutableList(java.lang.Object[]):0:0 -> x
kotlin.collections.ArraysUtilJVM -> g1.m:
    1:1:java.util.List asList(java.lang.Object[]):0:0 -> a
kotlin.collections.CollectionsKt -> g1.n:
    1:1:int[] toIntArray(java.util.Collection):0:0 -> B
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List toList(java.lang.Iterable):0:0 -> C
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Set toSet(java.lang.Iterable):0:0 -> F
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List build(java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List createListBuilder():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List listOf(java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object[] terminateCollectionToArray(int,java.lang.Object[]):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.ArrayList arrayListOf(java.lang.Object[]):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List emptyList():0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getLastIndex(java.util.List):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List listOf(java.lang.Object[]):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List mutableListOf(java.lang.Object[]):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void throwCountOverflow():0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void throwIndexOverflow():0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int collectionSizeOrDefault(java.lang.Iterable,int):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean addAll(java.util.Collection,java.lang.Iterable):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object removeLast(java.util.List):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr1/l;ILjava/lang/Object;)Ljava/lang/Appendable;"}
    1:1:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr1/l;ILjava/lang/Object;)Ljava/lang/String;"}
    1:1:java.lang.Comparable minOrNull(java.lang.Iterable):0:0 -> w
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object single(java.lang.Iterable):0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List sorted(java.lang.Iterable):0:0 -> z
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.CollectionsKt__CollectionsJVMKt -> g1.o:
    1:1:java.util.List build(java.util.List):0:0 -> a
    1:1:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean):0:0 -> b
    1:1:java.util.List createListBuilder():0:0 -> c
    1:1:java.util.List listOf(java.lang.Object):0:0 -> d
    1:1:java.lang.Object[] terminateCollectionToArray(int,java.lang.Object[]):0:0 -> e
kotlin.collections.CollectionsKt__CollectionsKt -> g1.p:
    1:1:java.util.ArrayList arrayListOf(java.lang.Object[]):0:0 -> f
    1:1:java.util.Collection asCollection(java.lang.Object[]):0:0 -> g
    1:1:java.util.List emptyList():0:0 -> h
    1:1:int getLastIndex(java.util.List):0:0 -> i
    1:1:java.util.List listOf(java.lang.Object[]):0:0 -> j
    1:1:java.util.List mutableListOf(java.lang.Object[]):0:0 -> k
    1:1:java.util.List optimizeReadOnlyList(java.util.List):0:0 -> l
    1:1:void throwCountOverflow():0:0 -> m
    1:1:void throwIndexOverflow():0:0 -> n
kotlin.collections.CollectionsKt__IterablesKt -> g1.q:
    1:1:int collectionSizeOrDefault(java.lang.Iterable,int):0:0 -> o
kotlin.collections.CollectionsKt__IteratorsJVMKt -> g1.r:
kotlin.collections.CollectionsKt__IteratorsKt -> g1.s:
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> g1.t:
    1:1:void sort(java.util.List):0:0 -> p
kotlin.collections.CollectionsKt__MutableCollectionsKt -> g1.u:
    1:1:boolean addAll(java.util.Collection,java.lang.Iterable):0:0 -> q
    1:1:java.lang.Object removeLast(java.util.List):0:0 -> r
kotlin.collections.CollectionsKt__ReversedViewsKt -> g1.v:
kotlin.collections.CollectionsKt___CollectionsJvmKt -> g1.w:
kotlin.collections.CollectionsKt___CollectionsKt -> g1.x:
    1:1:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection):0:0 -> A
    1:1:int[] toIntArray(java.util.Collection):0:0 -> B
    1:1:java.util.List toList(java.lang.Iterable):0:0 -> C
    1:1:java.util.List toMutableList(java.lang.Iterable):0:0 -> D
    1:1:java.util.List toMutableList(java.util.Collection):0:0 -> E
    1:1:java.util.Set toSet(java.lang.Iterable):0:0 -> F
    1:1:java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr1/l;)Ljava/lang/Appendable;"}
    1:1:java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr1/l;ILjava/lang/Object;)Ljava/lang/Appendable;"}
    1:1:java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr1/l;)Ljava/lang/String;"}
    1:1:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lr1/l;ILjava/lang/Object;)Ljava/lang/String;"}
    1:1:java.lang.Comparable minOrNull(java.lang.Iterable):0:0 -> w
    1:1:java.lang.Object single(java.lang.Iterable):0:0 -> x
    1:1:java.lang.Object single(java.util.List):0:0 -> y
    1:1:java.util.List sorted(java.lang.Iterable):0:0 -> z
kotlin.collections.EmptyIterator -> g1.y:
    kotlin.collections.EmptyIterator INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Void next():0:0 -> a
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:java.lang.Void previous():0:0 -> b
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:1:java.lang.Object next():0:0 -> next
    1:1:int nextIndex():0:0 -> nextIndex
    1:1:java.lang.Object previous():0:0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void remove():0:0 -> remove
    1:1:void set(java.lang.Object):0:0 -> set
kotlin.collections.EmptyList -> g1.z:
    kotlin.collections.EmptyList INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean contains(java.lang.Void):0:0 -> a
    1:1:void add(int,java.lang.Object):0:0 -> add
    2:2:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:java.lang.Void get(int):0:0 -> b
    1:1:int getSize():0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:int indexOf(java.lang.Void):0:0 -> d
    1:1:int lastIndexOf(java.lang.Void):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:int hashCode():0:0 -> hashCode
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:java.lang.Object remove(int):0:0 -> remove
    2:2:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:int size():0:0 -> size
    1:1:java.util.List subList(int,int):0:0 -> subList
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.EmptyMap -> g1.a0:
    kotlin.collections.EmptyMap INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean containsValue(java.lang.Void):0:0 -> a
    1:1:java.lang.Void get(java.lang.Object):0:0 -> b
    1:1:java.util.Set getEntries():0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:1:java.util.Set getKeys():0:0 -> d
    1:1:int getSize():0:0 -> e
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.util.Collection getValues():0:0 -> f
    1:1:java.lang.Void remove(java.lang.Object):0:0 -> g
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:void putAll(java.util.Map):0:0 -> putAll
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.util.Collection values():0:0 -> values
kotlin.collections.EmptySet -> g1.b0:
    kotlin.collections.EmptySet INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean contains(java.lang.Void):0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:int getSize():0:0 -> b
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.IndexedValue -> g1.c0:
    int index -> a
    java.lang.Object value -> b
    1:1:void <init>(int,java.lang.Object):0:0 -> <init>
    1:1:int getIndex():0:0 -> a
    1:1:java.lang.Object getValue():0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.IntIterator -> g1.d0:
    void <init>() -> <init>
    int nextInt() -> a
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
kotlin.collections.MapsKt -> g1.e0:
    1:1:java.util.Map build(java.util.Map):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Map createMapBuilder():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int mapCapacity(int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Map emptyMap():0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object getValue(java.util.Map,java.lang.Object):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Map plus(java.util.Map,kotlin.Pair):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;Lf1/j;)Ljava/util/Map;"}
    1:1:java.util.Map toMap(java.lang.Iterable):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.MapsKt__MapWithDefaultKt -> g1.f0:
    1:1:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object):0:0 -> a
kotlin.collections.MapsKt__MapsJVMKt -> g1.g0:
    1:1:java.util.Map build(java.util.Map):0:0 -> b
    1:1:java.util.Map createMapBuilder():0:0 -> c
    1:1:int mapCapacity(int):0:0 -> d
    1:1:java.util.Map mapOf(kotlin.Pair):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/j;)Ljava/util/Map;"}
    1:1:java.util.Map toSingletonMap(java.util.Map):0:0 -> f
kotlin.collections.MapsKt__MapsKt -> g1.h0:
    1:1:java.util.Map emptyMap():0:0 -> g
    1:1:java.lang.Object getValue(java.util.Map,java.lang.Object):0:0 -> h
    1:1:java.util.Map optimizeReadOnlyMap(java.util.Map):0:0 -> i
    1:1:java.util.Map plus(java.util.Map,kotlin.Pair):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;Lf1/j;)Ljava/util/Map;"}
    1:1:void putAll(java.util.Map,java.lang.Iterable):0:0 -> k
    1:1:java.util.Map toMap(java.lang.Iterable):0:0 -> l
    1:1:java.util.Map toMap(java.lang.Iterable,java.util.Map):0:0 -> m
kotlin.collections.MapsKt___MapsJvmKt -> g1.i0:
kotlin.collections.MapsKt___MapsKt -> g1.j0:
kotlin.collections.SetsKt -> g1.k0:
    1:1:java.util.Set build(java.util.Set):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Set createSetBuilder():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Set setOf(java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Set emptySet():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Set mutableSetOf(java.lang.Object[]):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.SetsKt__SetsJVMKt -> g1.l0:
    1:1:java.util.Set build(java.util.Set):0:0 -> a
    1:1:java.util.Set createSetBuilder():0:0 -> b
    1:1:java.util.Set setOf(java.lang.Object):0:0 -> c
kotlin.collections.SetsKt__SetsKt -> g1.m0:
    1:1:java.util.Set emptySet():0:0 -> d
    1:1:java.util.Set mutableSetOf(java.lang.Object[]):0:0 -> e
    1:1:java.util.Set optimizeReadOnlySet(java.util.Set):0:0 -> f
kotlin.collections.SetsKt___SetsKt -> g1.n0:
kotlin.collections.builders.AbstractMapBuilderEntrySet -> h1.a:
    void <init>() -> <init>
    1:1:boolean contains(java.util.Map$Entry):0:0 -> b
    boolean containsEntry(java.util.Map$Entry) -> c
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    boolean remove(java.util.Map$Entry) -> d
    1:1:boolean remove(java.lang.Object):0:0 -> remove
kotlin.collections.builders.ListBuilder -> h1.b:
    java.lang.Object[] array -> e
    int offset -> f
    int length -> g
    boolean isReadOnly -> h
    kotlin.collections.builders.ListBuilder backing -> i
    kotlin.collections.builders.ListBuilder root -> j
    kotlin.collections.builders.ListBuilder$Companion Companion -> k
    kotlin.collections.builders.ListBuilder Empty -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    3:3:void <init>(java.lang.Object[],int,int,boolean,kotlin.collections.builders.ListBuilder,kotlin.collections.builders.ListBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;IIZLh1/b;Lh1/b;)V"}
    1:1:int getSize():0:0 -> a
    1:1:void add(int,java.lang.Object):0:0 -> add
    2:2:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:java.lang.Object removeAt(int):0:0 -> b
    1:1:java.lang.Object[] access$getArray$p(kotlin.collections.builders.ListBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/b;)[Ljava/lang/Object;"}
    1:1:void clear():0:0 -> clear
    1:1:int access$getLength$p(kotlin.collections.builders.ListBuilder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/b;)I"}
    1:1:int access$getModCount$p$s-2084097795(kotlin.collections.builders.ListBuilder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/b;)I"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int access$getOffset$p(kotlin.collections.builders.ListBuilder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/b;)I"}
    1:1:void addAllInternal(int,java.util.Collection,int):0:0 -> g
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:void addAtInternal(int,java.lang.Object):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.util.List build():0:0 -> i
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:void checkForComodification():0:0 -> j
    1:1:void checkIsMutable():0:0 -> k
    1:1:boolean contentEquals(java.util.List):0:0 -> l
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:void ensureCapacityInternal(int):0:0 -> m
    1:1:void ensureExtraCapacity(int):0:0 -> n
    1:1:void insertAtInternal(int,int):0:0 -> o
    1:1:boolean isEffectivelyReadOnly():0:0 -> p
    1:1:void registerModification():0:0 -> q
    1:1:java.lang.Object removeAtInternal(int):0:0 -> r
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:void removeRangeInternal(int,int):0:0 -> s
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:java.util.List subList(int,int):0:0 -> subList
    1:1:int retainOrRemoveAllInternal(int,int,java.util.Collection,boolean):0:0 -> t
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.builders.ListBuilder$Companion -> h1.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
kotlin.collections.builders.ListBuilder$Itr -> h1.b$b:
    kotlin.collections.builders.ListBuilder list -> a
    int index -> b
    int lastIndex -> c
    int expectedModCount -> d
    1:1:void <init>(kotlin.collections.builders.ListBuilder,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/b;I)V"}
    1:1:void checkForComodification():0:0 -> a
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:1:java.lang.Object next():0:0 -> next
    1:1:int nextIndex():0:0 -> nextIndex
    1:1:java.lang.Object previous():0:0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void remove():0:0 -> remove
    1:1:void set(java.lang.Object):0:0 -> set
kotlin.collections.builders.ListBuilderKt -> h1.c:
    1:1:boolean access$subarrayContentEquals(java.lang.Object[],int,int,java.util.List):0:0 -> a
    1:1:int access$subarrayContentHashCode(java.lang.Object[],int,int):0:0 -> b
    1:1:java.lang.String access$subarrayContentToString(java.lang.Object[],int,int,java.util.Collection):0:0 -> c
    1:1:java.lang.Object[] arrayOfUninitializedElements(int):0:0 -> d
    1:1:java.lang.Object[] copyOfUninitializedElements(java.lang.Object[],int):0:0 -> e
    1:1:void resetAt(java.lang.Object[],int):0:0 -> f
    1:1:void resetRange(java.lang.Object[],int,int):0:0 -> g
    1:1:boolean subarrayContentEquals(java.lang.Object[],int,int,java.util.List):0:0 -> h
    1:1:int subarrayContentHashCode(java.lang.Object[],int,int):0:0 -> i
    1:1:java.lang.String subarrayContentToString(java.lang.Object[],int,int,java.util.Collection):0:0 -> j
kotlin.collections.builders.MapBuilder -> h1.d:
    java.lang.Object[] keysArray -> e
    java.lang.Object[] valuesArray -> f
    int[] presenceArray -> g
    int[] hashArray -> h
    int maxProbeDistance -> i
    int length -> j
    int hashShift -> k
    int modCount -> l
    int size -> m
    kotlin.collections.builders.MapBuilderKeys keysView -> n
    kotlin.collections.builders.MapBuilderValues valuesView -> o
    kotlin.collections.builders.MapBuilderEntries entriesView -> p
    boolean isReadOnly -> q
    kotlin.collections.builders.MapBuilder$Companion Companion -> r
    kotlin.collections.builders.MapBuilder Empty -> s
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    3:3:void <init>(java.lang.Object[],java.lang.Object[],int[],int[],int,int):0:0 -> <init>
    1:1:java.util.Collection getValues():0:0 -> A
    1:1:int hash(java.lang.Object):0:0 -> B
    1:1:kotlin.collections.builders.MapBuilder$KeysItr keysIterator$kotlin_stdlib():0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh1/d$e;"}
    1:1:boolean putAllEntries(java.util.Collection):0:0 -> D
    1:1:boolean putEntry(java.util.Map$Entry):0:0 -> E
    1:1:boolean putRehash(int):0:0 -> F
    1:1:void registerModification():0:0 -> G
    1:1:void rehash(int):0:0 -> H
    1:1:boolean removeEntry$kotlin_stdlib(java.util.Map$Entry):0:0 -> I
    1:1:void removeHashAt(int):0:0 -> J
    1:1:int removeKey$kotlin_stdlib(java.lang.Object):0:0 -> K
    1:1:void removeKeyAt(int):0:0 -> L
    1:1:boolean removeValue$kotlin_stdlib(java.lang.Object):0:0 -> M
    1:1:boolean shouldCompact(int):0:0 -> N
    1:1:kotlin.collections.builders.MapBuilder$ValuesItr valuesIterator$kotlin_stdlib():0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh1/d$f;"}
    1:1:java.lang.Object[] access$allocateValuesArray(kotlin.collections.builders.MapBuilder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)[Ljava/lang/Object;"}
    1:1:kotlin.collections.builders.MapBuilder access$getEmpty$cp():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh1/d;"}
    1:1:java.lang.Object[] access$getKeysArray$p(kotlin.collections.builders.MapBuilder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)[Ljava/lang/Object;"}
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:1:int access$getLength$p(kotlin.collections.builders.MapBuilder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)I"}
    1:1:int access$getModCount$p(kotlin.collections.builders.MapBuilder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)I"}
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int[] access$getPresenceArray$p(kotlin.collections.builders.MapBuilder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)[I"}
    1:1:java.lang.Object[] access$getValuesArray$p(kotlin.collections.builders.MapBuilder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)[Ljava/lang/Object;"}
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:void access$removeKeyAt(kotlin.collections.builders.MapBuilder,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;I)V"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:int addKey$kotlin_stdlib(java.lang.Object):0:0 -> i
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.lang.Object[] allocateValuesArray():0:0 -> j
    1:1:java.util.Map build():0:0 -> k
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:void checkIsMutable$kotlin_stdlib():0:0 -> l
    1:1:void compact():0:0 -> m
    1:1:boolean containsAllEntries$kotlin_stdlib(java.util.Collection):0:0 -> n
    1:1:boolean containsEntry$kotlin_stdlib(java.util.Map$Entry):0:0 -> o
    1:1:boolean contentEquals(java.util.Map):0:0 -> p
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:void putAll(java.util.Map):0:0 -> putAll
    1:1:void ensureCapacity(int):0:0 -> q
    1:1:void ensureExtraCapacity(int):0:0 -> r
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    1:1:kotlin.collections.builders.MapBuilder$EntriesItr entriesIterator$kotlin_stdlib():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh1/d$b;"}
    1:1:int size():0:0 -> size
    1:1:int findKey(java.lang.Object):0:0 -> t
    1:1:java.lang.String toString():0:0 -> toString
    1:1:int findValue(java.lang.Object):0:0 -> u
    1:1:int getCapacity$kotlin_stdlib():0:0 -> v
    1:1:java.util.Collection values():0:0 -> values
    1:1:java.util.Set getEntries():0:0 -> w
    1:1:int getHashSize():0:0 -> x
    1:1:java.util.Set getKeys():0:0 -> y
    1:1:int getSize():0:0 -> z
kotlin.collections.builders.MapBuilder$Companion -> h1.d$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:int access$computeHashSize(kotlin.collections.builders.MapBuilder$Companion,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d$a;I)I"}
    1:1:int access$computeShift(kotlin.collections.builders.MapBuilder$Companion,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d$a;I)I"}
    1:1:int computeHashSize(int):0:0 -> c
    1:1:int computeShift(int):0:0 -> d
    1:1:kotlin.collections.builders.MapBuilder getEmpty$kotlin_stdlib():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh1/d;"}
kotlin.collections.builders.MapBuilder$EntriesItr -> h1.d$b:
    1:1:void <init>(kotlin.collections.builders.MapBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)V"}
    1:1:kotlin.collections.builders.MapBuilder$EntryRef next():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh1/d$c;"}
    1:1:void nextAppendString(java.lang.StringBuilder):0:0 -> i
    1:1:int nextHashCode$kotlin_stdlib():0:0 -> j
    1:1:java.lang.Object next():0:0 -> next
kotlin.collections.builders.MapBuilder$EntryRef -> h1.d$c:
    kotlin.collections.builders.MapBuilder map -> a
    int index -> b
    1:1:void <init>(kotlin.collections.builders.MapBuilder,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;I)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.builders.MapBuilder$Itr -> h1.d$d:
    kotlin.collections.builders.MapBuilder map -> a
    int index -> b
    int lastIndex -> c
    int expectedModCount -> d
    1:1:void <init>(kotlin.collections.builders.MapBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)V"}
    1:1:void checkForComodification$kotlin_stdlib():0:0 -> a
    1:1:int getIndex$kotlin_stdlib():0:0 -> b
    1:1:int getLastIndex$kotlin_stdlib():0:0 -> c
    1:1:kotlin.collections.builders.MapBuilder getMap$kotlin_stdlib():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh1/d;"}
    1:1:void initNext$kotlin_stdlib():0:0 -> e
    1:1:void setIndex$kotlin_stdlib(int):0:0 -> f
    1:1:void setLastIndex$kotlin_stdlib(int):0:0 -> g
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:void remove():0:0 -> remove
kotlin.collections.builders.MapBuilder$KeysItr -> h1.d$e:
    1:1:void <init>(kotlin.collections.builders.MapBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)V"}
    1:1:java.lang.Object next():0:0 -> next
kotlin.collections.builders.MapBuilder$ValuesItr -> h1.d$f:
    1:1:void <init>(kotlin.collections.builders.MapBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)V"}
    1:1:java.lang.Object next():0:0 -> next
kotlin.collections.builders.MapBuilderEntries -> h1.e:
    kotlin.collections.builders.MapBuilder backing -> e
    1:1:void <init>(kotlin.collections.builders.MapBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)V"}
    1:1:int getSize():0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:boolean containsEntry(java.util.Map$Entry):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean remove(java.util.Map$Entry):0:0 -> d
    1:1:boolean add(java.util.Map$Entry):0:0 -> e
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
kotlin.collections.builders.MapBuilderKeys -> h1.f:
    kotlin.collections.builders.MapBuilder backing -> e
    1:1:void <init>(kotlin.collections.builders.MapBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)V"}
    1:1:int getSize():0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
kotlin.collections.builders.MapBuilderValues -> h1.g:
    kotlin.collections.builders.MapBuilder backing -> e
    1:1:void <init>(kotlin.collections.builders.MapBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)V"}
    1:1:int getSize():0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
kotlin.collections.builders.SetBuilder -> h1.h:
    kotlin.collections.builders.MapBuilder backing -> e
    kotlin.collections.builders.SetBuilder$Companion Companion -> f
    kotlin.collections.builders.SetBuilder Empty -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(kotlin.collections.builders.MapBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/d;)V"}
    1:1:int getSize():0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:java.util.Set build():0:0 -> b
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
kotlin.collections.builders.SetBuilder$Companion -> h1.h$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
kotlin.coroutines.AbstractCoroutineContextElement -> i1.a:
    kotlin.coroutines.CoroutineContext$Key key -> e
    1:1:void <init>(kotlin.coroutines.CoroutineContext$Key):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)V"}
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr1/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Li1/g;"}
    1:1:kotlin.coroutines.CoroutineContext$Key getKey():0:0 -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g$c;"}
kotlin.coroutines.AbstractCoroutineContextKey -> i1.b:
    kotlin.jvm.functions.Function1 safeCast -> e
    kotlin.coroutines.CoroutineContext$Key topmostKey -> f
    1:1:void <init>(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;Lr1/l;)V"}
    1:1:boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Z"}
    1:1:kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$b;)Li1/g$b;"}
kotlin.coroutines.CombinedContext -> i1.c:
    kotlin.coroutines.CoroutineContext left -> e
    kotlin.coroutines.CoroutineContext$Element element -> f
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Li1/g$b;)V"}
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr1/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g$b;"}
    1:1:boolean contains(kotlin.coroutines.CoroutineContext$Element):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$b;)Z"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:boolean containsAll(kotlin.coroutines.CombinedContext):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/c;)Z"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Li1/g;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:int size():0:0 -> j
    1:1:java.lang.String toString():0:0 -> toString
kotlin.coroutines.CombinedContext$toString$1 -> i1.c$a:
    kotlin.coroutines.CombinedContext$toString$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Li1/g$b;)Ljava/lang/String;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
kotlin.coroutines.Continuation -> i1.d:
    kotlin.coroutines.CoroutineContext getContext() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
    void resumeWith(java.lang.Object) -> r
kotlin.coroutines.ContinuationInterceptor -> i1.e:
    kotlin.coroutines.ContinuationInterceptor$Key Key -> b
    1:1:void <clinit>():0:0 -> <clinit>
    kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation) -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Li1/d;"}
    void releaseInterceptedContinuation(kotlin.coroutines.Continuation) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)V"}
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> i1.e$a:
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/e;Li1/g$c;)Li1/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/e;Li1/g$c;)Li1/g;"}
kotlin.coroutines.ContinuationInterceptor$Key -> i1.e$b:
    kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.coroutines.ContinuationKt -> i1.f:
    1:1:void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Ljava/lang/Object;Li1/d;)V"}
kotlin.coroutines.CoroutineContext -> i1.g:
    java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr1/p;)Ljava/lang/Object;"}
    kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g;"}
    kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g$b;"}
    kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Li1/g;"}
kotlin.coroutines.CoroutineContext$DefaultImpls -> i1.g$a:
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Li1/g;)Li1/g;"}
kotlin.coroutines.CoroutineContext$Element -> i1.g$b:
    kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g$b;"}
    kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g$c;"}
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> i1.g$b$a:
    1:1:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$b;Ljava/lang/Object;Lr1/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$b;Li1/g$c;)Li1/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$b;Li1/g$c;)Li1/g;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$b;Li1/g;)Li1/g;"}
kotlin.coroutines.CoroutineContext$Key -> i1.g$c:
kotlin.coroutines.CoroutineContext$plus$1 -> i1.g$a$a:
    kotlin.coroutines.CoroutineContext$plus$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Li1/g$b;)Li1/g;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
kotlin.coroutines.EmptyCoroutineContext -> i1.h:
    kotlin.coroutines.EmptyCoroutineContext INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr1/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Li1/g;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.coroutines.intrinsics.CoroutineSingletons -> j1.a:
    kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED -> e
    kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED -> f
    kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED -> g
    kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES -> h
    kotlin.enums.EnumEntries $ENTRIES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlin.coroutines.intrinsics.CoroutineSingletons[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lj1/a;"}
    1:1:kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj1/a;"}
    1:1:kotlin.coroutines.intrinsics.CoroutineSingletons[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lj1/a;"}
kotlin.coroutines.intrinsics.IntrinsicsKt -> j1.b:
    1:1:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Li1/d;"}
    1:1:java.lang.Object getCOROUTINE_SUSPENDED():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> j1.c:
    1:1:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Li1/d;"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3 -> j1.c$a:
    int label -> f
    kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined -> g
    java.lang.Object $receiver$inlined -> h
    1:1:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;Lr1/p;Ljava/lang/Object;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4 -> j1.c$b:
    int label -> h
    kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined -> i
    java.lang.Object $receiver$inlined -> j
    1:1:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;Li1/g;Lr1/p;Ljava/lang/Object;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt -> j1.d:
    1:1:java.lang.Object getCOROUTINE_SUSPENDED():0:0 -> c
kotlin.coroutines.jvm.internal.BaseContinuationImpl -> k1.a:
    kotlin.coroutines.Continuation completion -> e
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:kotlin.coroutines.Continuation getCompletion():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/d;"}
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk1/e;"}
    1:1:java.lang.StackTraceElement getStackTraceElement():0:0 -> m
    java.lang.Object invokeSuspend(java.lang.Object) -> n
    1:1:void releaseIntercepted():0:0 -> o
    1:1:void resumeWith(java.lang.Object):0:0 -> r
    1:1:java.lang.String toString():0:0 -> toString
kotlin.coroutines.jvm.internal.Boxing -> k1.b:
    1:1:java.lang.Boolean boxBoolean(boolean):0:0 -> a
kotlin.coroutines.jvm.internal.CompletedContinuation -> k1.c:
    kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> r
    1:1:java.lang.String toString():0:0 -> toString
kotlin.coroutines.jvm.internal.ContinuationImpl -> k1.d:
    kotlin.coroutines.CoroutineContext _context -> f
    kotlin.coroutines.Continuation intercepted -> g
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)V"}
    2:2:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;Li1/g;)V"}
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
    1:1:void releaseIntercepted():0:0 -> o
    1:1:kotlin.coroutines.Continuation intercepted():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/d;"}
kotlin.coroutines.jvm.internal.CoroutineStackFrame -> k1.e:
    kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk1/e;"}
kotlin.coroutines.jvm.internal.DebugMetadata -> k1.f:
    java.lang.String c() -> c
    java.lang.String f() -> f
    int[] l() -> l
    java.lang.String m() -> m
    int v() -> v
kotlin.coroutines.jvm.internal.DebugMetadataKt -> k1.g:
    1:1:void checkDebugMetadataVersion(int,int):0:0 -> a
    1:1:kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/a;)Lk1/f;"}
    1:1:int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/a;)I"}
    1:1:java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/a;)Ljava/lang/StackTraceElement;"}
kotlin.coroutines.jvm.internal.DebugProbesKt -> k1.h:
    1:1:kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Li1/d;"}
    1:1:void probeCoroutineResumed(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)V"}
    1:1:void probeCoroutineSuspended(kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)V"}
kotlin.coroutines.jvm.internal.ModuleNameRetriever -> k1.i:
    kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE -> a
    kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache notOnJava9 -> b
    kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache cache -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/a;)Lk1/i$a;"}
    1:1:java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/a;)Ljava/lang/String;"}
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache -> k1.i$a:
    java.lang.reflect.Method getModuleMethod -> a
    java.lang.reflect.Method getDescriptorMethod -> b
    java.lang.reflect.Method nameMethod -> c
    1:1:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method):0:0 -> <init>
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl -> k1.j:
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)V"}
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
kotlin.coroutines.jvm.internal.SuspendLambda -> k1.k:
    int arity -> h
    1:1:void <init>(int,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILi1/d;)V"}
    1:1:int getArity():0:0 -> e
    1:1:java.lang.String toString():0:0 -> toString
kotlin.enums.EnumEntries -> l1.a:
kotlin.enums.EnumEntriesKt -> l1.b:
    1:1:kotlin.enums.EnumEntries enumEntries(java.lang.Enum[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Enum;)Ll1/a;"}
kotlin.enums.EnumEntriesList -> l1.c:
    java.lang.Enum[] entries -> f
    1:1:void <init>(java.lang.Enum[]):0:0 -> <init>
    1:1:int getSize():0:0 -> a
    1:1:boolean contains(java.lang.Enum):0:0 -> b
    1:1:java.lang.Enum get(int):0:0 -> c
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:int indexOf(java.lang.Enum):0:0 -> d
    1:1:int lastIndexOf(java.lang.Enum):0:0 -> e
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
kotlin.internal.PlatformImplementations -> m1.a:
    void <init>() -> <init>
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
    1:1:kotlin.random.Random defaultPlatformRandom():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt1/c;"}
kotlin.internal.PlatformImplementations$ReflectThrowable -> m1.a$a:
    kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE -> a
    java.lang.reflect.Method addSuppressed -> b
    java.lang.reflect.Method getSuppressed -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.internal.PlatformImplementationsKt -> m1.b:
    kotlin.internal.PlatformImplementations IMPLEMENTATIONS -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlin.internal.ProgressionUtilKt -> m1.c:
    1:1:int differenceModulo(int,int,int):0:0 -> a
    1:1:int getProgressionLastElement(int,int,int):0:0 -> b
    1:1:int mod(int,int):0:0 -> c
kotlin.internal.jdk7.JDK7PlatformImplementations -> n1.a:
    void <init>() -> <init>
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
    1:1:boolean sdkIsNullOrAtLeast(int):0:0 -> c
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion -> n1.a$a:
    kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion INSTANCE -> a
    java.lang.Integer sdkVersion -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.internal.jdk8.JDK8PlatformImplementations -> o1.a:
    void <init>() -> <init>
    1:1:kotlin.random.Random defaultPlatformRandom():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt1/c;"}
    1:1:boolean sdkIsNullOrAtLeast(int):0:0 -> c
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion -> o1.a$a:
    kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion INSTANCE -> a
    java.lang.Integer sdkVersion -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.io.CloseableKt -> p1.a:
    1:1:void closeFinally(java.io.Closeable,java.lang.Throwable):0:0 -> a
kotlin.jvm.JvmClassMappingKt -> q1.a:
    1:1:java.lang.Class getJavaClass(kotlin.reflect.KClass):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/b;)Ljava/lang/Class;"}
    1:1:java.lang.Class getJavaObjectType(kotlin.reflect.KClass):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/b;)Ljava/lang/Class;"}
    1:1:kotlin.reflect.KClass getKotlinClass(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lw1/b;"}
kotlin.jvm.functions.Function0 -> r1.a:
    java.lang.Object invoke() -> b
kotlin.jvm.functions.Function1 -> r1.l:
    java.lang.Object invoke(java.lang.Object) -> l
kotlin.jvm.functions.Function10 -> r1.b:
kotlin.jvm.functions.Function11 -> r1.c:
kotlin.jvm.functions.Function12 -> r1.d:
kotlin.jvm.functions.Function13 -> r1.e:
kotlin.jvm.functions.Function14 -> r1.f:
kotlin.jvm.functions.Function15 -> r1.g:
kotlin.jvm.functions.Function16 -> r1.h:
kotlin.jvm.functions.Function17 -> r1.i:
kotlin.jvm.functions.Function18 -> r1.j:
kotlin.jvm.functions.Function19 -> r1.k:
kotlin.jvm.functions.Function2 -> r1.p:
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> k
kotlin.jvm.functions.Function20 -> r1.m:
kotlin.jvm.functions.Function21 -> r1.n:
kotlin.jvm.functions.Function22 -> r1.o:
kotlin.jvm.functions.Function3 -> r1.q:
    java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> i
kotlin.jvm.functions.Function4 -> r1.r:
    java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> h
kotlin.jvm.functions.Function5 -> r1.s:
kotlin.jvm.functions.Function6 -> r1.t:
    java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> g
kotlin.jvm.functions.Function7 -> r1.u:
kotlin.jvm.functions.Function8 -> r1.v:
kotlin.jvm.functions.Function9 -> r1.w:
kotlin.jvm.internal.ArrayIterator -> s1.a:
    java.lang.Object[] array -> a
    int index -> b
    1:1:void <init>(java.lang.Object[]):0:0 -> <init>
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
kotlin.jvm.internal.ArrayIteratorKt -> s1.b:
    1:1:java.util.Iterator iterator(java.lang.Object[]):0:0 -> a
kotlin.jvm.internal.CallableReference -> s1.c:
    kotlin.reflect.KCallable reflected -> e
    java.lang.Object receiver -> f
    java.lang.Class owner -> g
    java.lang.String name -> h
    java.lang.String signature -> i
    boolean isTopLevel -> j
    java.lang.Object NO_RECEIVER -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean):0:0 -> <init>
    1:1:kotlin.reflect.KCallable compute():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw1/a;"}
    kotlin.reflect.KCallable computeReflected() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw1/a;"}
    1:1:java.lang.Object getBoundReceiver():0:0 -> d
    1:1:java.lang.String getName():0:0 -> f
    1:1:kotlin.reflect.KDeclarationContainer getOwner():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw1/d;"}
    1:1:java.lang.String getSignature():0:0 -> m
kotlin.jvm.internal.CallableReference$NoReceiver -> s1.c$a:
    kotlin.jvm.internal.CallableReference$NoReceiver INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.jvm.internal.CallableReference$NoReceiver access$000():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls1/c$a;"}
kotlin.jvm.internal.ClassBasedDeclarationContainer -> s1.d:
    java.lang.Class getJClass() -> c
kotlin.jvm.internal.ClassReference -> s1.e:
    java.lang.Class jClass -> a
    kotlin.jvm.internal.ClassReference$Companion Companion -> b
    java.util.Map FUNCTION_CLASSES -> c
    java.util.HashMap primitiveFqNames -> d
    java.util.HashMap primitiveWrapperFqNames -> e
    java.util.HashMap classFqNames -> f
    java.util.Map simpleNames -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Class):0:0 -> <init>
    1:1:java.lang.String getQualifiedName():0:0 -> a
    1:1:java.lang.String getSimpleName():0:0 -> b
    1:1:java.lang.Class getJClass():0:0 -> c
    1:1:boolean isInstance(java.lang.Object):0:0 -> d
    1:1:java.util.HashMap access$getClassFqNames$cp():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.util.Map access$getFUNCTION_CLASSES$cp():0:0 -> f
    1:1:java.util.Map access$getSimpleNames$cp():0:0 -> g
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.ClassReference$Companion -> s1.e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:java.lang.String getClassQualifiedName(java.lang.Class):0:0 -> a
    1:1:java.lang.String getClassSimpleName(java.lang.Class):0:0 -> b
    1:1:boolean isInstance(java.lang.Object,java.lang.Class):0:0 -> c
kotlin.jvm.internal.CollectionToArray -> s1.f:
    java.lang.Object[] EMPTY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Object[] toArray(java.util.Collection):0:0 -> a
    1:1:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):0:0 -> b
kotlin.jvm.internal.DefaultConstructorMarker -> s1.g:
kotlin.jvm.internal.FunctionBase -> s1.h:
    int getArity() -> e
kotlin.jvm.internal.FunctionReference -> s1.i:
    int arity -> l
    int flags -> m
    1:1:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    1:1:kotlin.reflect.KCallable computeReflected():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw1/a;"}
    1:1:int getArity():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.FunctionReferenceImpl -> s1.j:
    1:1:void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    2:2:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
kotlin.jvm.internal.Intrinsics -> s1.k:
    1:1:boolean areEqual(java.lang.Object,java.lang.Object):0:0 -> a
    1:1:void checkNotNull(java.lang.Object):0:0 -> b
    1:1:void checkNotNull(java.lang.Object,java.lang.String):0:0 -> c
    1:1:void checkNotNullExpressionValue(java.lang.Object,java.lang.String):0:0 -> d
    1:1:void checkNotNullParameter(java.lang.Object,java.lang.String):0:0 -> e
    1:1:int compare(int,int):0:0 -> f
    1:1:java.lang.String createParameterIsNullExceptionMessage(java.lang.String):0:0 -> g
    1:1:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable):0:0 -> h
    1:1:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String):0:0 -> i
    1:1:void throwJavaNpe():0:0 -> j
    1:1:void throwJavaNpe(java.lang.String):0:0 -> k
    1:1:void throwParameterIsNullNPE(java.lang.String):0:0 -> l
    1:1:void throwUninitializedProperty(java.lang.String):0:0 -> m
    1:1:void throwUninitializedPropertyAccessException(java.lang.String):0:0 -> n
kotlin.jvm.internal.Lambda -> s1.l:
    int arity -> e
    1:1:void <init>(int):0:0 -> <init>
    1:1:int getArity():0:0 -> e
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.PackageReference -> s1.m:
    java.lang.Class jClass -> a
    java.lang.String moduleName -> b
    1:1:void <init>(java.lang.Class,java.lang.String):0:0 -> <init>
    1:1:java.lang.Class getJClass():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.PropertyReference -> s1.p:
    boolean syntheticJavaProperty -> l
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    1:1:kotlin.reflect.KCallable compute():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw1/a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.PropertyReference0 -> s1.n:
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    1:1:java.lang.Object invoke():0:0 -> b
    1:1:kotlin.reflect.KCallable computeReflected():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw1/a;"}
kotlin.jvm.internal.PropertyReference0Impl -> s1.o:
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
kotlin.jvm.internal.Ref$IntRef -> s1.q:
    int element -> e
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.Ref$ObjectRef -> s1.r:
    java.lang.Object element -> e
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.Reflection -> s1.s:
    kotlin.jvm.internal.ReflectionFactory factory -> a
    kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/i;)Lw1/e;"}
    1:1:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lw1/b;"}
    1:1:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lw1/d;"}
    1:1:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/n;)Lw1/f;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/h;)Ljava/lang/String;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/l;)Ljava/lang/String;"}
kotlin.jvm.internal.ReflectionFactory -> s1.t:
    void <init>() -> <init>
    1:1:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/i;)Lw1/e;"}
    1:1:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lw1/b;"}
    1:1:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/String;)Lw1/d;"}
    1:1:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/n;)Lw1/f;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/h;)Ljava/lang/String;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/l;)Ljava/lang/String;"}
kotlin.jvm.internal.TypeIntrinsics -> s1.u:
    1:1:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int):0:0 -> a
    1:1:int getFunctionArity(java.lang.Object):0:0 -> b
    1:1:boolean isFunctionOfArity(java.lang.Object,int):0:0 -> c
    1:1:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable):0:0 -> d
    1:1:java.lang.ClassCastException throwCce(java.lang.ClassCastException):0:0 -> e
    1:1:void throwCce(java.lang.Object,java.lang.String):0:0 -> f
    1:1:void throwCce(java.lang.String):0:0 -> g
kotlin.random.AbstractPlatformRandom -> t1.a:
    void <init>() -> <init>
    1:1:int nextInt():0:0 -> b
    java.util.Random getImpl() -> c
kotlin.random.FallbackThreadLocalRandom -> t1.b:
    kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage -> g
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.Random getImpl():0:0 -> c
kotlin.random.FallbackThreadLocalRandom$implStorage$1 -> t1.b$a:
    void <init>() -> <init>
    1:1:java.util.Random initialValue():0:0 -> a
    1:1:java.lang.Object initialValue():0:0 -> initialValue
kotlin.random.Random -> t1.c:
    kotlin.random.Random$Default Default -> e
    kotlin.random.Random defaultRandom -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.random.Random access$getDefaultRandom$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt1/c;"}
    int nextInt() -> b
kotlin.random.Random$Default -> t1.c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:int nextInt():0:0 -> b
kotlin.random.jdk8.PlatformThreadLocalRandom -> u1.a:
    void <init>() -> <init>
    1:1:java.util.Random getImpl():0:0 -> c
kotlin.ranges.IntProgression -> v1.a:
    int first -> e
    int last -> f
    int step -> g
    kotlin.ranges.IntProgression$Companion Companion -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int):0:0 -> <init>
    1:1:int getFirst():0:0 -> a
    1:1:int getLast():0:0 -> b
    1:1:int getStep():0:0 -> c
    1:1:kotlin.collections.IntIterator iterator():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg1/d0;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:java.lang.String toString():0:0 -> toString
kotlin.ranges.IntProgression$Companion -> v1.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:kotlin.ranges.IntProgression fromClosedRange(int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(III)Lv1/a;"}
kotlin.ranges.IntProgressionIterator -> v1.b:
    int step -> a
    int finalElement -> b
    boolean hasNext -> c
    int next -> d
    1:1:void <init>(int,int,int):0:0 -> <init>
    1:1:int nextInt():0:0 -> a
    1:1:boolean hasNext():0:0 -> hasNext
kotlin.ranges.IntRange -> v1.c:
    kotlin.ranges.IntRange$Companion Companion -> i
    kotlin.ranges.IntRange EMPTY -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:kotlin.ranges.IntRange access$getEMPTY$cp():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv1/c;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:boolean contains(int):0:0 -> f
    1:1:java.lang.Integer getEndInclusive():0:0 -> g
    1:1:java.lang.Integer getStart():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.lang.String toString():0:0 -> toString
kotlin.ranges.IntRange$Companion -> v1.c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:kotlin.ranges.IntRange getEMPTY():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv1/c;"}
kotlin.ranges.RangesKt -> v1.d:
    1:1:int coerceAtLeast(int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:long coerceAtLeast(long,long):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int coerceAtMost(int,int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:long coerceAtMost(long,long):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int coerceIn(int,int,int):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:long coerceIn(long,long,long):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:kotlin.ranges.IntProgression downTo(int,int):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lv1/a;"}
    1:1:kotlin.ranges.IntRange until(int,int):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lv1/c;"}
kotlin.ranges.RangesKt__RangesKt -> v1.e:
kotlin.ranges.RangesKt___RangesKt -> v1.f:
    1:1:int coerceAtLeast(int,int):0:0 -> a
    1:1:long coerceAtLeast(long,long):0:0 -> b
    1:1:int coerceAtMost(int,int):0:0 -> c
    1:1:long coerceAtMost(long,long):0:0 -> d
    1:1:int coerceIn(int,int,int):0:0 -> e
    1:1:long coerceIn(long,long,long):0:0 -> f
    1:1:kotlin.ranges.IntProgression downTo(int,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lv1/a;"}
    1:1:kotlin.ranges.IntRange until(int,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lv1/c;"}
kotlin.reflect.KCallable -> w1.a:
kotlin.reflect.KClass -> w1.b:
    java.lang.String getQualifiedName() -> a
    java.lang.String getSimpleName() -> b
    boolean isInstance(java.lang.Object) -> d
kotlin.reflect.KClasses -> w1.c:
    1:1:java.lang.Object cast(kotlin.reflect.KClass,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw1/b;Ljava/lang/Object;)Ljava/lang/Object;"}
kotlin.reflect.KDeclarationContainer -> w1.d:
kotlin.reflect.KFunction -> w1.e:
kotlin.reflect.KProperty -> w1.g:
kotlin.reflect.KProperty0 -> w1.f:
    java.lang.Object get() -> get
kotlin.sequences.ConstrainedOnceSequence -> x1.a:
    java.util.concurrent.atomic.AtomicReference sequenceRef -> a
    1:1:void <init>(kotlin.sequences.Sequence):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/b;)V"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
kotlin.sequences.Sequence -> x1.b:
    java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt -> x1.c:
    1:1:kotlin.sequences.Sequence asSequence(java.util.Iterator):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;)Lx1/b;"}
    1:1:java.lang.Iterable asIterable(kotlin.sequences.Sequence):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/b;)Ljava/lang/Iterable;"}
    1:1:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/b;Lr1/l;)Lx1/b;"}
    1:1:java.util.List toList(kotlin.sequences.Sequence):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/b;)Ljava/util/List;"}
kotlin.sequences.SequencesKt__SequenceBuilderKt -> x1.d:
kotlin.sequences.SequencesKt__SequencesJVMKt -> x1.e:
kotlin.sequences.SequencesKt__SequencesKt -> x1.f:
    1:1:kotlin.sequences.Sequence asSequence(java.util.Iterator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;)Lx1/b;"}
    1:1:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/b;)Lx1/b;"}
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1 -> x1.f$a:
    java.util.Iterator $this_asSequence$inlined -> a
    1:1:void <init>(java.util.Iterator):0:0 -> <init>
    1:1:java.util.Iterator iterator():0:0 -> iterator
kotlin.sequences.SequencesKt___SequencesJvmKt -> x1.g:
kotlin.sequences.SequencesKt___SequencesKt -> x1.h:
    1:1:java.lang.Iterable asIterable(kotlin.sequences.Sequence):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/b;)Ljava/lang/Iterable;"}
    1:1:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/b;Lr1/l;)Lx1/b;"}
    1:1:java.util.List toList(kotlin.sequences.Sequence):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/b;)Ljava/util/List;"}
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1 -> x1.h$a:
    kotlin.sequences.Sequence $this_asIterable$inlined -> e
    1:1:void <init>(kotlin.sequences.Sequence):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/b;)V"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
kotlin.sequences.TransformingSequence -> x1.i:
    kotlin.sequences.Sequence sequence -> a
    kotlin.jvm.functions.Function1 transformer -> b
    1:1:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/b;Lr1/l;)V"}
    1:1:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/i;)Lx1/b;"}
    1:1:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/i;)Lr1/l;"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
kotlin.sequences.TransformingSequence$iterator$1 -> x1.i$a:
    java.util.Iterator iterator -> a
    kotlin.sequences.TransformingSequence this$0 -> b
    1:1:void <init>(kotlin.sequences.TransformingSequence):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx1/i;)V"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
kotlin.text.CharsKt__CharJVMKt -> y1.a:
    1:1:int checkRadix(int):0:0 -> a
    1:1:int digitOf(char,int):0:0 -> b
    1:1:boolean isWhitespace(char):0:0 -> c
kotlin.text.CharsKt__CharKt -> y1.b:
    1:1:boolean equals(char,char,boolean):0:0 -> d
kotlin.text.DelimitedRangesSequence -> y1.c:
    java.lang.CharSequence input -> a
    int startIndex -> b
    int limit -> c
    kotlin.jvm.functions.Function2 getNextMatch -> d
    1:1:void <init>(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;IILr1/p;)V"}
    1:1:kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly1/c;)Lr1/p;"}
    1:1:java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly1/c;)Ljava/lang/CharSequence;"}
    1:1:int access$getLimit$p(kotlin.text.DelimitedRangesSequence):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly1/c;)I"}
    1:1:int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly1/c;)I"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
kotlin.text.DelimitedRangesSequence$iterator$1 -> y1.c$a:
    int nextState -> a
    int currentStartIndex -> b
    int nextSearchIndex -> c
    kotlin.ranges.IntRange nextItem -> d
    int counter -> e
    kotlin.text.DelimitedRangesSequence this$0 -> f
    1:1:void <init>(kotlin.text.DelimitedRangesSequence):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly1/c;)V"}
    1:1:void calcNext():0:0 -> a
    1:1:kotlin.ranges.IntRange next():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv1/c;"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
kotlin.text.StringsKt -> y1.d:
    1:1:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object):0:0 -> I
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object):0:0 -> S
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> Y
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> Z
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Appendable;Ljava/lang/Object;Lr1/l;)V"}
    1:1:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> b0
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String trimIndent(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> e0
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Long toLongOrNull(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> f0
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence trim(java.lang.CharSequence):0:0 -> g0
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:char last(java.lang.CharSequence):0:0 -> i0
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean equals(java.lang.String,java.lang.String,boolean):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean isBlank(java.lang.CharSequence):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.StringsKt__AppendableKt -> y1.e:
    1:1:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Appendable;Ljava/lang/Object;Lr1/l;)V"}
kotlin.text.StringsKt__IndentKt -> y1.f:
    1:1:kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lr1/l;"}
    1:1:int indentWidth$StringsKt__IndentKt(java.lang.String):0:0 -> c
    1:1:java.lang.String replaceIndent(java.lang.String,java.lang.String):0:0 -> d
    1:1:java.lang.String trimIndent(java.lang.String):0:0 -> e
kotlin.text.StringsKt__IndentKt$getIndentFunction$1 -> y1.f$a:
    kotlin.text.StringsKt__IndentKt$getIndentFunction$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.String invoke(java.lang.String):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
kotlin.text.StringsKt__IndentKt$getIndentFunction$2 -> y1.f$b:
    java.lang.String $indent -> f
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String invoke(java.lang.String):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
kotlin.text.StringsKt__RegexExtensionsJVMKt -> y1.g:
kotlin.text.StringsKt__RegexExtensionsKt -> y1.h:
kotlin.text.StringsKt__StringBuilderJVMKt -> y1.i:
kotlin.text.StringsKt__StringBuilderKt -> y1.j:
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> y1.k:
kotlin.text.StringsKt__StringNumberConversionsKt -> y1.l:
    1:1:java.lang.Long toLongOrNull(java.lang.String):0:0 -> f
    1:1:java.lang.Long toLongOrNull(java.lang.String,int):0:0 -> g
kotlin.text.StringsKt__StringsJVMKt -> y1.m:
    1:1:boolean endsWith(java.lang.String,java.lang.String,boolean):0:0 -> h
    1:1:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> i
    1:1:boolean equals(java.lang.String,java.lang.String,boolean):0:0 -> j
    1:1:boolean isBlank(java.lang.CharSequence):0:0 -> k
    1:1:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean):0:0 -> l
    1:1:java.lang.String replace(java.lang.String,char,char,boolean):0:0 -> m
    1:1:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean):0:0 -> n
    1:1:java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object):0:0 -> o
    1:1:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> p
    1:1:boolean startsWith(java.lang.String,java.lang.String,boolean):0:0 -> q
    1:1:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> r
kotlin.text.StringsKt__StringsKt -> y1.n:
    1:1:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean):0:0 -> A
    1:1:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object):0:0 -> B
    1:1:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object):0:0 -> C
    1:1:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object):0:0 -> D
    1:1:int indexOfAny(java.lang.CharSequence,char[],int,boolean):0:0 -> E
    1:1:int lastIndexOf(java.lang.CharSequence,char,int,boolean):0:0 -> F
    1:1:int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean):0:0 -> G
    1:1:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object):0:0 -> H
    1:1:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object):0:0 -> I
    1:1:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):0:0 -> J
    1:1:kotlin.sequences.Sequence lineSequence(java.lang.CharSequence):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lx1/b;"}
    1:1:java.util.List lines(java.lang.CharSequence):0:0 -> L
    1:1:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;[Ljava/lang/String;IZI)Lx1/b;"}
    1:1:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;[Ljava/lang/String;IZIILjava/lang/Object;)Lx1/b;"}
    1:1:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean):0:0 -> O
    1:1:void requireNonNegativeLimit(int):0:0 -> P
    1:1:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):0:0 -> Q
    1:1:java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int):0:0 -> R
    1:1:java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object):0:0 -> S
    1:1:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;[Ljava/lang/String;ZI)Lx1/b;"}
    1:1:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;[Ljava/lang/String;ZIILjava/lang/Object;)Lx1/b;"}
    1:1:java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;Lv1/c;)Ljava/lang/String;"}
    1:1:java.lang.String substringAfter(java.lang.String,char,java.lang.String):0:0 -> W
    1:1:java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String):0:0 -> X
    1:1:java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> Y
    1:1:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> Z
    1:1:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String):0:0 -> a0
    1:1:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> b0
    1:1:java.lang.String substringBefore(java.lang.String,char,java.lang.String):0:0 -> c0
    1:1:java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String):0:0 -> d0
    1:1:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> e0
    1:1:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> f0
    1:1:java.lang.CharSequence trim(java.lang.CharSequence):0:0 -> g0
    1:1:kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;Ljava/util/Collection;IZZ)Lf1/j;"}
    1:1:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean):0:0 -> t
    1:1:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object):0:0 -> u
    1:1:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;Ljava/util/Collection;IZZ)Lf1/j;"}
    1:1:kotlin.ranges.IntRange getIndices(java.lang.CharSequence):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lv1/c;"}
    1:1:int getLastIndex(java.lang.CharSequence):0:0 -> x
    1:1:int indexOf(java.lang.CharSequence,char,int,boolean):0:0 -> y
    1:1:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean):0:0 -> z
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 -> y1.n$a:
    java.util.List $delimitersList -> f
    boolean $ignoreCase -> g
    1:1:void <init>(java.util.List,boolean):0:0 -> <init>
    1:1:kotlin.Pair invoke(java.lang.CharSequence,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;I)Lf1/j;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
kotlin.text.StringsKt__StringsKt$splitToSequence$1 -> y1.n$b:
    java.lang.CharSequence $this_splitToSequence -> f
    1:1:void <init>(java.lang.CharSequence):0:0 -> <init>
    1:1:java.lang.String invoke(kotlin.ranges.IntRange):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv1/c;)Ljava/lang/String;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
kotlin.text.StringsKt___StringsJvmKt -> y1.o:
kotlin.text.StringsKt___StringsKt -> y1.p:
    1:1:java.lang.String drop(java.lang.String,int):0:0 -> h0
    1:1:char last(java.lang.CharSequence):0:0 -> i0
kotlinx.coroutines.AbstractCoroutine -> z1.a:
    kotlin.coroutines.CoroutineContext context -> g
    1:1:void <init>(kotlin.coroutines.CoroutineContext,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;ZZ)V"}
    1:1:void afterResume(java.lang.Object):0:0 -> I0
    1:1:void onCancelled(java.lang.Throwable,boolean):0:0 -> J0
    1:1:void onCompleted(java.lang.Object):0:0 -> K0
    1:1:void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> L0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/f0;Ljava/lang/Object;Lr1/p;)V"}
    1:1:java.lang.String cancellationExceptionMessage():0:0 -> P
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
    1:1:boolean isActive():0:0 -> d
    1:1:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> f0
    1:1:java.lang.String nameString$kotlinx_coroutines_core():0:0 -> n0
    1:1:kotlin.coroutines.CoroutineContext getCoroutineContext():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> r
    1:1:void onCompletionInternal(java.lang.Object):0:0 -> s0
kotlinx.coroutines.AbstractTimeSource -> z1.b:
kotlinx.coroutines.AbstractTimeSourceKt -> z1.c:
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.AbstractTimeSource getTimeSource():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/b;"}
kotlinx.coroutines.Active -> z1.d:
    kotlinx.coroutines.Active INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.BlockingEventLoop -> z1.e:
    java.lang.Thread thread -> m
    1:1:void <init>(java.lang.Thread):0:0 -> <init>
    1:1:java.lang.Thread getThread():0:0 -> f0
kotlinx.coroutines.BuildersKt -> z1.f:
    1:1:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/g;Lz1/f0;Lr1/p;)Lz1/e1;"}
    1:1:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/g;Lz1/f0;Lr1/p;ILjava/lang/Object;)Lz1/e1;"}
kotlinx.coroutines.BuildersKt__Builders_commonKt -> z1.g:
    1:1:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/g;Lz1/f0;Lr1/p;)Lz1/e1;"}
    1:1:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/g;Lz1/f0;Lr1/p;ILjava/lang/Object;)Lz1/e1;"}
kotlinx.coroutines.CancelHandler -> z1.h:
kotlinx.coroutines.CancelHandlerBase -> z1.i:
kotlinx.coroutines.CancellableContinuation -> z1.j:
    java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Lr1/l;)Ljava/lang/Object;"}
    void completeResume(java.lang.Object) -> y
kotlinx.coroutines.CancellableContinuationImpl -> z1.k:
    kotlin.coroutines.Continuation delegate -> h
    kotlin.coroutines.CoroutineContext context -> i
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decisionAndIndex$FU -> j
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> k
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _parentHandle$FU -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.coroutines.Continuation,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;I)V"}
    1:1:void initCancellability():0:0 -> A
    1:1:kotlinx.coroutines.DisposableHandle installParentHandle():0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/o0;"}
    1:1:void invokeOnCancellationImpl(java.lang.Object):0:0 -> C
    1:1:boolean isCompleted():0:0 -> D
    1:1:boolean isReusable():0:0 -> E
    1:1:void multipleHandlersError(java.lang.Object,java.lang.Object):0:0 -> F
    1:1:java.lang.String nameString():0:0 -> G
    1:1:void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> H
    1:1:void releaseClaimedReusableContinuation$kotlinx_coroutines_core():0:0 -> I
    1:1:boolean resetStateReusable():0:0 -> J
    1:1:void resume(java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr1/l;)V"}
    1:1:void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILr1/l;)V"}
    1:1:void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/k;Ljava/lang/Object;ILr1/l;ILjava/lang/Object;)V"}
    1:1:java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/r1;Ljava/lang/Object;ILr1/l;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:boolean tryResume():0:0 -> O
    1:1:kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Lr1/l;)Le2/h0;"}
    1:1:boolean trySuspend():0:0 -> Q
    1:1:void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e0;I)V"}
    1:1:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable):0:0 -> b
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
    1:1:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/d;"}
    1:1:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> e
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk1/e;"}
    1:1:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> g
    1:1:java.lang.Object takeState$kotlinx_coroutines_core():0:0 -> i
    1:1:java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Lr1/l;)Ljava/lang/Object;"}
    1:1:java.lang.Void alreadyResumedError(java.lang.Object):0:0 -> k
    1:1:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/h;Ljava/lang/Throwable;)V"}
    1:1:void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;Ljava/lang/Throwable;)V"}
    1:1:void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e0;Ljava/lang/Throwable;)V"}
    1:1:boolean cancel(java.lang.Throwable):0:0 -> o
    1:1:boolean cancelLater(java.lang.Throwable):0:0 -> p
    1:1:void detachChild$kotlinx_coroutines_core():0:0 -> q
    1:1:void resumeWith(java.lang.Object):0:0 -> r
    1:1:void detachChildIfNonResuable():0:0 -> s
    1:1:void dispatchResume(int):0:0 -> t
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;)Ljava/lang/Throwable;"}
    1:1:kotlinx.coroutines.DisposableHandle getParentHandle():0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/o0;"}
    1:1:java.lang.Object getResult():0:0 -> w
    1:1:java.lang.Object getState$kotlinx_coroutines_core():0:0 -> x
    1:1:void completeResume(java.lang.Object):0:0 -> y
    1:1:java.lang.String getStateDebugRepresentation():0:0 -> z
kotlinx.coroutines.CancellableContinuationImplKt -> z1.l:
    kotlinx.coroutines.internal.Symbol RESUME_TOKEN -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.CancellableContinuationKt -> z1.m:
    1:1:kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Lz1/k;"}
kotlinx.coroutines.CancelledContinuation -> z1.n:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _resumed$FU -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.coroutines.Continuation,java.lang.Throwable,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;Ljava/lang/Throwable;Z)V"}
    1:1:boolean makeResumed():0:0 -> c
kotlinx.coroutines.ChildContinuation -> z1.o:
    kotlinx.coroutines.CancellableContinuationImpl child -> i
    1:1:void <init>(kotlinx.coroutines.CancellableContinuationImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/k;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
    1:1:void invoke(java.lang.Throwable):0:0 -> z
kotlinx.coroutines.ChildHandle -> z1.p:
    boolean childCancelled(java.lang.Throwable) -> c
kotlinx.coroutines.ChildHandleNode -> z1.q:
    kotlinx.coroutines.ChildJob childJob -> i
    1:1:void <init>(kotlinx.coroutines.ChildJob):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/r;)V"}
    1:1:boolean childCancelled(java.lang.Throwable):0:0 -> c
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
    1:1:void invoke(java.lang.Throwable):0:0 -> z
kotlinx.coroutines.ChildJob -> z1.r:
    void parentCancelled(kotlinx.coroutines.ParentJob) -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/s1;)V"}
kotlinx.coroutines.CompletableJob -> z1.s:
kotlinx.coroutines.CompletedContinuation -> z1.t:
    java.lang.Object result -> a
    kotlin.jvm.functions.Function1 onCancellation -> b
    java.lang.Object idempotentResume -> c
    java.lang.Throwable cancelCause -> d
    1:1:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz1/h;Lr1/l;Ljava/lang/Object;Ljava/lang/Throwable;)V"}
    2:2:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz1/h;Lr1/l;Ljava/lang/Object;Ljava/lang/Throwable;ILs1/g;)V"}
    1:1:kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz1/h;Lr1/l;Ljava/lang/Object;Ljava/lang/Throwable;)Lz1/t;"}
    1:1:kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/t;Ljava/lang/Object;Lz1/h;Lr1/l;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lz1/t;"}
    1:1:boolean getCancelled():0:0 -> c
    1:1:void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/k;Ljava/lang/Throwable;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CompletedExceptionally -> z1.u:
    java.lang.Throwable cause -> a
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _handled$FU -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Throwable,boolean):0:0 -> <init>
    2:2:void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;ZILs1/g;)V"}
    1:1:boolean getHandled():0:0 -> a
    1:1:boolean makeHandled():0:0 -> b
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CompletedWithCancellation -> z1.v:
    java.lang.Object result -> a
    kotlin.jvm.functions.Function1 onCancellation -> b
    1:1:void <init>(java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr1/l;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CompletionHandlerBase -> z1.w:
    void <init>() -> <init>
    void invoke(java.lang.Throwable) -> z
kotlinx.coroutines.CompletionHandlerException -> z1.x:
    1:1:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
kotlinx.coroutines.CompletionStateKt -> z1.y:
    1:1:java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr1/l;)Ljava/lang/Object;"}
    1:1:java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz1/j;)Ljava/lang/Object;"}
    1:1:java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr1/l;ILjava/lang/Object;)Ljava/lang/Object;"}
kotlinx.coroutines.CoroutineContextKt -> z1.z:
    1:1:kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Li1/g;Z)Li1/g;"}
    1:1:java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Ljava/lang/String;"}
    1:1:boolean hasCopyableElements(kotlin.coroutines.CoroutineContext):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Z"}
    1:1:kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/g;)Li1/g;"}
    1:1:kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk1/e;)Lz1/x1;"}
    1:1:kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;Li1/g;Ljava/lang/Object;)Lz1/x1;"}
kotlinx.coroutines.CoroutineContextKt$foldCopies$1 -> z1.z$a:
    kotlinx.coroutines.CoroutineContextKt$foldCopies$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Li1/g$b;)Li1/g;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1 -> z1.z$b:
    kotlin.jvm.internal.Ref$ObjectRef $leftoverContext -> f
    boolean $isNewCoroutine -> g
    1:1:void <init>(kotlin.jvm.internal.Ref$ObjectRef,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/r;Z)V"}
    1:1:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Li1/g$b;)Li1/g;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 -> z1.z$c:
    kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(boolean,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLi1/g$b;)Ljava/lang/Boolean;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
kotlinx.coroutines.CoroutineDispatcher -> z1.a0:
    kotlinx.coroutines.CoroutineDispatcher$Key Key -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Li1/d;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g;"}
    void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Z"}
    1:1:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lz1/a0;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g$b;"}
    1:1:void releaseInterceptedContinuation(kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)V"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CoroutineDispatcher$Key -> z1.a0$a:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
kotlinx.coroutines.CoroutineDispatcher$Key$1 -> z1.a0$a$a:
    kotlinx.coroutines.CoroutineDispatcher$Key$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$b;)Lz1/a0;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
kotlinx.coroutines.CoroutineExceptionHandler -> z1.b0:
    kotlinx.coroutines.CoroutineExceptionHandler$Key Key -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.CoroutineExceptionHandler$Key -> z1.b0$a:
    kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlinx.coroutines.CoroutineExceptionHandlerKt -> z1.c0:
    1:1:void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Throwable;)V"}
    1:1:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable):0:0 -> b
kotlinx.coroutines.CoroutineScope -> z1.d0:
    kotlin.coroutines.CoroutineContext getCoroutineContext() -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
kotlinx.coroutines.CoroutineScopeKt -> z1.e0:
    1:1:kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Lz1/d0;"}
    1:1:java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.CoroutineStart -> z1.f0:
    kotlinx.coroutines.CoroutineStart DEFAULT -> e
    kotlinx.coroutines.CoroutineStart LAZY -> f
    kotlinx.coroutines.CoroutineStart ATOMIC -> g
    kotlinx.coroutines.CoroutineStart UNDISPATCHED -> h
    kotlinx.coroutines.CoroutineStart[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlinx.coroutines.CoroutineStart[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/f0;"}
    1:1:void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Ljava/lang/Object;Li1/d;)V"}
    1:1:boolean isLazy():0:0 -> c
    1:1:kotlinx.coroutines.CoroutineStart valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz1/f0;"}
    1:1:kotlinx.coroutines.CoroutineStart[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz1/f0;"}
kotlinx.coroutines.CoroutineStart$WhenMappings -> z1.f0$a:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.CoroutinesInternalError -> z1.g0:
    1:1:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
kotlinx.coroutines.DebugStringsKt -> z1.h0:
    1:1:java.lang.String getClassSimpleName(java.lang.Object):0:0 -> a
    1:1:java.lang.String getHexAddress(java.lang.Object):0:0 -> b
    1:1:java.lang.String toDebugString(kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Ljava/lang/String;"}
kotlinx.coroutines.DefaultExecutor -> z1.i0:
    kotlinx.coroutines.DefaultExecutor INSTANCE -> m
    long KEEP_ALIVE_NANOS -> n
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void shutdown():0:0 -> e0
    1:1:java.lang.Thread getThread():0:0 -> f0
    1:1:void enqueue(java.lang.Runnable):0:0 -> j0
    1:1:void acknowledgeShutdownIfNeeded():0:0 -> r0
    1:1:void run():0:0 -> run
    1:1:java.lang.Thread createThreadSync():0:0 -> s0
    1:1:boolean isShutDown():0:0 -> t0
    1:1:boolean isShutdownRequested():0:0 -> u0
    1:1:boolean notifyStartup():0:0 -> v0
    1:1:void shutdownError():0:0 -> w0
kotlinx.coroutines.DefaultExecutorKt -> z1.j0:
    boolean defaultMainDelayOptIn -> a
    kotlinx.coroutines.Delay DefaultDelay -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.Delay getDefaultDelay():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/k0;"}
    1:1:kotlinx.coroutines.Delay initializeDefaultDelay():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/k0;"}
kotlinx.coroutines.Delay -> z1.k0:
kotlinx.coroutines.DispatchedTask -> z1.l0:
    int resumeMode -> g
    1:1:void <init>(int):0:0 -> <init>
    void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> b
    kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/d;"}
    1:1:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> e
    1:1:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> g
    1:1:void handleFatalException(java.lang.Throwable,java.lang.Throwable):0:0 -> h
    java.lang.Object takeState$kotlinx_coroutines_core() -> i
    1:1:void run():0:0 -> run
kotlinx.coroutines.DispatchedTaskKt -> z1.m0:
    1:1:void dispatch(kotlinx.coroutines.DispatchedTask,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l0;I)V"}
    1:1:boolean isCancellableMode(int):0:0 -> b
    1:1:boolean isReusableMode(int):0:0 -> c
    1:1:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l0;Li1/d;Z)V"}
    1:1:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l0;)V"}
kotlinx.coroutines.Dispatchers -> z1.n0:
    kotlinx.coroutines.Dispatchers INSTANCE -> a
    kotlinx.coroutines.CoroutineDispatcher Default -> b
    kotlinx.coroutines.CoroutineDispatcher Unconfined -> c
    kotlinx.coroutines.CoroutineDispatcher IO -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlinx.coroutines.CoroutineDispatcher getDefault():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/a0;"}
    1:1:kotlinx.coroutines.CoroutineDispatcher getIO():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/a0;"}
    1:1:kotlinx.coroutines.MainCoroutineDispatcher getMain():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/o1;"}
kotlinx.coroutines.DisposableHandle -> z1.o0:
    void dispose() -> a
kotlinx.coroutines.Empty -> z1.p0:
    boolean isActive -> e
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:boolean isActive():0:0 -> d
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.EventLoop -> z1.q0:
    long useCount -> g
    boolean shared -> h
    kotlin.collections.ArrayDeque unconfinedQueue -> i
    void <init>() -> <init>
    1:1:void decrementUseCount(boolean):0:0 -> V
    1:1:long delta(boolean):0:0 -> W
    1:1:void dispatchUnconfined(kotlinx.coroutines.DispatchedTask):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l0;)V"}
    1:1:long getNextTime():0:0 -> Y
    1:1:void incrementUseCount(boolean):0:0 -> Z
    1:1:void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q0;ZILjava/lang/Object;)V"}
    1:1:boolean isUnconfinedLoopActive():0:0 -> b0
    1:1:boolean isUnconfinedQueueEmpty():0:0 -> c0
    1:1:boolean processUnconfinedEvent():0:0 -> d0
    void shutdown() -> e0
kotlinx.coroutines.EventLoopImplBase -> z1.r0:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _queue$FU -> j
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _delayed$FU -> k
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isCompleted$FU -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:long getNextTime():0:0 -> Y
    1:1:void shutdown():0:0 -> e0
    1:1:void closeQueue():0:0 -> h0
    1:1:java.lang.Runnable dequeue():0:0 -> i0
    1:1:void enqueue(java.lang.Runnable):0:0 -> j0
    1:1:boolean enqueueImpl(java.lang.Runnable):0:0 -> k0
    1:1:boolean isCompleted():0:0 -> l0
    1:1:boolean isEmpty():0:0 -> m0
    1:1:long processNextEvent():0:0 -> n0
    1:1:void rescheduleAllDelayed():0:0 -> o0
    1:1:void resetAll():0:0 -> p0
    1:1:void setCompleted(boolean):0:0 -> q0
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue -> z1.r0$a:
kotlinx.coroutines.EventLoopImplPlatform -> z1.s0:
    void <init>() -> <init>
    java.lang.Thread getThread() -> f0
    1:1:void unpark():0:0 -> g0
kotlinx.coroutines.EventLoopKt -> z1.t0:
    1:1:kotlinx.coroutines.EventLoop createEventLoop():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/q0;"}
kotlinx.coroutines.EventLoop_commonKt -> z1.u0:
    kotlinx.coroutines.internal.Symbol DISPOSED_TASK -> a
    kotlinx.coroutines.internal.Symbol CLOSED_EMPTY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
kotlinx.coroutines.ExceptionsKt -> z1.v0:
    1:1:java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable):0:0 -> a
kotlinx.coroutines.ExecutorCoroutineDispatcher -> z1.w0:
    kotlinx.coroutines.ExecutorCoroutineDispatcher$Key Key -> g
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key -> z1.w0$a:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 -> z1.w0$a$a:
    kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$b;)Lz1/w0;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl -> z1.x0:
    java.util.concurrent.Executor executor -> h
    1:1:void <init>(java.util.concurrent.Executor):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/util/concurrent/RejectedExecutionException;)V"}
    1:1:java.util.concurrent.Executor getExecutor():0:0 -> W
    1:1:void close():0:0 -> close
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.ExecutorsKt -> z1.y0:
    1:1:kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;)Lz1/a0;"}
kotlinx.coroutines.InactiveNodeList -> z1.z0:
    kotlinx.coroutines.NodeList list -> e
    1:1:void <init>(kotlinx.coroutines.NodeList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/p1;)V"}
    1:1:boolean isActive():0:0 -> d
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.Incomplete -> z1.a1:
    boolean isActive() -> d
    kotlinx.coroutines.NodeList getList() -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/p1;"}
kotlinx.coroutines.IncompleteStateBox -> z1.b1:
    kotlinx.coroutines.Incomplete state -> a
    1:1:void <init>(kotlinx.coroutines.Incomplete):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a1;)V"}
kotlinx.coroutines.InvokeOnCancelling -> z1.c1:
    kotlin.jvm.functions.Function1 handler -> i
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
    1:1:void invoke(java.lang.Throwable):0:0 -> z
kotlinx.coroutines.InvokeOnCompletion -> z1.d1:
    kotlin.jvm.functions.Function1 handler -> i
    1:1:void <init>(kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
    1:1:void invoke(java.lang.Throwable):0:0 -> z
kotlinx.coroutines.Job -> z1.e1:
    kotlinx.coroutines.Job$Key Key -> d
    1:1:void <clinit>():0:0 -> <clinit>
    kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob) -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/r;)Lz1/p;"}
    kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1) -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;)Lz1/o0;"}
    void cancel(java.util.concurrent.CancellationException) -> b
    boolean isActive() -> d
    kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZLr1/l;)Lz1/o0;"}
    java.util.concurrent.CancellationException getCancellationException() -> l
    boolean start() -> o
kotlinx.coroutines.Job$DefaultImpls -> z1.e1$a:
    1:1:void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V"}
    1:1:java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;Ljava/lang/Object;Lr1/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;Li1/g$c;)Li1/g$b;"}
    1:1:kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;ZZLr1/l;ILjava/lang/Object;)Lz1/o0;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;Li1/g$c;)Li1/g;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;Li1/g;)Li1/g;"}
kotlinx.coroutines.Job$Key -> z1.e1$b:
    kotlinx.coroutines.Job$Key $$INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlinx.coroutines.JobCancellationException -> z1.f1:
    kotlinx.coroutines.Job job -> e
    1:1:void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Throwable;Lz1/e1;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Throwable fillInStackTrace():0:0 -> fillInStackTrace
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.JobCancellingNode -> z1.g1:
    void <init>() -> <init>
kotlinx.coroutines.JobImpl -> z1.h1:
    boolean handlesException -> g
    1:1:void <init>(kotlinx.coroutines.Job):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;)V"}
    1:1:boolean handlesException():0:0 -> I0
    1:1:boolean getHandlesException$kotlinx_coroutines_core():0:0 -> Z
    1:1:boolean getOnCancelComplete$kotlinx_coroutines_core():0:0 -> a0
kotlinx.coroutines.JobKt -> z1.i1:
    1:1:kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;)Lz1/s;"}
    1:1:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;ILjava/lang/Object;)Lz1/s;"}
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/util/concurrent/CancellationException;)V"}
    1:1:void ensureActive(kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)V"}
    1:1:void ensureActive(kotlinx.coroutines.Job):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;)V"}
kotlinx.coroutines.JobKt__JobKt -> z1.j1:
    1:1:kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;)Lz1/s;"}
    1:1:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;ILjava/lang/Object;)Lz1/s;"}
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/util/concurrent/CancellationException;)V"}
    1:1:void ensureActive(kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)V"}
    1:1:void ensureActive(kotlinx.coroutines.Job):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;)V"}
kotlinx.coroutines.JobNode -> z1.k1:
    kotlinx.coroutines.JobSupport job -> h
    void <init>() -> <init>
    1:1:kotlinx.coroutines.JobSupport getJob():0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/l1;"}
    1:1:void setJob(kotlinx.coroutines.JobSupport):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l1;)V"}
    1:1:void dispose():0:0 -> a
    1:1:boolean isActive():0:0 -> d
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.JobSupport -> z1.l1:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _parentHandle$FU -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr1/p;)Ljava/lang/Object;"}
    1:1:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String):0:0 -> A0
    1:1:void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l1;Lz1/l1$b;Lz1/q;Ljava/lang/Object;)V"}
    1:1:java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object):0:0 -> B0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l1;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;"}
    1:1:java.lang.String toDebugString():0:0 -> C0
    1:1:boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object):0:0 -> D0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a1;Ljava/lang/Object;)Z"}
    1:1:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz1/p1;Lz1/k1;)Z"}
    1:1:boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable):0:0 -> E0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a1;Ljava/lang/Throwable;)Z"}
    1:1:void addSuppressedExceptions(java.lang.Throwable,java.util.List):0:0 -> F
    1:1:java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object):0:0 -> F0
    1:1:void afterCompletion(java.lang.Object):0:0 -> G
    1:1:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):0:0 -> G0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a1;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/r;)Lz1/p;"}
    1:1:boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> H0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l1$b;Lz1/q;Ljava/lang/Object;)Z"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g;"}
    1:1:boolean cancelCoroutine(java.lang.Throwable):0:0 -> K
    1:1:boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object):0:0 -> L
    1:1:void cancelInternal(java.lang.Throwable):0:0 -> M
    1:1:java.lang.Object cancelMakeCompleting(java.lang.Object):0:0 -> N
    1:1:boolean cancelParent(java.lang.Throwable):0:0 -> O
    1:1:java.lang.String cancellationExceptionMessage():0:0 -> P
    1:1:kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;)Lz1/o0;"}
    1:1:boolean childCancelled(java.lang.Throwable):0:0 -> R
    1:1:void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a1;Ljava/lang/Object;)V"}
    1:1:void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l1$b;Lz1/q;Ljava/lang/Object;)V"}
    1:1:java.lang.Throwable createCauseException(java.lang.Object):0:0 -> U
    1:1:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l1$b;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a1;)Lz1/q;"}
    1:1:java.lang.Throwable getExceptionOrNull(java.lang.Object):0:0 -> X
    1:1:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l1$b;Ljava/util/List;)Ljava/lang/Throwable;"}
    1:1:boolean getHandlesException$kotlinx_coroutines_core():0:0 -> Z
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g$b;"}
    1:1:boolean getOnCancelComplete$kotlinx_coroutines_core():0:0 -> a0
    1:1:void cancel(java.util.concurrent.CancellationException):0:0 -> b
    1:1:kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a1;)Lz1/p1;"}
    1:1:kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core():0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/p;"}
    1:1:boolean isActive():0:0 -> d
    1:1:java.lang.Object getState$kotlinx_coroutines_core():0:0 -> d0
    1:1:boolean handleJobException(java.lang.Throwable):0:0 -> e0
    1:1:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> f0
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Li1/g;"}
    1:1:void initParentJob(kotlinx.coroutines.Job):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/e1;)V"}
    1:1:kotlin.coroutines.CoroutineContext$Key getKey():0:0 -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g$c;"}
    1:1:java.util.concurrent.CancellationException getChildJobCancellationCause():0:0 -> h
    1:1:boolean isCancelled():0:0 -> h0
    1:1:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZLr1/l;)Lz1/o0;"}
    1:1:boolean isCompleted():0:0 -> i0
    1:1:boolean isScopedCoroutine():0:0 -> j0
    1:1:java.lang.Object makeCancelling(java.lang.Object):0:0 -> k0
    1:1:java.util.concurrent.CancellationException getCancellationException():0:0 -> l
    1:1:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object):0:0 -> l0
    1:1:kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;Z)Lz1/k1;"}
    1:1:java.lang.String nameString$kotlinx_coroutines_core():0:0 -> n0
    1:1:boolean start():0:0 -> o
    1:1:kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;)Lz1/q;"}
    1:1:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):0:0 -> p0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/p1;Ljava/lang/Throwable;)V"}
    1:1:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):0:0 -> q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/p1;Ljava/lang/Throwable;)V"}
    1:1:void onCancelling(java.lang.Throwable):0:0 -> r0
    1:1:void onCompletionInternal(java.lang.Object):0:0 -> s0
    1:1:void onStart():0:0 -> t0
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void promoteEmptyToNodeList(kotlinx.coroutines.Empty):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/p0;)V"}
    1:1:void promoteSingleToNodeList(kotlinx.coroutines.JobNode):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/k1;)V"}
    1:1:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/k1;)V"}
    1:1:void parentCancelled(kotlinx.coroutines.ParentJob):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/s1;)V"}
    1:1:void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle):0:0 -> x0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/p;)V"}
    1:1:int startInternal(java.lang.Object):0:0 -> y0
    1:1:java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l1;)Ljava/lang/String;"}
    1:1:java.lang.String stateString(java.lang.Object):0:0 -> z0
kotlinx.coroutines.JobSupport$ChildCompletion -> z1.l1$a:
    kotlinx.coroutines.JobSupport parent -> i
    kotlinx.coroutines.JobSupport$Finishing state -> j
    kotlinx.coroutines.ChildHandleNode child -> k
    java.lang.Object proposedUpdate -> l
    1:1:void <init>(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/l1;Lz1/l1$b;Lz1/q;Ljava/lang/Object;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
    1:1:void invoke(java.lang.Throwable):0:0 -> z
kotlinx.coroutines.JobSupport$Finishing -> z1.l1$b:
    kotlinx.coroutines.NodeList list -> e
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isCompleting$FU -> f
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _rootCause$FU -> g
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _exceptionsHolder$FU -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/p1;ZLjava/lang/Throwable;)V"}
    1:1:void addExceptionLocked(java.lang.Throwable):0:0 -> a
    1:1:java.util.ArrayList allocateList():0:0 -> b
    1:1:java.lang.Object getExceptionsHolder():0:0 -> c
    1:1:boolean isActive():0:0 -> d
    1:1:java.lang.Throwable getRootCause():0:0 -> e
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/p1;"}
    1:1:boolean isCancelling():0:0 -> g
    1:1:boolean isCompleting():0:0 -> h
    1:1:boolean isSealed():0:0 -> i
    1:1:java.util.List sealLocked(java.lang.Throwable):0:0 -> j
    1:1:void setCompleting(boolean):0:0 -> k
    1:1:void setExceptionsHolder(java.lang.Object):0:0 -> l
    1:1:void setRootCause(java.lang.Throwable):0:0 -> m
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1 -> z1.l1$c:
    kotlinx.coroutines.JobSupport this$0 -> d
    java.lang.Object $expect$inlined -> e
    1:1:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;Lz1/l1;Ljava/lang/Object;)V"}
    1:1:java.lang.Object prepare(java.lang.Object):0:0 -> d
    1:1:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;)Ljava/lang/Object;"}
kotlinx.coroutines.JobSupportKt -> z1.m1:
    kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY -> a
    kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN -> b
    kotlinx.coroutines.internal.Symbol COMPLETING_RETRY -> c
    kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL -> d
    kotlinx.coroutines.internal.Symbol SEALED -> e
    kotlinx.coroutines.Empty EMPTY_NEW -> f
    kotlinx.coroutines.Empty EMPTY_ACTIVE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/p0;"}
    1:1:kotlinx.coroutines.Empty access$getEMPTY_NEW$p():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/p0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getSEALED$p():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:java.lang.Object boxIncomplete(java.lang.Object):0:0 -> g
    1:1:java.lang.Object unboxState(java.lang.Object):0:0 -> h
kotlinx.coroutines.LazyStandaloneCoroutine -> z1.n1:
    kotlin.coroutines.Continuation continuation -> h
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Lr1/p;)V"}
    1:1:void onStart():0:0 -> t0
kotlinx.coroutines.MainCoroutineDispatcher -> z1.o1:
    void <init>() -> <init>
    kotlinx.coroutines.MainCoroutineDispatcher getImmediate() -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/o1;"}
    1:1:java.lang.String toStringInternalImpl():0:0 -> W
kotlinx.coroutines.NodeList -> z1.p1:
    void <init>() -> <init>
    1:1:boolean isActive():0:0 -> d
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.NonDisposableHandle -> z1.q1:
    kotlinx.coroutines.NonDisposableHandle INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispose():0:0 -> a
    1:1:boolean childCancelled(java.lang.Throwable):0:0 -> c
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.NotCompleted -> z1.r1:
kotlinx.coroutines.ParentJob -> z1.s1:
    java.util.concurrent.CancellationException getChildJobCancellationCause() -> h
kotlinx.coroutines.StandaloneCoroutine -> z1.t1:
    1:1:void <init>(kotlin.coroutines.CoroutineContext,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Z)V"}
    1:1:boolean handleJobException(java.lang.Throwable):0:0 -> e0
kotlinx.coroutines.ThreadContextElement -> z1.u1:
    void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Object;)V"}
    java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext) -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Ljava/lang/Object;"}
kotlinx.coroutines.ThreadLocalEventLoop -> z1.v1:
    kotlinx.coroutines.ThreadLocalEventLoop INSTANCE -> a
    java.lang.ThreadLocal ref -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/q0;"}
    1:1:void resetEventLoop$kotlinx_coroutines_core():0:0 -> b
    1:1:void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/q0;)V"}
kotlinx.coroutines.Unconfined -> z1.w1:
    kotlinx.coroutines.Unconfined INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Z"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.UndispatchedCoroutine -> z1.x1:
kotlinx.coroutines.UndispatchedMarker -> z1.y1:
    kotlinx.coroutines.UndispatchedMarker INSTANCE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lr1/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g$c;)Li1/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Li1/g;"}
    1:1:kotlin.coroutines.CoroutineContext$Key getKey():0:0 -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g$c;"}
kotlinx.coroutines.Waiter -> z1.z1:
    void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e0;I)V"}
kotlinx.coroutines.YieldContext -> z1.a2:
    boolean dispatcherWasUnconfined -> f
    kotlinx.coroutines.YieldContext$Key Key -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
kotlinx.coroutines.YieldContext$Key -> z1.a2$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
kotlinx.coroutines.YieldKt -> z1.b2:
    1:1:java.lang.Object yield(kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.android.AndroidDispatcherFactory -> a2.a:
    void <init>() -> <init>
    1:1:int getLoadPriority():0:0 -> a
    1:1:java.lang.String hintOnError():0:0 -> b
    1:1:kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lz1/o1;"}
kotlinx.coroutines.android.AndroidExceptionPreHandler -> a2.b:
    1:1:void <init>():0:0 -> <init>
    1:1:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Throwable;)V"}
    1:1:java.lang.reflect.Method preHandler():0:0 -> R
kotlinx.coroutines.android.HandlerContext -> a2.c:
    android.os.Handler handler -> g
    java.lang.String name -> h
    boolean invokeImmediately -> i
    kotlinx.coroutines.android.HandlerContext immediate -> j
    1:1:void <init>(android.os.Handler,java.lang.String):0:0 -> <init>
    2:2:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Ljava/lang/String;ILs1/g;)V"}
    3:3:void <init>(android.os.Handler,java.lang.String,boolean):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Z"}
    1:1:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/o1;"}
    1:1:void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.android.HandlerContext getImmediate():0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La2/c;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.android.HandlerDispatcher -> a2.d:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
kotlinx.coroutines.android.HandlerDispatcherKt -> a2.e:
    kotlinx.coroutines.android.HandlerDispatcher Main -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.os.Handler asHandler(android.os.Looper,boolean):0:0 -> a
kotlinx.coroutines.channels.BufferOverflow -> b2.a:
    kotlinx.coroutines.channels.BufferOverflow SUSPEND -> e
    kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST -> f
    kotlinx.coroutines.channels.BufferOverflow DROP_LATEST -> g
    kotlinx.coroutines.channels.BufferOverflow[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlinx.coroutines.channels.BufferOverflow[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lb2/a;"}
    1:1:kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lb2/a;"}
    1:1:kotlinx.coroutines.channels.BufferOverflow[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lb2/a;"}
kotlinx.coroutines.channels.BufferedChannel -> b2.b:
    int capacity -> e
    kotlin.jvm.functions.Function1 onUndeliveredElement -> f
    kotlin.jvm.functions.Function3 onUndeliveredElementReceiveCancellationConstructor -> g
    java.util.concurrent.atomic.AtomicLongFieldUpdater sendersAndCloseStatus$FU -> h
    java.util.concurrent.atomic.AtomicLongFieldUpdater receivers$FU -> i
    java.util.concurrent.atomic.AtomicLongFieldUpdater bufferEnd$FU -> j
    java.util.concurrent.atomic.AtomicLongFieldUpdater completedExpandBuffersAndPauseFlag$FU -> k
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater sendSegment$FU -> l
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater receiveSegment$FU -> m
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater bufferEndSegment$FU -> n
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _closeCause$FU -> o
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater closeHandler$FU -> p
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILr1/l;)V"}
    1:1:void cancelSuspendedReceiveRequests(kotlinx.coroutines.channels.ChannelSegment,long):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;J)V"}
    1:1:boolean updateCellExpandBuffer(kotlinx.coroutines.channels.ChannelSegment,int,long):0:0 -> A0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;IJ)Z"}
    1:1:kotlinx.coroutines.channels.ChannelSegment closeLinkedList():0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/j;"}
    1:1:boolean updateCellExpandBufferSlow(kotlinx.coroutines.channels.ChannelSegment,int,long):0:0 -> B0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;IJ)Z"}
    1:1:boolean closeOrCancelImpl(java.lang.Throwable,boolean):0:0 -> C
    1:1:java.lang.Object updateCellReceive(kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object):0:0 -> C0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;IJLjava/lang/Object;)Ljava/lang/Object;"}
    1:1:void completeCancel(long):0:0 -> D
    1:1:java.lang.Object updateCellReceiveSlow(kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object):0:0 -> D0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;IJLjava/lang/Object;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.channels.ChannelSegment completeClose(long):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lb2/j;"}
    1:1:int updateCellSend(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean):0:0 -> E0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;ILjava/lang/Object;JLjava/lang/Object;Z)I"}
    1:1:void completeCloseOrCancel():0:0 -> F
    1:1:int updateCellSendSlow(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean):0:0 -> F0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;ILjava/lang/Object;JLjava/lang/Object;Z)I"}
    1:1:void dropFirstElementUntilTheSpecifiedCellIsInTheBuffer(long):0:0 -> G
    1:1:void updateReceiversCounterIfLower(long):0:0 -> G0
    1:1:void expandBuffer():0:0 -> H
    1:1:void updateSendersCounterIfLower(long):0:0 -> H0
    1:1:kotlinx.coroutines.channels.ChannelSegment findSegmentBufferEnd(long,kotlinx.coroutines.channels.ChannelSegment,long):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb2/j;J)Lb2/j;"}
    1:1:void waitExpandBufferCompletion$kotlinx_coroutines_core(long):0:0 -> I0
    1:1:kotlinx.coroutines.channels.ChannelSegment findSegmentReceive(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb2/j;)Lb2/j;"}
    1:1:kotlinx.coroutines.channels.ChannelSegment findSegmentSend(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb2/j;)Lb2/j;"}
    1:1:long getBufferEndCounter():0:0 -> L
    1:1:java.lang.Throwable getCloseCause():0:0 -> M
    1:1:java.lang.Throwable getReceiveException():0:0 -> N
    1:1:long getReceiversCounter$kotlinx_coroutines_core():0:0 -> O
    1:1:java.lang.Throwable getSendException():0:0 -> P
    1:1:long getSendersCounter$kotlinx_coroutines_core():0:0 -> Q
    1:1:boolean hasElements$kotlinx_coroutines_core():0:0 -> R
    1:1:void incCompletedExpandBufferAttempts(long):0:0 -> S
    1:1:void incCompletedExpandBufferAttempts$default(kotlinx.coroutines.channels.BufferedChannel,long,int,java.lang.Object):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;JILjava/lang/Object;)V"}
    1:1:void invokeCloseHandler():0:0 -> U
    1:1:boolean isCellNonEmpty(kotlinx.coroutines.channels.ChannelSegment,int,long):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;IJ)Z"}
    1:1:boolean isClosed(long,boolean):0:0 -> W
    1:1:boolean isClosedForReceive():0:0 -> X
    1:1:boolean isClosedForReceive0(long):0:0 -> Y
    1:1:boolean isClosedForSend0(long):0:0 -> Z
    1:1:kotlinx.coroutines.channels.ChannelSegment access$findSegmentReceive(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;JLb2/j;)Lb2/j;"}
    1:1:boolean isConflatedDropOldest():0:0 -> a0
    1:1:void cancel(java.util.concurrent.CancellationException):0:0 -> b
    1:1:boolean isRendezvousOrUnlimited():0:0 -> b0
    1:1:kotlinx.coroutines.channels.ChannelSegment access$findSegmentSend(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;JLb2/j;)Lb2/j;"}
    1:1:long markAllEmptyCellsAsClosed(kotlinx.coroutines.channels.ChannelSegment):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;)J"}
    1:1:java.lang.Throwable access$getReceiveException(kotlinx.coroutines.channels.BufferedChannel):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;)Ljava/lang/Throwable;"}
    1:1:void markCancellationStarted():0:0 -> d0
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getReceiveSegment$FU$p():0:0 -> e
    1:1:void markCancelled():0:0 -> e0
    1:1:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getReceivers$FU$p():0:0 -> f
    1:1:void markClosed():0:0 -> f0
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getSendSegment$FU$p():0:0 -> g
    1:1:void moveSegmentBufferEndToSpecifiedOrLast(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb2/j;)V"}
    1:1:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getSendersAndCloseStatus$FU$p():0:0 -> h
    1:1:void onClosedIdempotent():0:0 -> h0
    1:1:boolean access$isClosedForSend0(kotlinx.coroutines.channels.BufferedChannel,long):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;J)Z"}
    1:1:void onClosedReceiveCatchingOnNoWaiterSuspend(kotlinx.coroutines.CancellableContinuation):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/j;)V"}
    1:1:kotlinx.coroutines.channels.ChannelIterator iterator():0:0 -> iterator
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/f;"}
    1:1:void access$onClosedReceiveCatchingOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.CancellableContinuation):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Lz1/j;)V"}
    1:1:java.lang.Object onClosedSend(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object tryReceive-PtdJZtk():0:0 -> k
    1:1:void onClosedSendOnNoWaiterSuspend(java.lang.Object,kotlinx.coroutines.CancellableContinuation):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz1/j;)V"}
    1:1:void access$onClosedSendOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlinx.coroutines.CancellableContinuation):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Ljava/lang/Object;Lz1/j;)V"}
    1:1:void onReceiveDequeued():0:0 -> l0
    1:1:boolean close(java.lang.Throwable):0:0 -> m
    1:1:void onReceiveEnqueued():0:0 -> m0
    1:1:void access$prepareReceiverForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Lz1/z1;Lb2/j;I)V"}
    1:1:void prepareReceiverForSuspension(kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/z1;Lb2/j;I)V"}
    1:1:void access$prepareSenderForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Lz1/z1;Lb2/j;I)V"}
    1:1:void prepareSenderForSuspension(kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/z1;Lb2/j;I)V"}
    1:1:java.lang.Object trySend-JP2dKIU(java.lang.Object):0:0 -> p
    1:1:java.lang.Object receiveCatching-JP2dKIU$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation):0:0 -> p0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object access$receiveCatchingOnNoWaiterSuspend-GKJJFZk(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Lb2/j;IJLi1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object receiveCatchingOnNoWaiterSuspend-GKJJFZk(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation):0:0 -> q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;IJLi1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object access$updateCellReceive(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Lb2/j;IJLjava/lang/Object;)Ljava/lang/Object;"}
    1:1:void removeUnprocessedElements(kotlinx.coroutines.channels.ChannelSegment):0:0 -> r0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;)V"}
    1:1:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
    1:1:void resumeReceiverOnClosedChannel(kotlinx.coroutines.Waiter):0:0 -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/z1;)V"}
    1:1:java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Ljava/lang/Object;"}
    1:1:void resumeSenderOnCancelledChannel(kotlinx.coroutines.Waiter):0:0 -> t0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/z1;)V"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void invokeOnClose(kotlin.jvm.functions.Function1):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;)V"}
    1:1:void resumeWaiterOnClosedChannel(kotlinx.coroutines.Waiter,boolean):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/z1;Z)V"}
    1:1:boolean isClosedForSend():0:0 -> v
    1:1:java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object sendOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,kotlin.coroutines.Continuation):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;ILjava/lang/Object;JLi1/d;)Ljava/lang/Object;"}
    1:1:int access$updateCellSend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Lb2/j;ILjava/lang/Object;JLjava/lang/Object;Z)I"}
    1:1:boolean shouldSendSuspend(long):0:0 -> x0
    1:1:boolean bufferOrRendezvousSend(long):0:0 -> y
    1:1:boolean tryResumeReceiver(java.lang.Object,java.lang.Object):0:0 -> y0
    1:1:boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> z
    1:1:boolean tryResumeSender(java.lang.Object,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> z0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lb2/j;I)Z"}
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator -> b2.b$a:
    java.lang.Object receiveResult -> e
    kotlinx.coroutines.CancellableContinuationImpl continuation -> f
    kotlinx.coroutines.channels.BufferedChannel this$0 -> g
    1:1:void <init>(kotlinx.coroutines.channels.BufferedChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;)V"}
    1:1:void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e0;I)V"}
    1:1:java.lang.Object hasNext(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Ljava/lang/Object;"}
    1:1:void access$onClosedHasNextNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b$a;)V"}
    1:1:void access$setContinuation$p(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,kotlinx.coroutines.CancellableContinuationImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b$a;Lz1/k;)V"}
    1:1:void access$setReceiveResult$p(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b$a;Ljava/lang/Object;)V"}
    1:1:java.lang.Object hasNextOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;IJLi1/d;)Ljava/lang/Object;"}
    1:1:boolean onClosedHasNext():0:0 -> g
    1:1:void onClosedHasNextNoWaiterSuspend():0:0 -> h
    1:1:boolean tryResumeHasNext(java.lang.Object):0:0 -> i
    1:1:void tryResumeHasNextOnClosedChannel():0:0 -> j
    1:1:java.lang.Object next():0:0 -> next
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1 -> b2.b$b:
    kotlinx.coroutines.channels.BufferedChannel this$0 -> f
    1:1:void <init>(kotlinx.coroutines.channels.BufferedChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;)V"}
    1:1:kotlin.jvm.functions.Function1 invoke(kotlinx.coroutines.selects.SelectInstance,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh2/a;Ljava/lang/Object;Ljava/lang/Object;)Lr1/l;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> i
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1$1 -> b2.b$b$a:
    java.lang.Object $element -> f
    kotlinx.coroutines.channels.BufferedChannel this$0 -> g
    1:1:void <init>(java.lang.Object,kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.selects.SelectInstance):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lb2/b;Lh2/a;)V"}
    1:1:void invoke(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
kotlinx.coroutines.channels.BufferedChannel$receiveCatching$1 -> b2.b$c:
    java.lang.Object result -> h
    kotlinx.coroutines.channels.BufferedChannel this$0 -> i
    int label -> j
    1:1:void <init>(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Li1/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
kotlinx.coroutines.channels.BufferedChannel$receiveCatchingOnNoWaiterSuspend$1 -> b2.b$d:
    java.lang.Object L$0 -> h
    java.lang.Object L$1 -> i
    int I$0 -> j
    long J$0 -> k
    java.lang.Object result -> l
    kotlinx.coroutines.channels.BufferedChannel this$0 -> m
    int label -> n
    1:1:void <init>(kotlinx.coroutines.channels.BufferedChannel,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Li1/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
kotlinx.coroutines.channels.BufferedChannelKt -> b2.c:
    kotlinx.coroutines.channels.ChannelSegment NULL_SEGMENT -> a
    int SEGMENT_SIZE -> b
    int EXPAND_BUFFER_COMPLETION_WAIT_ITERATIONS -> c
    kotlinx.coroutines.internal.Symbol BUFFERED -> d
    kotlinx.coroutines.internal.Symbol IN_BUFFER -> e
    kotlinx.coroutines.internal.Symbol RESUMING_BY_RCV -> f
    kotlinx.coroutines.internal.Symbol RESUMING_BY_EB -> g
    kotlinx.coroutines.internal.Symbol POISONED -> h
    kotlinx.coroutines.internal.Symbol DONE_RCV -> i
    kotlinx.coroutines.internal.Symbol INTERRUPTED_SEND -> j
    kotlinx.coroutines.internal.Symbol INTERRUPTED_RCV -> k
    kotlinx.coroutines.internal.Symbol CHANNEL_CLOSED -> l
    kotlinx.coroutines.internal.Symbol SUSPEND -> m
    kotlinx.coroutines.internal.Symbol SUSPEND_NO_WAITER -> n
    kotlinx.coroutines.internal.Symbol FAILED -> o
    kotlinx.coroutines.internal.Symbol NO_RECEIVE_RESULT -> p
    kotlinx.coroutines.internal.Symbol CLOSE_HANDLER_CLOSED -> q
    kotlinx.coroutines.internal.Symbol CLOSE_HANDLER_INVOKED -> r
    kotlinx.coroutines.internal.Symbol NO_CLOSE_CAUSE -> s
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:long initialBufferEnd(int):0:0 -> A
    1:1:boolean tryResume0(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/j;Ljava/lang/Object;Lr1/l;)Z"}
    1:1:boolean tryResume0$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/j;Ljava/lang/Object;Lr1/l;ILjava/lang/Object;)Z"}
    1:1:long access$constructEBCompletedAndPauseFlag(long,boolean):0:0 -> a
    1:1:long access$constructSendersAndCloseStatus(long,int):0:0 -> b
    1:1:kotlinx.coroutines.channels.ChannelSegment access$createSegment(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb2/j;)Lb2/j;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSE_HANDLER_CLOSED$p():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSE_HANDLER_INVOKED$p():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getDONE_RCV$p():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:int access$getEXPAND_BUFFER_COMPLETION_WAIT_ITERATIONS$p():0:0 -> g
    1:1:kotlinx.coroutines.internal.Symbol access$getFAILED$p():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getINTERRUPTED_RCV$p():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getINTERRUPTED_SEND$p():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getIN_BUFFER$p():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getNO_CLOSE_CAUSE$p():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getNO_RECEIVE_RESULT$p():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.channels.ChannelSegment access$getNULL_SEGMENT$p():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/j;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getPOISONED$p():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getRESUMING_BY_EB$p():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getRESUMING_BY_RCV$p():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getSUSPEND$p():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getSUSPEND_NO_WAITER$p():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:long access$initialBufferEnd(int):0:0 -> t
    1:1:boolean access$tryResume0(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/j;Ljava/lang/Object;Lr1/l;)Z"}
    1:1:long constructEBCompletedAndPauseFlag(long,boolean):0:0 -> v
    1:1:long constructSendersAndCloseStatus(long,int):0:0 -> w
    1:1:kotlinx.coroutines.channels.ChannelSegment createSegment(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb2/j;)Lb2/j;"}
    1:1:kotlin.reflect.KFunction createSegmentFunction():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw1/e;"}
    1:1:kotlinx.coroutines.internal.Symbol getCHANNEL_CLOSED():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1 -> b2.c$a:
    kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1 INSTANCE -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:kotlinx.coroutines.channels.ChannelSegment invoke(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb2/j;)Lb2/j;"}
kotlinx.coroutines.channels.Channel -> b2.d:
    kotlinx.coroutines.channels.Channel$Factory Factory -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.channels.Channel$Factory -> b2.d$a:
    kotlinx.coroutines.channels.Channel$Factory $$INSTANCE -> a
    int CHANNEL_DEFAULT_CAPACITY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core():0:0 -> a
kotlinx.coroutines.channels.ChannelCoroutine -> b2.e:
    kotlinx.coroutines.channels.Channel _channel -> h
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Lb2/d;ZZ)V"}
    1:1:void cancelInternal(java.lang.Throwable):0:0 -> M
    1:1:kotlinx.coroutines.channels.Channel getChannel():0:0 -> M0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/d;"}
    1:1:kotlinx.coroutines.channels.Channel get_channel():0:0 -> N0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/d;"}
    1:1:void cancel(java.util.concurrent.CancellationException):0:0 -> b
    1:1:kotlinx.coroutines.channels.ChannelIterator iterator():0:0 -> iterator
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/f;"}
    1:1:java.lang.Object tryReceive-PtdJZtk():0:0 -> k
    1:1:boolean close(java.lang.Throwable):0:0 -> m
    1:1:java.lang.Object trySend-JP2dKIU(java.lang.Object):0:0 -> p
    1:1:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Ljava/lang/Object;"}
    1:1:void invokeOnClose(kotlin.jvm.functions.Function1):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;)V"}
    1:1:boolean isClosedForSend():0:0 -> v
kotlinx.coroutines.channels.ChannelIterator -> b2.f:
    java.lang.Object hasNext(kotlin.coroutines.Continuation) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Ljava/lang/Object;"}
    java.lang.Object next() -> next
kotlinx.coroutines.channels.ChannelKt -> b2.g:
    1:1:kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILb2/a;Lr1/l;)Lb2/d;"}
    1:1:kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILb2/a;Lr1/l;ILjava/lang/Object;)Lb2/d;"}
kotlinx.coroutines.channels.ChannelResult -> b2.h:
    java.lang.Object holder -> a
    kotlinx.coroutines.channels.ChannelResult$Companion Companion -> b
    kotlinx.coroutines.channels.ChannelResult$Failed failed -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/h$c;"}
    1:1:kotlinx.coroutines.channels.ChannelResult box-impl(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lb2/h;"}
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> c
    1:1:boolean equals-impl(java.lang.Object,java.lang.Object):0:0 -> d
    1:1:java.lang.Throwable exceptionOrNull-impl(java.lang.Object):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getOrNull-impl(java.lang.Object):0:0 -> f
    1:1:int hashCode-impl(java.lang.Object):0:0 -> g
    1:1:boolean isClosed-impl(java.lang.Object):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isSuccess-impl(java.lang.Object):0:0 -> i
    1:1:java.lang.String toString-impl(java.lang.Object):0:0 -> j
    1:1:java.lang.Object unbox-impl():0:0 -> k
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.channels.ChannelResult$Closed -> b2.h$a:
    java.lang.Throwable cause -> a
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.channels.ChannelResult$Companion -> b2.h$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:java.lang.Object closed-JP2dKIU(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object failure-PtdJZtk():0:0 -> b
    1:1:java.lang.Object success-JP2dKIU(java.lang.Object):0:0 -> c
kotlinx.coroutines.channels.ChannelResult$Failed -> b2.h$c:
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.channels.ChannelSegment -> b2.j:
    kotlinx.coroutines.channels.BufferedChannel _channel -> i
    java.util.concurrent.atomic.AtomicReferenceArray data -> j
    1:1:void <init>(long,kotlinx.coroutines.channels.ChannelSegment,kotlinx.coroutines.channels.BufferedChannel,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLb2/j;Lb2/b;I)V"}
    1:1:void setState$kotlinx_coroutines_core(int,java.lang.Object):0:0 -> A
    1:1:void storeElement$kotlinx_coroutines_core(int,java.lang.Object):0:0 -> B
    1:1:int getNumberOfSlots():0:0 -> n
    1:1:void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Throwable;Li1/g;)V"}
    1:1:boolean casState$kotlinx_coroutines_core(int,java.lang.Object,java.lang.Object):0:0 -> r
    1:1:void cleanElement$kotlinx_coroutines_core(int):0:0 -> s
    1:1:java.lang.Object getAndSetState$kotlinx_coroutines_core(int,java.lang.Object):0:0 -> t
    1:1:kotlinx.coroutines.channels.BufferedChannel getChannel():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/b;"}
    1:1:java.lang.Object getElement$kotlinx_coroutines_core(int):0:0 -> v
    1:1:java.lang.Object getState$kotlinx_coroutines_core(int):0:0 -> w
    1:1:void onCancelledRequest(int,boolean):0:0 -> x
    1:1:java.lang.Object retrieveElement$kotlinx_coroutines_core(int):0:0 -> y
    1:1:void setElementLazy(int,java.lang.Object):0:0 -> z
kotlinx.coroutines.channels.ChannelSegment$$ExternalSyntheticBackportWithForwarding0 -> b2.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean kotlinx.coroutines.channels.ChannelSegment$$InternalSyntheticBackportWithForwarding$1$6f7cae9946c5b86424e4e5c7a6884a900669cd56eb800ecaba91e55e82091194$0.m(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.channels.ChannelsKt -> b2.k:
    1:1:void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/t;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt -> b2.l:
    1:1:void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/t;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.channels.ClosedReceiveChannelException -> b2.m:
    1:1:void <init>(java.lang.String):0:0 -> <init>
kotlinx.coroutines.channels.ClosedSendChannelException -> b2.n:
    1:1:void <init>(java.lang.String):0:0 -> <init>
kotlinx.coroutines.channels.ConflatedBufferedChannel -> b2.o:
    int capacity -> q
    kotlinx.coroutines.channels.BufferOverflow onBufferOverflow -> r
    1:1:void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILb2/a;Lr1/l;)V"}
    1:1:java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> J0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/o;Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object trySendDropLatest-Mj0NB7M(java.lang.Object,boolean):0:0 -> K0
    1:1:java.lang.Object trySendDropOldest-JP2dKIU(java.lang.Object):0:0 -> L0
    1:1:java.lang.Object trySendImpl-Mj0NB7M(java.lang.Object,boolean):0:0 -> M0
    1:1:boolean isConflatedDropOldest():0:0 -> a0
    1:1:java.lang.Object trySend-JP2dKIU(java.lang.Object):0:0 -> p
    1:1:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.channels.ProduceKt -> b2.p:
    1:1:java.lang.Object awaitClose(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;Lr1/a;Li1/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/g;ILb2/a;Lz1/f0;Lr1/l;Lr1/p;)Lb2/t;"}
    1:1:kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/g;ILb2/a;Lz1/f0;Lr1/l;Lr1/p;ILjava/lang/Object;)Lb2/t;"}
kotlinx.coroutines.channels.ProduceKt$awaitClose$1 -> b2.p$a:
    java.lang.Object L$0 -> h
    java.lang.Object L$1 -> i
    java.lang.Object result -> j
    int label -> k
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1 -> b2.p$b:
    kotlinx.coroutines.CancellableContinuation $cont -> f
    1:1:void <init>(kotlinx.coroutines.CancellableContinuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/j;)V"}
    1:1:void invoke(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
kotlinx.coroutines.channels.ProducerCoroutine -> b2.q:
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Lb2/d;)V"}
    1:1:void onCancelled(java.lang.Throwable,boolean):0:0 -> J0
    1:1:void onCompleted(java.lang.Object):0:0 -> K0
    1:1:void onCompleted(kotlin.Unit):0:0 -> O0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf1/q;)V"}
    1:1:boolean isActive():0:0 -> d
    1:1:kotlinx.coroutines.channels.SendChannel getChannel():0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/u;"}
kotlinx.coroutines.channels.ProducerScope -> b2.r:
    kotlinx.coroutines.channels.SendChannel getChannel() -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/u;"}
kotlinx.coroutines.channels.ReceiveCatching -> b2.s:
    kotlinx.coroutines.CancellableContinuationImpl cont -> e
    1:1:void <init>(kotlinx.coroutines.CancellableContinuationImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/k;)V"}
    1:1:void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e0;I)V"}
kotlinx.coroutines.channels.ReceiveChannel -> b2.t:
    void cancel(java.util.concurrent.CancellationException) -> b
    kotlinx.coroutines.channels.ChannelIterator iterator() -> iterator
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/f;"}
    java.lang.Object tryReceive-PtdJZtk() -> k
    java.lang.Object receiveCatching-JP2dKIU(kotlin.coroutines.Continuation) -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.channels.SendChannel -> b2.u:
    boolean close(java.lang.Throwable) -> m
    java.lang.Object trySend-JP2dKIU(java.lang.Object) -> p
    java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation) -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
    void invokeOnClose(kotlin.jvm.functions.Function1) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;)V"}
    boolean isClosedForSend() -> v
kotlinx.coroutines.channels.SendChannel$DefaultImpls -> b2.u$a:
    1:1:boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/u;Ljava/lang/Throwable;ILjava/lang/Object;)Z"}
kotlinx.coroutines.channels.WaiterEB -> b2.v:
    kotlinx.coroutines.Waiter waiter -> a
    1:1:void <init>(kotlinx.coroutines.Waiter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/z1;)V"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.CallbackFlowBuilder -> c2.a:
    kotlin.jvm.functions.Function2 block -> e
    1:1:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Li1/g;ILb2/a;)V"}
    2:2:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Li1/g;ILb2/a;ILs1/g;)V"}
    1:1:java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;Li1/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;ILb2/a;)Ld2/d;"}
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1 -> c2.a$a:
    java.lang.Object L$0 -> h
    java.lang.Object result -> i
    kotlinx.coroutines.flow.CallbackFlowBuilder this$0 -> j
    int label -> k
    1:1:void <init>(kotlinx.coroutines.flow.CallbackFlowBuilder,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/a;Li1/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
kotlinx.coroutines.flow.ChannelFlowBuilder -> c2.b:
    kotlin.jvm.functions.Function2 block -> d
    1:1:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Li1/g;ILb2/a;)V"}
    1:1:java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.ChannelFlowBuilder,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/b;Lb2/r;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.DistinctFlowImpl -> c2.c:
    kotlinx.coroutines.flow.Flow upstream -> a
    kotlin.jvm.functions.Function1 keySelector -> b
    kotlin.jvm.functions.Function2 areEquivalent -> c
    1:1:void <init>(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/d;Lr1/l;Lr1/p;)V"}
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2 -> c2.c$a:
    kotlinx.coroutines.flow.DistinctFlowImpl this$0 -> a
    kotlin.jvm.internal.Ref$ObjectRef $previousKey -> b
    kotlinx.coroutines.flow.FlowCollector $collector -> c
    1:1:void <init>(kotlinx.coroutines.flow.DistinctFlowImpl,kotlin.jvm.internal.Ref$ObjectRef,kotlinx.coroutines.flow.FlowCollector):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/c;Ls1/r;Lc2/e;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.DistinctFlowImpl$collect$2$emit$1 -> c2.c$a$a:
    java.lang.Object result -> h
    kotlinx.coroutines.flow.DistinctFlowImpl$collect$2 this$0 -> i
    int label -> j
    1:1:void <init>(kotlinx.coroutines.flow.DistinctFlowImpl$collect$2,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/c$a;Li1/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
kotlinx.coroutines.flow.Flow -> c2.d:
    java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.FlowCollector -> c2.e:
    java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.FlowKt -> c2.f:
    1:1:kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;)Lc2/d;"}
    1:1:kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/d;)Lc2/d;"}
    1:1:java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Lb2/t;Li1/d;)Ljava/lang/Object;"}
    1:1:void ensureActive(kotlinx.coroutines.flow.FlowCollector):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;)V"}
    1:1:kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/d;Li1/g;)Lc2/d;"}
kotlinx.coroutines.flow.FlowKt__BuildersKt -> c2.g:
    1:1:kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;)Lc2/d;"}
kotlinx.coroutines.flow.FlowKt__ChannelsKt -> c2.h:
    1:1:java.lang.Object access$emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Lb2/t;ZLi1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Lb2/t;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Lb2/t;ZLi1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1 -> c2.h$a:
    java.lang.Object L$0 -> h
    java.lang.Object L$1 -> i
    java.lang.Object L$2 -> j
    boolean Z$0 -> k
    java.lang.Object result -> l
    int label -> m
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
kotlinx.coroutines.flow.FlowKt__ContextKt -> c2.i:
    1:1:void checkFlowContext$FlowKt__ContextKt(kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)V"}
    1:1:kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/d;Li1/g;)Lc2/d;"}
kotlinx.coroutines.flow.FlowKt__DistinctKt -> c2.j:
    kotlin.jvm.functions.Function1 defaultKeySelector -> a
    kotlin.jvm.functions.Function2 defaultAreEquivalent -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.flow.Flow distinctUntilChanged(kotlinx.coroutines.flow.Flow):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/d;)Lc2/d;"}
    1:1:kotlinx.coroutines.flow.Flow distinctUntilChangedBy$FlowKt__DistinctKt(kotlinx.coroutines.flow.Flow,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/d;Lr1/l;Lr1/p;)Lc2/d;"}
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1 -> c2.j$a:
    kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultAreEquivalent$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(java.lang.Object,java.lang.Object):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1 -> c2.j$b:
    kotlinx.coroutines.flow.FlowKt__DistinctKt$defaultKeySelector$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
kotlinx.coroutines.flow.FlowKt__EmittersKt -> c2.k:
    1:1:void ensureActive(kotlinx.coroutines.flow.FlowCollector):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;)V"}
kotlinx.coroutines.flow.MutableStateFlow -> c2.l:
    void setValue(java.lang.Object) -> setValue
kotlinx.coroutines.flow.SharedFlow -> c2.m:
kotlinx.coroutines.flow.SharedFlowKt -> c2.n:
    kotlinx.coroutines.internal.Symbol NO_VALUE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.flow.Flow fuseSharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/m;Li1/g;ILb2/a;)Lc2/d;"}
kotlinx.coroutines.flow.StateFlow -> c2.o:
kotlinx.coroutines.flow.StateFlowImpl -> c2.p:
    int sequence -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;ILb2/a;)Lc2/d;"}
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld2/c;"}
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ld2/c;"}
    1:1:kotlinx.coroutines.flow.StateFlowSlot createSlot():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc2/r;"}
    1:1:kotlinx.coroutines.flow.StateFlowSlot[] createSlotArray(int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc2/r;"}
    1:1:boolean updateState(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:void setValue(java.lang.Object):0:0 -> setValue
kotlinx.coroutines.flow.StateFlowImpl$collect$1 -> c2.p$a:
    java.lang.Object L$0 -> h
    java.lang.Object L$1 -> i
    java.lang.Object L$2 -> j
    java.lang.Object L$3 -> k
    java.lang.Object L$4 -> l
    java.lang.Object result -> m
    kotlinx.coroutines.flow.StateFlowImpl this$0 -> n
    int label -> o
    1:1:void <init>(kotlinx.coroutines.flow.StateFlowImpl,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/p;Li1/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
kotlinx.coroutines.flow.StateFlowKt -> c2.q:
    kotlinx.coroutines.internal.Symbol NONE -> a
    kotlinx.coroutines.internal.Symbol PENDING -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lc2/l;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getNONE$p():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getPENDING$p():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.flow.Flow fuseStateFlow(kotlinx.coroutines.flow.StateFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/o;Li1/g;ILb2/a;)Lc2/d;"}
kotlinx.coroutines.flow.StateFlowSlot -> c2.r:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean allocateLocked(java.lang.Object):0:0 -> a
    1:1:kotlin.coroutines.Continuation[] freeLocked(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)[Li1/d;"}
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_state$FU$p():0:0 -> c
    1:1:boolean allocateLocked(kotlinx.coroutines.flow.StateFlowImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/p;)Z"}
    1:1:java.lang.Object awaitPending(kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.StateFlowImpl):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/p;)[Li1/d;"}
    1:1:void makePending():0:0 -> g
    1:1:boolean takePending():0:0 -> h
kotlinx.coroutines.flow.internal.AbstractSharedFlow -> d2.a:
    kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] slots -> a
    int nCollectors -> b
    int nextIndex -> c
    void <init>() -> <init>
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot allocateSlot():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld2/c;"}
    kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot() -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ld2/c;"}
    kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ld2/c;"}
    1:1:void freeSlot(kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld2/c;)V"}
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] getSlots():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ld2/c;"}
kotlinx.coroutines.flow.internal.AbstractSharedFlowKt -> d2.b:
    kotlin.coroutines.Continuation[] EMPTY_RESUMES -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot -> d2.c:
    void <init>() -> <init>
    boolean allocateLocked(java.lang.Object) -> a
    kotlin.coroutines.Continuation[] freeLocked(java.lang.Object) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)[Li1/d;"}
kotlinx.coroutines.flow.internal.ChannelFlow -> d2.d:
    kotlin.coroutines.CoroutineContext context -> a
    int capacity -> b
    kotlinx.coroutines.channels.BufferOverflow onBufferOverflow -> c
    1:1:void <init>(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;ILb2/a;)V"}
    1:1:java.lang.String additionalToStringProps():0:0 -> a
    1:1:kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;ILb2/a;)Lc2/d;"}
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld2/d;Lc2/e;Li1/d;)Ljava/lang/Object;"}
    java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;Li1/d;)Ljava/lang/Object;"}
    kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;ILb2/a;)Ld2/d;"}
    1:1:kotlin.jvm.functions.Function2 getCollectToFun$kotlinx_coroutines_core():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr1/p;"}
    1:1:int getProduceCapacity$kotlinx_coroutines_core():0:0 -> h
    1:1:kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;)Lb2/t;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2 -> d2.d$a:
    int label -> i
    java.lang.Object L$0 -> j
    kotlinx.coroutines.flow.FlowCollector $collector -> k
    kotlinx.coroutines.flow.internal.ChannelFlow this$0 -> l
    1:1:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Ld2/d;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1 -> d2.d$b:
    int label -> i
    java.lang.Object L$0 -> j
    kotlinx.coroutines.flow.internal.ChannelFlow this$0 -> k
    1:1:void <init>(kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld2/d;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.ChannelFlowKt -> d2.e:
    1:1:kotlinx.coroutines.flow.FlowCollector access$withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/g;)Lc2/e;"}
    1:1:java.lang.Object withContextUndispatched(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Object;Ljava/lang/Object;Lr1/p;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object withContextUndispatched$default(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Object;Ljava/lang/Object;Lr1/p;Li1/d;ILjava/lang/Object;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.FlowCollector withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/g;)Lc2/e;"}
kotlinx.coroutines.flow.internal.ChannelFlowOperator -> d2.f:
    kotlinx.coroutines.flow.Flow flow -> d
    1:1:void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/d;Li1/g;ILb2/a;)V"}
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/r;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld2/f;Lc2/e;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld2/f;Lb2/r;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectWithContextUndispatched(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/g;Li1/d;)Ljava/lang/Object;"}
    java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/d;)Ljava/lang/Object;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2 -> d2.f$a:
    int label -> i
    java.lang.Object L$0 -> j
    kotlinx.coroutines.flow.internal.ChannelFlowOperator this$0 -> k
    1:1:void <init>(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld2/f;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl -> d2.g:
    1:1:void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/d;Li1/g;ILb2/a;)V"}
    2:2:void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/d;Li1/g;ILb2/a;ILs1/g;)V"}
    1:1:kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;ILb2/a;)Ld2/d;"}
    1:1:java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.CombineKt -> d2.h:
    1:1:java.lang.Object combineInternal(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;[Lc2/d;Lr1/a;Lr1/q;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2 -> d2.h$a:
    java.lang.Object L$1 -> i
    java.lang.Object L$2 -> j
    int I$0 -> k
    int I$1 -> l
    int label -> m
    java.lang.Object L$0 -> n
    kotlinx.coroutines.flow.Flow[] $flows -> o
    kotlin.jvm.functions.Function0 $arrayFactory -> p
    kotlin.jvm.functions.Function3 $transform -> q
    kotlinx.coroutines.flow.FlowCollector $this_combineInternal -> r
    1:1:void <init>(kotlinx.coroutines.flow.Flow[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function3,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lc2/d;Lr1/a;Lr1/q;Lc2/e;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1 -> d2.h$a$a:
    int label -> i
    kotlinx.coroutines.flow.Flow[] $flows -> j
    int $i -> k
    java.util.concurrent.atomic.AtomicInteger $nonClosed -> l
    kotlinx.coroutines.channels.Channel $resultChannel -> m
    1:1:void <init>(kotlinx.coroutines.flow.Flow[],int,java.util.concurrent.atomic.AtomicInteger,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lc2/d;ILjava/util/concurrent/atomic/AtomicInteger;Lb2/d;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/d0;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1 -> d2.h$a$a$a:
    kotlinx.coroutines.channels.Channel $resultChannel -> a
    int $i -> b
    1:1:void <init>(kotlinx.coroutines.channels.Channel,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/d;I)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1$emit$1 -> d2.h$a$a$a$a:
    java.lang.Object result -> h
    kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1 this$0 -> i
    int label -> j
    1:1:void <init>(kotlinx.coroutines.flow.internal.CombineKt$combineInternal$2$1$1,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld2/h$a$a$a;Li1/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
kotlinx.coroutines.flow.internal.FlowCoroutine -> d2.i:
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Li1/d;)V"}
    1:1:boolean childCancelled(java.lang.Throwable):0:0 -> R
kotlinx.coroutines.flow.internal.FlowCoroutineKt -> d2.j:
    1:1:java.lang.Object flowScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.FusibleFlow -> d2.k:
    kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;ILb2/a;)Lc2/d;"}
kotlinx.coroutines.flow.internal.FusibleFlow$DefaultImpls -> d2.k$a:
    1:1:kotlinx.coroutines.flow.Flow fuse$default(kotlinx.coroutines.flow.internal.FusibleFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld2/k;Li1/g;ILb2/a;ILjava/lang/Object;)Lc2/d;"}
kotlinx.coroutines.flow.internal.NullSurrogateKt -> d2.l:
    kotlinx.coroutines.internal.Symbol NULL -> a
    kotlinx.coroutines.internal.Symbol UNINITIALIZED -> b
    kotlinx.coroutines.internal.Symbol DONE -> c
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.flow.internal.SendingCollector -> d2.m:
    kotlinx.coroutines.channels.SendChannel channel -> a
    1:1:void <init>(kotlinx.coroutines.channels.SendChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/u;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.StackFrameContinuation -> d2.n:
    kotlin.coroutines.Continuation uCont -> e
    kotlin.coroutines.CoroutineContext context -> f
    1:1:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;Li1/g;)V"}
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk1/e;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> r
kotlinx.coroutines.flow.internal.UndispatchedContextCollector -> d2.o:
    kotlin.coroutines.CoroutineContext emitContext -> a
    java.lang.Object countOrElement -> b
    kotlin.jvm.functions.Function2 emitRef -> c
    1:1:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/g;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1 -> d2.o$a:
    int label -> i
    java.lang.Object L$0 -> j
    kotlinx.coroutines.flow.FlowCollector $downstream -> k
    1:1:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc2/e;Li1/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Li1/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> n
    1:1:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/d;)Ljava/lang/Object;"}
kotlinx.coroutines.internal.AtomicKt -> e2.a:
    java.lang.Object NO_DECISION -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.internal.AtomicOp -> e2.b:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object perform(java.lang.Object):0:0 -> a
    void complete(java.lang.Object,java.lang.Object) -> b
    1:1:java.lang.Object decide(java.lang.Object):0:0 -> c
    java.lang.Object prepare(java.lang.Object) -> d
kotlinx.coroutines.internal.ConcurrentKt -> e2.c:
    java.lang.reflect.Method REMOVE_FUTURE_ON_CANCEL -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean removeFutureOnCancel(java.util.concurrent.Executor):0:0 -> a
kotlinx.coroutines.internal.ConcurrentLinkedListKt -> e2.d:
    kotlinx.coroutines.internal.Symbol CLOSED -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode close(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)Le2/e;"}
    1:1:java.lang.Object findSegmentInternal(kotlinx.coroutines.internal.Segment,long,kotlin.jvm.functions.Function2):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e0;JLr1/p;)Ljava/lang/Object;"}
kotlinx.coroutines.internal.ConcurrentLinkedListNode -> e2.e:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)V"}
    1:1:java.lang.Object access$getNextOrClosed(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)Ljava/lang/Object;"}
    1:1:void cleanPrev():0:0 -> b
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getAliveSegmentLeft():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/e;"}
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getAliveSegmentRight():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/e;"}
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getNext():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/e;"}
    1:1:java.lang.Object getNextOrClosed():0:0 -> f
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getPrev():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/e;"}
    boolean isRemoved() -> h
    1:1:boolean isTail():0:0 -> i
    1:1:boolean markAsClosed():0:0 -> j
    1:1:void remove():0:0 -> k
    1:1:boolean trySetNext(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)Z"}
kotlinx.coroutines.internal.ContextScope -> e2.f:
    kotlin.coroutines.CoroutineContext coroutineContext -> e
    1:1:void <init>(kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)V"}
    1:1:kotlin.coroutines.CoroutineContext getCoroutineContext():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt -> e2.g:
    java.util.Collection platformExceptionHandlers -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.util.Collection getPlatformExceptionHandlers():0:0 -> a
    1:1:void propagateExceptionFinalResort(java.lang.Throwable):0:0 -> b
kotlinx.coroutines.internal.CoroutineExceptionHandlerImpl_commonKt -> e2.h:
    1:1:void handleUncaughtCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.internal.DiagnosticCoroutineContextException -> e2.i:
    kotlin.coroutines.CoroutineContext context -> e
    1:1:void <init>(kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)V"}
    1:1:java.lang.Throwable fillInStackTrace():0:0 -> fillInStackTrace
    1:1:java.lang.String getLocalizedMessage():0:0 -> getLocalizedMessage
kotlinx.coroutines.internal.DispatchedContinuation -> e2.j:
    kotlinx.coroutines.CoroutineDispatcher dispatcher -> h
    kotlin.coroutines.Continuation continuation -> i
    java.lang.Object _state -> j
    java.lang.Object countOrElement -> k
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _reusableCancellableContinuation$FU -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a0;Li1/d;)V"}
    1:1:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable):0:0 -> b
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/g;"}
    1:1:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/d;"}
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk1/e;"}
    1:1:java.lang.Object takeState$kotlinx_coroutines_core():0:0 -> i
    1:1:void awaitReusability():0:0 -> k
    1:1:kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/k;"}
    1:1:void dispatchYield$kotlinx_coroutines_core(kotlin.coroutines.CoroutineContext,java.lang.Object):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Object;)V"}
    1:1:kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/k;"}
    1:1:boolean isReusable():0:0 -> o
    1:1:boolean postponeCancellation(java.lang.Throwable):0:0 -> p
    1:1:void release():0:0 -> q
    1:1:void resumeWith(java.lang.Object):0:0 -> r
    1:1:java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/j;)Ljava/lang/Throwable;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.DispatchedContinuationKt -> e2.k:
    kotlinx.coroutines.internal.Symbol UNDEFINED -> a
    kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/h0;"}
    1:1:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;Ljava/lang/Object;Lr1/l;)V"}
    1:1:void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;Ljava/lang/Object;Lr1/l;ILjava/lang/Object;)V"}
    1:1:boolean yieldUndispatched(kotlinx.coroutines.internal.DispatchedContinuation):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/j;)Z"}
kotlinx.coroutines.internal.FastServiceLoader -> e2.l:
    kotlinx.coroutines.internal.FastServiceLoader INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class):0:0 -> a
    1:1:java.util.List load(java.lang.Class,java.lang.ClassLoader):0:0 -> b
    1:1:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():0:0 -> c
    1:1:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):0:0 -> d
    1:1:java.util.List parse(java.net.URL):0:0 -> e
    1:1:java.util.List parseFile(java.io.BufferedReader):0:0 -> f
kotlinx.coroutines.internal.FastServiceLoaderKt -> e2.m:
    boolean ANDROID_DETECTED -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean getANDROID_DETECTED():0:0 -> a
kotlinx.coroutines.internal.InlineList -> e2.n:
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> a
    1:1:java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILs1/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object):0:0 -> c
kotlinx.coroutines.internal.LimitedDispatcher -> e2.o:
    kotlinx.coroutines.CoroutineDispatcher dispatcher -> g
    int parallelism -> h
    kotlinx.coroutines.Delay $$delegate_0 -> i
    kotlinx.coroutines.internal.LockFreeTaskQueue queue -> j
    java.lang.Object workerAllocationLock -> k
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater runningWorkers$FU -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.CoroutineDispatcher,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a0;I)V"}
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(kotlinx.coroutines.internal.LimitedDispatcher):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/o;)Lz1/a0;"}
    1:1:java.lang.Runnable access$obtainTaskOrDeallocateWorker(kotlinx.coroutines.internal.LimitedDispatcher):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/o;)Ljava/lang/Runnable;"}
    1:1:java.lang.Runnable obtainTaskOrDeallocateWorker():0:0 -> X
    1:1:boolean tryAllocateWorker():0:0 -> Y
kotlinx.coroutines.internal.LimitedDispatcher$Worker -> e2.o$a:
    java.lang.Runnable currentTask -> e
    kotlinx.coroutines.internal.LimitedDispatcher this$0 -> f
    1:1:void <init>(kotlinx.coroutines.internal.LimitedDispatcher,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/o;Ljava/lang/Runnable;)V"}
    1:1:void run():0:0 -> run
kotlinx.coroutines.internal.LimitedDispatcherKt -> e2.p:
    1:1:void checkParallelism(int):0:0 -> a
kotlinx.coroutines.internal.LockFreeLinkedListHead -> e2.q:
    void <init>() -> <init>
    1:1:boolean isRemoved():0:0 -> u
kotlinx.coroutines.internal.LockFreeLinkedListKt -> e2.r:
    java.lang.Object CONDITION_FALSE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Object getCONDITION_FALSE():0:0 -> a
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Le2/s;"}
kotlinx.coroutines.internal.LockFreeLinkedListNode -> e2.s:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU -> f
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _removedRef$FU -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;Le2/s;)V"}
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_next$FU$p():0:0 -> m
    1:1:boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;)Z"}
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/a0;)Le2/s;"}
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;)Le2/s;"}
    1:1:void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;)V"}
    1:1:java.lang.Object getNext():0:0 -> r
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/s;"}
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode():0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/s;"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:boolean isRemoved():0:0 -> u
    1:1:boolean remove():0:0 -> v
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext():0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/s;"}
    1:1:kotlinx.coroutines.internal.Removed removed():0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/b0;"}
    1:1:int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;Le2/s;Le2/s$a;)I"}
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp -> e2.s$a:
    kotlinx.coroutines.internal.LockFreeLinkedListNode newNode -> b
    kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext -> c
    1:1:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;)V"}
    1:1:void complete(java.lang.Object,java.lang.Object):0:0 -> b
    1:1:void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;Ljava/lang/Object;)V"}
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1 -> e2.s$b:
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object get():0:0 -> get
kotlinx.coroutines.internal.LockFreeTaskQueue -> e2.t:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:boolean addLast(java.lang.Object):0:0 -> a
    1:1:void close():0:0 -> b
    1:1:int getSize():0:0 -> c
    1:1:java.lang.Object removeFirstOrNull():0:0 -> d
kotlinx.coroutines.internal.LockFreeTaskQueueCore -> e2.u:
    int capacity -> a
    boolean singleConsumer -> b
    int mask -> c
    java.util.concurrent.atomic.AtomicReferenceArray array -> d
    kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion Companion -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU -> f
    java.util.concurrent.atomic.AtomicLongFieldUpdater _state$FU -> g
    kotlinx.coroutines.internal.Symbol REMOVE_FROZEN -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,boolean):0:0 -> <init>
    1:1:int addLast(java.lang.Object):0:0 -> a
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Le2/u;"}
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Le2/u;"}
    1:1:boolean close():0:0 -> d
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)Le2/u;"}
    1:1:int getSize():0:0 -> f
    1:1:boolean isEmpty():0:0 -> g
    1:1:long markFrozen():0:0 -> h
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore next():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/u;"}
    1:1:java.lang.Object removeFirstOrNull():0:0 -> j
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Le2/u;"}
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion -> e2.u$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:int addFailReason(long):0:0 -> a
    1:1:long updateHead(long,int):0:0 -> b
    1:1:long updateTail(long,int):0:0 -> c
    1:1:long wo(long,long):0:0 -> d
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder -> e2.u$b:
    int index -> a
    1:1:void <init>(int):0:0 -> <init>
kotlinx.coroutines.internal.MainDispatcherFactory -> e2.v:
    int getLoadPriority() -> a
    java.lang.String hintOnError() -> b
    kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lz1/o1;"}
kotlinx.coroutines.internal.MainDispatcherLoader -> e2.w:
    kotlinx.coroutines.internal.MainDispatcherLoader INSTANCE -> a
    boolean FAST_SERVICE_LOADER_ENABLED -> b
    kotlinx.coroutines.MainCoroutineDispatcher dispatcher -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/o1;"}
kotlinx.coroutines.internal.MainDispatchersKt -> e2.x:
    boolean SUPPORT_MISSING -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Ljava/lang/String;)Le2/y;"}
    1:1:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Le2/y;"}
    1:1:boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/o1;)Z"}
    1:1:java.lang.Void throwMissingMainDispatcherException():0:0 -> d
    1:1:kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/v;Ljava/util/List;)Lz1/o1;"}
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher -> e2.y:
    java.lang.Throwable cause -> g
    java.lang.String errorHint -> h
    1:1:void <init>(java.lang.Throwable,java.lang.String):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Z"}
    1:1:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/o1;"}
    1:1:java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)Ljava/lang/Void;"}
    1:1:java.lang.Void missing():0:0 -> Y
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.OnUndeliveredElementKt -> e2.z:
    1:1:kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;Ljava/lang/Object;Li1/g;)Lr1/l;"}
    1:1:void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;Ljava/lang/Object;Li1/g;)V"}
    1:1:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;Ljava/lang/Object;Le2/q0;)Le2/q0;"}
    1:1:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;Ljava/lang/Object;Le2/q0;ILjava/lang/Object;)Le2/q0;"}
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1 -> e2.z$a:
    kotlin.jvm.functions.Function1 $this_bindCancellationFun -> f
    java.lang.Object $element -> g
    kotlin.coroutines.CoroutineContext $context -> h
    1:1:void <init>(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/l;Ljava/lang/Object;Li1/g;)V"}
    1:1:void invoke(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> l
kotlinx.coroutines.internal.OpDescriptor -> e2.a0:
    void <init>() -> <init>
    java.lang.Object perform(java.lang.Object) -> a
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.Removed -> e2.b0:
    kotlinx.coroutines.internal.LockFreeLinkedListNode ref -> a
    1:1:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/s;)V"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.ResizableAtomicArray -> e2.c0:
    1:1:void <init>(int):0:0 -> <init>
    1:1:int currentLength():0:0 -> a
    1:1:java.lang.Object get(int):0:0 -> b
    1:1:void setSynchronized(int,java.lang.Object):0:0 -> c
kotlinx.coroutines.internal.ScopeCoroutine -> e2.d0:
    kotlin.coroutines.Continuation uCont -> h
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Li1/d;)V"}
    1:1:void afterCompletion(java.lang.Object):0:0 -> G
    1:1:void afterResume(java.lang.Object):0:0 -> I0
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk1/e;"}
    1:1:boolean isScopedCoroutine():0:0 -> j0
kotlinx.coroutines.internal.Segment -> e2.e0:
    long id -> g
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater cleanedAndPointers$FU -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,kotlinx.coroutines.internal.Segment,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLe2/e0;I)V"}
    1:1:boolean isRemoved():0:0 -> h
    1:1:boolean decPointers$kotlinx_coroutines_core():0:0 -> m
    int getNumberOfSlots() -> n
    void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Throwable;Li1/g;)V"}
    1:1:void onSlotCleaned():0:0 -> p
    1:1:boolean tryIncPointers$kotlinx_coroutines_core():0:0 -> q
kotlinx.coroutines.internal.SegmentOrClosed -> e2.f0:
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> a
    1:1:kotlinx.coroutines.internal.Segment getSegment-impl(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Le2/e0;"}
    1:1:boolean isClosed-impl(java.lang.Object):0:0 -> c
kotlinx.coroutines.internal.StackTraceRecoveryKt -> e2.g0:
    java.lang.StackTraceElement ARTIFICIAL_FRAME -> a
    java.lang.String baseContinuationImplClassName -> b
    java.lang.String stackTraceRecoveryClassName -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Throwable recoverStackTrace(java.lang.Throwable):0:0 -> a
kotlinx.coroutines.internal.Symbol -> e2.h0:
    java.lang.String symbol -> a
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.SystemPropsKt -> e2.i0:
    1:1:int getAVAILABLE_PROCESSORS():0:0 -> a
    1:1:int systemProp(java.lang.String,int,int,int):0:0 -> b
    1:1:long systemProp(java.lang.String,long,long,long):0:0 -> c
    1:1:java.lang.String systemProp(java.lang.String):0:0 -> d
    1:1:java.lang.String systemProp(java.lang.String,java.lang.String):0:0 -> e
    1:1:boolean systemProp(java.lang.String,boolean):0:0 -> f
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object):0:0 -> g
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object):0:0 -> h
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt -> e2.j0:
    int AVAILABLE_PROCESSORS -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int getAVAILABLE_PROCESSORS():0:0 -> a
    1:1:java.lang.String systemProp(java.lang.String):0:0 -> b
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt -> e2.k0:
    1:1:int systemProp(java.lang.String,int,int,int):0:0 -> a
    1:1:long systemProp(java.lang.String,long,long,long):0:0 -> b
    1:1:java.lang.String systemProp(java.lang.String,java.lang.String):0:0 -> c
    1:1:boolean systemProp(java.lang.String,boolean):0:0 -> d
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object):0:0 -> e
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object):0:0 -> f
kotlinx.coroutines.internal.ThreadContextKt -> e2.l0:
    kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS -> a
    kotlin.jvm.functions.Function2 countAll -> b
    kotlin.jvm.functions.Function2 findOne -> c
    kotlin.jvm.functions.Function2 updateState -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Object;)V"}
    1:1:java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Object;)Ljava/lang/Object;"}
kotlinx.coroutines.internal.ThreadContextKt$countAll$1 -> e2.l0$a:
    kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Li1/g$b;)Ljava/lang/Object;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
kotlinx.coroutines.internal.ThreadContextKt$findOne$1 -> e2.l0$b:
    kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/u1;Li1/g$b;)Lz1/u1;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
kotlinx.coroutines.internal.ThreadContextKt$updateState$1 -> e2.l0$c:
    kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/p0;Li1/g$b;)Le2/p0;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> k
kotlinx.coroutines.internal.ThreadLocalKt -> e2.m0:
    1:1:java.lang.ThreadLocal commonThreadLocal(kotlinx.coroutines.internal.Symbol):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/h0;)Ljava/lang/ThreadLocal;"}
kotlinx.coroutines.internal.ThreadSafeHeap -> e2.n0:
    kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/o0;"}
    boolean isEmpty() -> b
    kotlinx.coroutines.internal.ThreadSafeHeapNode peek() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/o0;"}
    kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/o0;"}
kotlinx.coroutines.internal.ThreadSafeHeapNode -> e2.o0:
kotlinx.coroutines.internal.ThreadState -> e2.p0:
    kotlin.coroutines.CoroutineContext context -> a
    java.lang.Object[] values -> b
    kotlinx.coroutines.ThreadContextElement[] elements -> c
    int i -> d
    1:1:void <init>(kotlin.coroutines.CoroutineContext,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;I)V"}
    1:1:void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/u1;Ljava/lang/Object;)V"}
    1:1:void restore(kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;)V"}
kotlinx.coroutines.internal.UndeliveredElementException -> e2.q0:
    1:1:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
kotlinx.coroutines.intrinsics.CancellableKt -> f2.a:
    1:1:void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;Ljava/lang/Throwable;)V"}
    1:1:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/d;Li1/d;)V"}
    1:1:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Ljava/lang/Object;Li1/d;Lr1/l;)V"}
    1:1:void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Ljava/lang/Object;Li1/d;Lr1/l;ILjava/lang/Object;)V"}
kotlinx.coroutines.intrinsics.UndispatchedKt -> f2.b:
    1:1:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/p;Ljava/lang/Object;Li1/d;)V"}
    1:1:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/d0;Ljava/lang/Object;Lr1/p;)Ljava/lang/Object;"}
kotlinx.coroutines.scheduling.CoroutineScheduler -> g2.a:
    int corePoolSize -> e
    int maxPoolSize -> f
    long idleWorkerKeepAliveNs -> g
    java.lang.String schedulerName -> h
    kotlinx.coroutines.scheduling.GlobalQueue globalCpuQueue -> i
    kotlinx.coroutines.scheduling.GlobalQueue globalBlockingQueue -> j
    kotlinx.coroutines.internal.ResizableAtomicArray workers -> k
    kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion -> l
    java.util.concurrent.atomic.AtomicLongFieldUpdater parkedWorkersStack$FU -> m
    java.util.concurrent.atomic.AtomicLongFieldUpdater controlState$FU -> n
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isTerminated$FU -> o
    kotlinx.coroutines.internal.Symbol NOT_IN_STACK -> p
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,long,java.lang.String):0:0 -> <init>
    1:1:void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/a$c;II)V"}
    1:1:void runSafely(kotlinx.coroutines.scheduling.Task):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/h;)V"}
    1:1:void shutdown(long):0:0 -> D
    1:1:void signalBlockingWork(long,boolean):0:0 -> H
    1:1:void signalCpuWork():0:0 -> I
    1:1:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/a$c;Lg2/h;Z)Lg2/h;"}
    1:1:boolean tryCreateWorker(long):0:0 -> Q
    1:1:boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/a;JILjava/lang/Object;)Z"}
    1:1:boolean tryUnpark():0:0 -> S
    1:1:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getControlState$FU$p():0:0 -> a
    1:1:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/h;)Z"}
    1:1:void close():0:0 -> close
    1:1:int createNewWorker():0:0 -> d
    1:1:kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Lg2/i;)Lg2/h;"}
    1:1:void execute(java.lang.Runnable):0:0 -> execute
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg2/a$c;"}
    1:1:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Lg2/i;Z)V"}
    1:1:void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/a;Ljava/lang/Runnable;Lg2/i;ZILjava/lang/Object;)V"}
    1:1:boolean isTerminated():0:0 -> l
    1:1:int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/a$c;)I"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg2/a$c;"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/a$c;)Z"}
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion -> g2.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings -> g2.a$b:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker -> g2.a$c:
    kotlinx.coroutines.scheduling.WorkQueue localQueue -> e
    kotlin.jvm.internal.Ref$ObjectRef stolenTask -> f
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState state -> g
    long terminationDeadline -> h
    long minDelayUntilStealableTaskNs -> i
    int rngState -> j
    boolean mayHaveLocalTasks -> k
    kotlinx.coroutines.scheduling.CoroutineScheduler this$0 -> l
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater workerCtl$FU -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/a;)V"}
    2:2:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/a;I)V"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/a$c;)Lg2/a;"}
    1:1:void afterTask(int):0:0 -> b
    1:1:void beforeTask(int):0:0 -> c
    1:1:void executeTask(kotlinx.coroutines.scheduling.Task):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/h;)V"}
    1:1:kotlinx.coroutines.scheduling.Task findAnyTask(boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg2/h;"}
    1:1:kotlinx.coroutines.scheduling.Task findBlockingTask():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg2/h;"}
    1:1:kotlinx.coroutines.scheduling.Task findTask(boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg2/h;"}
    1:1:int getIndexInArray():0:0 -> h
    1:1:java.lang.Object getNextParkedWorker():0:0 -> i
    1:1:java.util.concurrent.atomic.AtomicIntegerFieldUpdater getWorkerCtl$FU():0:0 -> j
    1:1:void idleReset(int):0:0 -> k
    1:1:boolean inStack():0:0 -> l
    1:1:int nextInt(int):0:0 -> m
    1:1:void park():0:0 -> n
    1:1:kotlinx.coroutines.scheduling.Task pollGlobalQueues():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg2/h;"}
    1:1:void runWorker():0:0 -> p
    1:1:void setIndexInArray(int):0:0 -> q
    1:1:void setNextParkedWorker(java.lang.Object):0:0 -> r
    1:1:void run():0:0 -> run
    1:1:boolean tryAcquireCpuPermit():0:0 -> s
    1:1:void tryPark():0:0 -> t
    1:1:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/a$d;)Z"}
    1:1:kotlinx.coroutines.scheduling.Task trySteal(int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lg2/h;"}
    1:1:void tryTerminateWorker():0:0 -> w
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState -> g2.a$d:
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED -> e
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING -> f
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING -> g
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT -> h
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED -> i
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lg2/a$d;"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lg2/a$d;"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lg2/a$d;"}
kotlinx.coroutines.scheduling.DefaultIoScheduler -> g2.b:
    kotlinx.coroutines.scheduling.DefaultIoScheduler INSTANCE -> h
    kotlinx.coroutines.CoroutineDispatcher default -> i
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:void close():0:0 -> close
    1:1:void execute(java.lang.Runnable):0:0 -> execute
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.DefaultScheduler -> g2.c:
    kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void close():0:0 -> close
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.GlobalQueue -> g2.d:
    1:1:void <init>():0:0 -> <init>
kotlinx.coroutines.scheduling.NanoTimeSource -> g2.e:
    kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:long nanoTime():0:0 -> a
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher -> g2.f:
    int corePoolSize -> h
    int maxPoolSize -> i
    long idleWorkerKeepAliveNs -> j
    java.lang.String schedulerName -> k
    kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler -> l
    1:1:void <init>(int,int,long,java.lang.String):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler():0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg2/a;"}
    1:1:void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Lg2/i;Z)V"}
kotlinx.coroutines.scheduling.SchedulerTimeSource -> g2.g:
    void <init>() -> <init>
    long nanoTime() -> a
kotlinx.coroutines.scheduling.Task -> g2.h:
    long submissionTime -> e
    kotlinx.coroutines.scheduling.TaskContext taskContext -> f
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(long,kotlinx.coroutines.scheduling.TaskContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLg2/i;)V"}
kotlinx.coroutines.scheduling.TaskContext -> g2.i:
    int getTaskMode() -> a
    void afterTask() -> b
kotlinx.coroutines.scheduling.TaskContextImpl -> g2.j:
    int taskMode -> a
    1:1:void <init>(int):0:0 -> <init>
    1:1:int getTaskMode():0:0 -> a
    1:1:void afterTask():0:0 -> b
kotlinx.coroutines.scheduling.TaskImpl -> g2.k:
    java.lang.Runnable block -> g
    1:1:void <init>(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;JLg2/i;)V"}
    1:1:void run():0:0 -> run
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.TasksKt -> g2.l:
    java.lang.String DEFAULT_SCHEDULER_NAME -> a
    long WORK_STEALING_TIME_RESOLUTION_NS -> b
    int CORE_POOL_SIZE -> c
    int MAX_POOL_SIZE -> d
    long IDLE_WORKER_KEEP_ALIVE_NS -> e
    kotlinx.coroutines.scheduling.SchedulerTimeSource schedulerTimeSource -> f
    kotlinx.coroutines.scheduling.TaskContext NonBlockingContext -> g
    kotlinx.coroutines.scheduling.TaskContext BlockingContext -> h
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.scheduling.UnlimitedIoScheduler -> g2.m:
    kotlinx.coroutines.scheduling.UnlimitedIoScheduler INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lz1/a0;"}
kotlinx.coroutines.scheduling.WorkQueue -> g2.n:
    java.util.concurrent.atomic.AtomicReferenceArray buffer -> a
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater lastScheduledTask$FU -> b
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater producerIndex$FU -> c
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumerIndex$FU -> d
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater blockingTasksInBuffer$FU -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/h;Z)Lg2/h;"}
    1:1:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/h;)Lg2/h;"}
    1:1:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/h;)V"}
    1:1:int getBufferSize():0:0 -> d
    1:1:int getSize$kotlinx_coroutines_core():0:0 -> e
    1:1:void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/d;)V"}
    1:1:kotlinx.coroutines.scheduling.Task poll():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg2/h;"}
    1:1:kotlinx.coroutines.scheduling.Task pollBlocking():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg2/h;"}
    1:1:kotlinx.coroutines.scheduling.Task pollBuffer():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg2/h;"}
    1:1:boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg2/d;)Z"}
    1:1:kotlinx.coroutines.scheduling.Task pollWithExclusiveMode(boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg2/h;"}
    1:1:kotlinx.coroutines.scheduling.Task stealWithExclusiveMode(int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lg2/h;"}
    1:1:kotlinx.coroutines.scheduling.Task tryExtractFromTheMiddle(int,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Lg2/h;"}
    1:1:long trySteal(int,kotlin.jvm.internal.Ref$ObjectRef):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILs1/r;)J"}
    1:1:long tryStealLastScheduled(int,kotlin.jvm.internal.Ref$ObjectRef):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILs1/r;)J"}
kotlinx.coroutines.selects.SelectInstance -> h2.a:
org.microg.safeparcel.SafeParcelReader -> i2.a:
    1:1:int readSize(android.os.Parcel,int):0:0 -> a
    1:1:java.lang.String readString(android.os.Parcel,int):0:0 -> b
vn.hunghd.flutterdownloader.DownloadStatus -> j2.a:
    vn.hunghd.flutterdownloader.DownloadStatus UNDEFINED -> e
    vn.hunghd.flutterdownloader.DownloadStatus ENQUEUED -> f
    vn.hunghd.flutterdownloader.DownloadStatus RUNNING -> g
    vn.hunghd.flutterdownloader.DownloadStatus COMPLETE -> h
    vn.hunghd.flutterdownloader.DownloadStatus FAILED -> i
    vn.hunghd.flutterdownloader.DownloadStatus CANCELED -> j
    vn.hunghd.flutterdownloader.DownloadStatus PAUSED -> k
    vn.hunghd.flutterdownloader.DownloadStatus[] $VALUES -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:vn.hunghd.flutterdownloader.DownloadStatus[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lj2/a;"}
    1:1:vn.hunghd.flutterdownloader.DownloadStatus valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj2/a;"}
    1:1:vn.hunghd.flutterdownloader.DownloadStatus[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lj2/a;"}
vn.hunghd.flutterdownloader.DownloadTask -> j2.b:
    int primaryId -> a
    java.lang.String taskId -> b
    vn.hunghd.flutterdownloader.DownloadStatus status -> c
    int progress -> d
    java.lang.String url -> e
    java.lang.String filename -> f
    java.lang.String savedDir -> g
    java.lang.String headers -> h
    java.lang.String mimeType -> i
    boolean resumable -> j
    boolean showNotification -> k
    boolean openFileFromNotification -> l
    long timeCreated -> m
    boolean saveInPublicStorage -> n
    boolean allowCellular -> o
    1:1:void <init>(int,java.lang.String,vn.hunghd.flutterdownloader.DownloadStatus,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,long,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Lj2/a;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZZJZZ)V"}
    1:1:boolean getAllowCellular():0:0 -> a
    1:1:java.lang.String getFilename():0:0 -> b
    1:1:java.lang.String getHeaders():0:0 -> c
    1:1:java.lang.String getMimeType():0:0 -> d
    1:1:boolean getOpenFileFromNotification():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int getPrimaryId():0:0 -> f
    1:1:int getProgress():0:0 -> g
    1:1:boolean getResumable():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean getSaveInPublicStorage():0:0 -> i
    1:1:java.lang.String getSavedDir():0:0 -> j
    1:1:boolean getShowNotification():0:0 -> k
    1:1:vn.hunghd.flutterdownloader.DownloadStatus getStatus():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj2/a;"}
    1:1:java.lang.String getTaskId():0:0 -> m
    1:1:long getTimeCreated():0:0 -> n
    1:1:java.lang.String getUrl():0:0 -> o
    1:1:java.lang.String toString():0:0 -> toString
vn.hunghd.flutterdownloader.DownloadWorker -> vn.hunghd.flutterdownloader.DownloadWorker:
    vn.hunghd.flutterdownloader.DownloadWorker$Companion Companion -> A
    java.lang.String TAG -> B
    java.util.concurrent.atomic.AtomicBoolean isolateStarted -> C
    java.util.ArrayDeque isolateQueue -> D
    io.flutter.embedding.engine.FlutterEngine backgroundFlutterEngine -> E
    javax.net.ssl.HostnameVerifier DO_NOT_VERIFY -> F
    java.util.regex.Pattern charsetPattern -> f
    java.util.regex.Pattern filenameStarPattern -> g
    java.util.regex.Pattern filenamePattern -> h
    io.flutter.plugin.common.MethodChannel backgroundChannel -> i
    vn.hunghd.flutterdownloader.TaskDbHelper dbHelper -> j
    vn.hunghd.flutterdownloader.TaskDao taskDao -> k
    boolean showNotification -> l
    boolean clickToOpenDownloadedFile -> m
    boolean debug -> n
    boolean ignoreSsl -> o
    int lastProgress -> p
    int primaryId -> q
    java.lang.String msgStarted -> r
    java.lang.String msgInProgress -> s
    java.lang.String msgCanceled -> t
    java.lang.String msgFailed -> u
    java.lang.String msgPaused -> v
    java.lang.String msgComplete -> w
    long lastCallUpdateNotification -> x
    int step -> y
    boolean saveInPublicStorage -> z
    1:1:android.net.Uri createFileInPublicDownloadsDir(java.lang.String,java.lang.String):0:0 -> A
    1:1:void downloadFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int):0:0 -> B
    1:1:java.lang.String getCharsetFromContentType(java.lang.String):0:0 -> C
    1:1:java.lang.String getContentTypeWithoutCharset(java.lang.String):0:0 -> D
    1:1:java.lang.String getFileNameFromContentDisposition(java.lang.String,java.lang.String):0:0 -> E
    1:1:java.lang.String getMediaStoreEntryPathApi29(android.net.Uri):0:0 -> F
    1:1:int getNotificationIconRes():0:0 -> G
    1:1:boolean isExternalStoragePath(java.lang.String):0:0 -> H
    1:1:boolean isImageOrVideoFile(java.lang.String):0:0 -> I
    1:1:void log(java.lang.String):0:0 -> J
    1:1:void logError(java.lang.String):0:0 -> K
    1:1:void sendUpdateProcessEvent(vn.hunghd.flutterdownloader.DownloadStatus,int):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj2/a;I)V"}
    1:1:void sendUpdateProcessEvent$lambda$5$lambda$4(vn.hunghd.flutterdownloader.DownloadWorker,java.util.List):0:0 -> M
    1:1:void setupHeaders(java.net.HttpURLConnection,java.lang.String):0:0 -> N
    1:1:void setupNotification(android.content.Context):0:0 -> O
    1:1:long setupPartialDownloadedDataHeader(java.net.HttpURLConnection,java.lang.String,java.lang.String):0:0 -> P
    1:1:void startBackgroundIsolate(android.content.Context):0:0 -> Q
    1:1:void updateNotification(android.content.Context,java.lang.String,vn.hunghd.flutterdownloader.DownloadStatus,int,android.app.PendingIntent,boolean):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;Lj2/a;ILandroid/app/PendingIntent;Z)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void onStopped():0:0 -> m
    1:1:androidx.work.ListenableWorker$Result doWork():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/work/c$a;"}
    1:1:boolean $r8$lambda$QgWKTAjBEegz10hKLGVcVMOt1Ko(java.lang.String,javax.net.ssl.SSLSession):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$Y32ba8a-1KsD0N0E3CLZN5Beido(vn.hunghd.flutterdownloader.DownloadWorker,android.content.Context):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$mpjN0xClOzj82xfkEVKpXOYwaGo(vn.hunghd.flutterdownloader.DownloadWorker,java.util.List):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean DO_NOT_VERIFY$lambda$9(java.lang.String,javax.net.ssl.SSLSession):0:0 -> v
    1:1:void _init_$lambda$8(vn.hunghd.flutterdownloader.DownloadWorker,android.content.Context):0:0 -> w
    1:1:void addImageOrVideoToGallery(java.lang.String,java.lang.String,java.lang.String):0:0 -> x
    1:1:void cleanUp():0:0 -> y
    1:1:java.io.File createFileInAppSpecificDir(java.lang.String,java.lang.String):0:0 -> z
vn.hunghd.flutterdownloader.DownloadWorker$$ExternalSyntheticApiModelOutline0 -> j2.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:long vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticApiModelOutline$3$5b8f9fa0d61c192f1427d8385c43ccfaf65420d7d3c010231586d044598aa799$0.m(java.net.HttpURLConnection):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
vn.hunghd.flutterdownloader.DownloadWorker$$ExternalSyntheticApiModelOutline1 -> j2.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticApiModelOutline$3$f46419929053aa9de2af993bb98c5608e86cae74191d27734d3d015104df701d$0.m(android.app.NotificationChannel,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
vn.hunghd.flutterdownloader.DownloadWorker$$ExternalSyntheticApiModelOutline2 -> j2.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticApiModelOutline$3$f46419929053aa9de2af993bb98c5608e86cae74191d27734d3d015104df701d$1.m(android.app.NotificationChannel,android.net.Uri,android.media.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
vn.hunghd.flutterdownloader.DownloadWorker$$ExternalSyntheticApiModelOutline3 -> j2.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.net.Uri vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticApiModelOutline$4$a63349f92b3cecae1741184ebf537c3c95e1d0b29b23f6d2d86dfc353706ceb2$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
vn.hunghd.flutterdownloader.DownloadWorker$$ExternalSyntheticApiModelOutline4 -> j2.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.NotificationChannel vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticApiModelOutline$7$f46419929053aa9de2af993bb98c5608e86cae74191d27734d3d015104df701d$0.m(java.lang.String,java.lang.CharSequence,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
vn.hunghd.flutterdownloader.DownloadWorker$$ExternalSyntheticApiModelOutline5 -> j2.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticApiModelOutline$7$f46419929053aa9de2af993bb98c5608e86cae74191d27734d3d015104df701d$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
vn.hunghd.flutterdownloader.DownloadWorker$$ExternalSyntheticLambda6 -> j2.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    vn.hunghd.flutterdownloader.DownloadWorker vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticLambda$1$67317f413d9a9d0bed29f3201b38112c72f4ab7c1bc1f3f3ff03fb284bb9a845$0.f$0 -> e
    android.content.Context vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticLambda$1$67317f413d9a9d0bed29f3201b38112c72f4ab7c1bc1f3f3ff03fb284bb9a845$0.f$1 -> f
    1:1:void vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticLambda$1$67317f413d9a9d0bed29f3201b38112c72f4ab7c1bc1f3f3ff03fb284bb9a845$0.<init>(vn.hunghd.flutterdownloader.DownloadWorker,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticLambda$1$67317f413d9a9d0bed29f3201b38112c72f4ab7c1bc1f3f3ff03fb284bb9a845$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
vn.hunghd.flutterdownloader.DownloadWorker$$ExternalSyntheticLambda7 -> j2.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticLambda$1$d641b033dfecb1ed3491b1dcc2574bbce37fee03fa995cd5db3cb010b3138c81$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticLambda$1$d641b033dfecb1ed3491b1dcc2574bbce37fee03fa995cd5db3cb010b3138c81$0.verify(java.lang.String,javax.net.ssl.SSLSession):0:0 -> verify
      # {"id":"com.android.tools.r8.synthesized"}
vn.hunghd.flutterdownloader.DownloadWorker$$ExternalSyntheticLambda8 -> j2.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    vn.hunghd.flutterdownloader.DownloadWorker vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticLambda$2$9d420740454a6199e7b39a05a08f7c389b32f3423b6b8d03b4c7d6cbf89e6730$0.f$0 -> e
    java.util.List vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticLambda$2$9d420740454a6199e7b39a05a08f7c389b32f3423b6b8d03b4c7d6cbf89e6730$0.f$1 -> f
    1:1:void vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticLambda$2$9d420740454a6199e7b39a05a08f7c389b32f3423b6b8d03b4c7d6cbf89e6730$0.<init>(vn.hunghd.flutterdownloader.DownloadWorker,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void vn.hunghd.flutterdownloader.DownloadWorker$$InternalSyntheticLambda$2$9d420740454a6199e7b39a05a08f7c389b32f3423b6b8d03b4c7d6cbf89e6730$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
vn.hunghd.flutterdownloader.DownloadWorker$Companion -> vn.hunghd.flutterdownloader.DownloadWorker$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:void access$trustAllHosts(vn.hunghd.flutterdownloader.DownloadWorker$Companion):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lvn/hunghd/flutterdownloader/DownloadWorker$a;)V"}
    1:1:void trustAllHosts():0:0 -> b
vn.hunghd.flutterdownloader.DownloadWorker$Companion$trustAllHosts$trustManagers$1 -> vn.hunghd.flutterdownloader.DownloadWorker$a$a:
    java.lang.String $tag -> a
vn.hunghd.flutterdownloader.DownloadWorker$WhenMappings -> vn.hunghd.flutterdownloader.DownloadWorker$b:
    int[] $EnumSwitchMapping$0 -> a
vn.hunghd.flutterdownloader.FlutterDownloaderPlugin -> vn.hunghd.flutterdownloader.a:
    io.flutter.plugin.common.MethodChannel flutterChannel -> a
    vn.hunghd.flutterdownloader.TaskDao taskDao -> b
    android.content.Context context -> c
    long callbackHandle -> d
    int step -> e
    int debugMode -> f
    int ignoreSsl -> g
    java.lang.Object initializationLock -> h
    vn.hunghd.flutterdownloader.FlutterDownloaderPlugin$Companion Companion -> i
    1:1:androidx.work.WorkRequest buildRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,int,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZZZZIZ)Le0/a0;"}
    1:1:void cancel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void cancelAll(io.flutter.plugin.common.MethodChannel$Result):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void deleteFileInMediaStore(java.io.File):0:0 -> d
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    1:1:void enqueue(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv0/a$b;)V"}
    1:1:void initialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void loadTasks(io.flutter.plugin.common.MethodChannel$Result):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/j$d;)V"}
    1:1:void loadTasksWithRawQuery(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lz0/b;)V"}
    1:1:void open(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void pause(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void registerCallback(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void remove(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:java.lang.Object requireArgument(io.flutter.plugin.common.MethodCall,java.lang.String):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Ljava/lang/String;)Ljava/lang/Object;"}
    1:1:android.content.Context requireContext():0:0 -> r
    1:1:void resume(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void retry(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/i;Lz0/j$d;)V"}
    1:1:void sendUpdateProgress(java.lang.String,vn.hunghd.flutterdownloader.DownloadStatus,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lj2/a;I)V"}
vn.hunghd.flutterdownloader.FlutterDownloaderPlugin$Companion -> vn.hunghd.flutterdownloader.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
vn.hunghd.flutterdownloader.IntentUtils -> j2.l:
    vn.hunghd.flutterdownloader.IntentUtils INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:android.content.Intent buildIntent(android.content.Context,java.io.File,java.lang.String):0:0 -> a
    1:1:boolean canBeHandled(android.content.Context,android.content.Intent):0:0 -> b
    1:1:android.content.Intent validatedFileIntent(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
vn.hunghd.flutterdownloader.R$string -> j2.m:
    int flutter_downloader_notification_canceled -> a
    int flutter_downloader_notification_channel_description -> b
    int flutter_downloader_notification_channel_name -> c
    int flutter_downloader_notification_complete -> d
    int flutter_downloader_notification_failed -> e
    int flutter_downloader_notification_in_progress -> f
    int flutter_downloader_notification_paused -> g
    int flutter_downloader_notification_started -> h
vn.hunghd.flutterdownloader.TaskDao -> j2.n:
    vn.hunghd.flutterdownloader.TaskDbHelper dbHelper -> a
    java.lang.String[] projection -> b
    1:1:void <init>(vn.hunghd.flutterdownloader.TaskDbHelper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lvn/hunghd/flutterdownloader/b;)V"}
    1:1:void deleteTask(java.lang.String):0:0 -> a
    1:1:void insertOrUpdateNewTask(java.lang.String,java.lang.String,vn.hunghd.flutterdownloader.DownloadStatus,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Lj2/a;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZZZ)V"}
    1:1:java.util.List loadAllTasks():0:0 -> c
    1:1:vn.hunghd.flutterdownloader.DownloadTask loadTask(java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj2/b;"}
    1:1:java.util.List loadTasksWithRawQuery(java.lang.String):0:0 -> e
    1:1:vn.hunghd.flutterdownloader.DownloadTask parseCursor(android.database.Cursor):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/database/Cursor;)Lj2/b;"}
    1:1:void updateTask(java.lang.String,vn.hunghd.flutterdownloader.DownloadStatus,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lj2/a;I)V"}
    1:1:void updateTask(java.lang.String,java.lang.String,vn.hunghd.flutterdownloader.DownloadStatus,int,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Lj2/a;IZ)V"}
    1:1:void updateTask(java.lang.String,java.lang.String,java.lang.String):0:0 -> i
    1:1:void updateTask(java.lang.String,boolean):0:0 -> j
vn.hunghd.flutterdownloader.TaskDbHelper -> vn.hunghd.flutterdownloader.b:
    vn.hunghd.flutterdownloader.TaskDbHelper$Companion Companion -> e
    vn.hunghd.flutterdownloader.TaskDbHelper instance -> f
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ls1/g;)V"}
    1:1:vn.hunghd.flutterdownloader.TaskDbHelper access$getInstance$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lvn/hunghd/flutterdownloader/b;"}
    1:1:void access$setInstance$cp(vn.hunghd.flutterdownloader.TaskDbHelper):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lvn/hunghd/flutterdownloader/b;)V"}
vn.hunghd.flutterdownloader.TaskDbHelper$Companion -> vn.hunghd.flutterdownloader.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls1/g;)V"}
    1:1:vn.hunghd.flutterdownloader.TaskDbHelper getInstance(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lvn/hunghd/flutterdownloader/b;"}
