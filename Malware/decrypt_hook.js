Java.perform(function () {
    const Decrypt = Java.use("com.errorforcode.netix.Utils.Encrypt.Decrypt");
    
    // Hook the native function
    const nativeGetSecretKey = Module.findExportByName("libnetix.so", "Java_com_errorforcode_netix_Utils_Encrypt_Decrypt_getSecretKey");
    
    if (nativeGetSecretKey) {
        Interceptor.attach(nativeGetSecretKey, {
            onLeave: function (retval) {
                // Convert jstring to readable string
                const env = Java.vm.getEnv();
                const key = env.getStringUtfChars(retval, null).readCString();
                console.log("\n[+] REAL SECRET KEY:", key, "\n");
                
                // Optional: Modify the return value (if needed)
                // const newKey = "HACKED_KEY_123";
                // const modifiedKey = env.newStringUtf(newKey);
                // retval.replace(modifiedKey);
            }
        });
    } else {
        console.error("[-] Error: libnetix.so or getSecretKey() not found!");
    }
});
